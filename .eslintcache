[{"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\auth\\SignUp.js":"1","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarPersonal.js":"2","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\Schedular\\CalendarModal.js":"3","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\members\\TeamMembers.js":"4","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarProfile.js":"5","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarTeams.js":"6","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js":"7","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Discussion.js":"8","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SIdebarTimeline.js":"9","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\Board.js":"10","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js":"11","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\notification\\Notification.js":"12","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\TimelineEdit.js":"13","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\Timeline.js":"14","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Delete.js":"15","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\index.js":"16","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\home\\Home.js":"17","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\profile\\Endo.js":"18","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Chat.js":"19","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\DownloadImageModal.js":"20","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\slogger\\Slogger.js":"21","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js":"22","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\context\\AuthContext.js":"23","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\navBar\\NavBar.js":"24","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\profile\\EndoCards.js":"25","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\Schedular\\TeamSchedular.js":"26","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Material.js":"27","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\firebase.js":"28","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\helpPage\\EmailDialog.js":"29","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\TeamCard.js":"30","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\BoardSection.js":"31","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\TeamTodoCard.js":"32","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\helpPage\\HelpPage.js":"33","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Dialog.js":"34","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\BoardTodo.js":"35","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\snackbar\\SnackBar.js":"36","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\profile\\Feedback.js":"37","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\TodoCard.js":"38","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\App.js":"39","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\slogger\\ContactUs.js":"40","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\slogger\\Extension.js":"41"},{"size":16600,"mtime":1622362119303,"results":"42","hashOfConfig":"43"},{"size":12112,"mtime":1622362119839,"results":"44","hashOfConfig":"43"},{"size":9923,"mtime":1622362119259,"results":"45","hashOfConfig":"43"},{"size":7116,"mtime":1622362119811,"results":"46","hashOfConfig":"43"},{"size":17564,"mtime":1622362119852,"results":"47","hashOfConfig":"43"},{"size":18491,"mtime":1622364036386,"results":"48","hashOfConfig":"43"},{"size":41705,"mtime":1622364120241,"results":"49","hashOfConfig":"43"},{"size":15803,"mtime":1622364361196,"results":"50","hashOfConfig":"43"},{"size":10530,"mtime":1622364825490,"results":"51","hashOfConfig":"43"},{"size":5628,"mtime":1622364912372,"results":"52","hashOfConfig":"43"},{"size":31040,"mtime":1622370620285,"results":"53","hashOfConfig":"43"},{"size":10968,"mtime":1623591046741,"results":"54","hashOfConfig":"43"},{"size":7003,"mtime":1622372167989,"results":"55","hashOfConfig":"43"},{"size":11268,"mtime":1623591498714,"results":"56","hashOfConfig":"43"},{"size":8452,"mtime":1622372445923,"results":"57","hashOfConfig":"43"},{"size":465,"mtime":1622362119925,"results":"58","hashOfConfig":"43"},{"size":11272,"mtime":1622362119467,"results":"59","hashOfConfig":"43"},{"size":1958,"mtime":1622362119516,"results":"60","hashOfConfig":"43"},{"size":8968,"mtime":1622362119604,"results":"61","hashOfConfig":"43"},{"size":6787,"mtime":1622362119766,"results":"62","hashOfConfig":"43"},{"size":19750,"mtime":1623599562646,"results":"63","hashOfConfig":"43"},{"size":3314,"mtime":1622362119650,"results":"64","hashOfConfig":"43"},{"size":1128,"mtime":1622362119901,"results":"65","hashOfConfig":"43"},{"size":8078,"mtime":1623591181682,"results":"66","hashOfConfig":"43"},{"size":3591,"mtime":1622362119524,"results":"67","hashOfConfig":"43"},{"size":3727,"mtime":1622362119283,"results":"68","hashOfConfig":"43"},{"size":17173,"mtime":1622362119658,"results":"69","hashOfConfig":"43"},{"size":530,"mtime":1622362119910,"results":"70","hashOfConfig":"43"},{"size":2812,"mtime":1622362119431,"results":"71","hashOfConfig":"43"},{"size":4269,"mtime":1622362119705,"results":"72","hashOfConfig":"43"},{"size":11474,"mtime":1622362119365,"results":"73","hashOfConfig":"43"},{"size":20221,"mtime":1622362119730,"results":"74","hashOfConfig":"43"},{"size":16981,"mtime":1622362119442,"results":"75","hashOfConfig":"43"},{"size":6394,"mtime":1622362119627,"results":"76","hashOfConfig":"43"},{"size":19285,"mtime":1622362119380,"results":"77","hashOfConfig":"43"},{"size":1135,"mtime":1622362119594,"results":"78","hashOfConfig":"43"},{"size":2206,"mtime":1622362119532,"results":"79","hashOfConfig":"43"},{"size":9856,"mtime":1622362119745,"results":"80","hashOfConfig":"43"},{"size":1715,"mtime":1623596078497,"results":"81","hashOfConfig":"43"},{"size":2367,"mtime":1623599038779,"results":"82","hashOfConfig":"43"},{"size":1915,"mtime":1623599838383,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},"v7u82j",{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"106"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"112","usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\auth\\SignUp.js",["183","184","185","186","187","188","189","190"],"import { Button, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./style.css\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { db } from \"../../firebase\";\r\nimport signUpVideo from \"../../assets/videos/Gaulois.mp4\";\r\nimport signUpImage from \"../../assets/images/signUpMainLogo.png\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport signUpLoader from \"../../assets/images/signUpLoader.gif\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction SignUp() {\r\n  const [authToggle, setAuthToggle] = useState(false);\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [passwordVisibility, setPasswordVisibility] = useState(\"password\");\r\n  const [email, setEmail] = useState(\"\");\r\n  //const [firstName, setFirstName] = useState(\"\");\r\n  //const [lastName, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [userEmailVerified, setUserEmailVerified] = useState(false);\r\n  const [pleaseVerified, setPleaseVerified] = useState(false);\r\n  const { signUp, signIn, currentUser } = useAuth();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleChange = (set, value) => {\r\n    set(value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleSignUp = async () => {\r\n    if (\r\n      email === \"\" ||\r\n      password.length < 6 ||\r\n      // firstName === \"\" ||\r\n      confirmPassword.length < 6 ||\r\n      password !== confirmPassword\r\n    ) {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        const USER = await signUp(email, password);\r\n        if (USER.user.emailVerified) {\r\n          setUserEmailVerified(false);\r\n          db.collection(\"users\").doc(USER?.uid).collection(\"profile\").add({\r\n            email: email,\r\n            // firstName: firstName,\r\n            //lastName: lastName,\r\n          });\r\n          setLoader(false);\r\n          history.push(\"/home\");\r\n        } else {\r\n          setLoader(false);\r\n          setUserEmailVerified(true);\r\n          USER.user.sendEmailVerification();\r\n          setAuthToggle(true);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoader(false);\r\n        if (error.code === \"auth/email-already-in-use\") {\r\n          setAuthToggle(true);\r\n          setUserEmailVerified(true);\r\n          setPleaseVerified(true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    if (email === \"\" || password === \"\") {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        const USER = await signIn(email, password);\r\n        if (USER.user.emailVerified) {\r\n          history.push(\"/home\");\r\n        } else {\r\n          setPleaseVerified(true);\r\n        }\r\n        setLoader(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoader(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    const _visibility = !visibility;\r\n    setVisibility(_visibility);\r\n    setPasswordVisibility(_visibility ? \"text\" : \"password\");\r\n  };\r\n\r\n  const handleAuthToggle = () => {\r\n    setAuthToggle(!authToggle);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n    setError(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (currentUser !== null && currentUser.user !== undefined) {\r\n      if (currentUser.user.emailVerified) {\r\n        history.push(\"/home\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      {loader ? (\r\n        <div className=\"loaderContainer\">\r\n          <img className=\"signUpLoader\" src={signUpLoader} />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <video autoPlay loop muted className=\"signUpVideo\">\r\n        <source src={signUpVideo} type=\"video/mp4\"></source>\r\n      </video>\r\n      <Alaric>\r\n        <h1>\r\n          HELLO, <br />I AM <span className=\"highlight\">ALARIC </span>\r\n          <br />\r\n          WELCOME TO <span className=\"highlight\">SLOGGER </span>\r\n        </h1>\r\n      </Alaric>\r\n      {authToggle ? (\r\n        <SignUpBox>\r\n          <SignUpForm>\r\n            {/* <img src={signUpImage} /> */}\r\n            <h2 onClick={() => history.push(\"/\")}>SLOGGER</h2>\r\n            <div className=\"signUpFormBottom\">\r\n              {userEmailVerified && (\r\n                <h4\r\n                  style={{\r\n                    color: \"rgb(5, 185, 125)\",\r\n                    padding: \"0.5rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {pleaseVerified\r\n                    ? \"Please verify account before sign in\"\r\n                    : \"Check your mail for verification\"}\r\n                </h4>\r\n              )}\r\n\r\n              <CustomTooltip\r\n                title=\"Alaric : Enter your email.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <AccountBoxIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric : Password please, Hope you remember.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    autocomplete=\"new-password\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) => handleChange(setPassword, e.target.value)}\r\n                  ></input>\r\n                  {visibility ? (\r\n                    <VisibilityIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOffIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CustomTooltip>\r\n\r\n              <Button\r\n                style={{\r\n                  width: \"60%\",\r\n                  marginTop: \"1rem\",\r\n                  color: \"#fff\",\r\n                  background: \"rgb(5, 185, 125)\",\r\n                }}\r\n                onClick={() => handleSignIn()}\r\n              >\r\n                Let's Slog\r\n              </Button>\r\n\r\n              {error ? (\r\n                <p\r\n                  style={{\r\n                    color: \"red\",\r\n                    padding: \"0.5rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Alaric: Please fill form correctly.\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </SignUpForm>\r\n          <div className=\"footer\">\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Not a Slogger?{\" \"}\r\n              <span\r\n                style={{ color: \"rgb(0, 128, 85)\", cursor: \"pointer\" }}\r\n                onClick={() => handleAuthToggle()}\r\n              >\r\n                Register\r\n              </span>\r\n            </p>\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Need Help?\r\n            </p>\r\n          </div>\r\n        </SignUpBox>\r\n      ) : (\r\n        <SignUpBox>\r\n          <SignUpForm>\r\n            <h2 onClick={() => history.push(\"/\")}>SLOGGER</h2>\r\n            <div className=\"signUpFormBottom\">\r\n              <CustomTooltip\r\n                title=\"Alaric: Enter a valid email, It's good for future.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <AccountBoxIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric: Make sure your password is at least 6 letters.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    className=\"inputSignUp\"\r\n                    autocomplete=\"new-password\"\r\n                    onChange={(e) => handleChange(setPassword, e.target.value)}\r\n                  ></input>\r\n                  {visibility ? (\r\n                    <VisibilityIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOffIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric: Make sure to write same password.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Confirm Password\"\r\n                    value={confirmPassword}\r\n                    autoComplete=\"off\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) =>\r\n                      handleChange(setConfirmPassword, e.target.value)\r\n                    }\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n\r\n              <Button\r\n                style={{\r\n                  width: \"60%\",\r\n                  marginTop: \"1rem\",\r\n                  color: \"#fff\",\r\n                  background: \"rgb(5, 185, 125)\",\r\n                }}\r\n                onClick={() => handleSignUp()}\r\n              >\r\n                Register\r\n              </Button>\r\n\r\n              {error ? (\r\n                <p\r\n                  style={{\r\n                    color: \"red\",\r\n                    padding: \"0.5rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Alaric: Please give a valid email and min 6 digit password\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </SignUpForm>\r\n          <div className=\"footer\">\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Already a Slogger?{\" \"}\r\n              <span\r\n                style={{ color: \"rgb(0, 128, 85)\", cursor: \"pointer\" }}\r\n                onClick={() => handleAuthToggle()}\r\n              >\r\n                Sign In\r\n              </span>\r\n            </p>\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Need Help?\r\n            </p>\r\n          </div>\r\n        </SignUpBox>\r\n      )}\r\n    </SignUpContainer>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst SignUpContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  .loaderContainer {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: #fefcfe;\r\n    z-index: 1000;\r\n    opacity: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .signUpLoader {\r\n    object-fit: contain;\r\n    transform: scale(0.3);\r\n  }\r\n`;\r\n\r\nconst Alaric = styled.div`\r\n  position: absolute;\r\n  left: 1rem;\r\n  top: 20%;\r\n  background: none;\r\n  height: 28rem;\r\n  width: 35vw;\r\n  min-width: 10rem;\r\n  padding-left: 2rem;\r\n  align-items: center;\r\n  font-size: 2.1vw;\r\n  color: rgba(0, 128, 85, 0.568);\r\n  font-family: \"Bebas Neue\", cursive;\r\n  letter-spacing: 0.2rem;\r\n\r\n  ${customMedia.lessThan(\"mdDesktop\")`\r\n      display:none;\r\n    `};\r\n\r\n  .highlight {\r\n    color: rgb(0, 128, 85) !important;\r\n  }\r\n`;\r\n\r\nconst SignUpBox = styled.div`\r\n  height: 100vh;\r\n  width: 43vw;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  right: 0;\r\n  top: 0;\r\n  ${customMedia.lessThan(\"lgDesktop\")`\r\n     width: 33rem;\r\n    `};\r\n  ${customMedia.lessThan(\"tablet\")`\r\n      width: 28rem;\r\n      \r\n    `};\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      width: 100%;\r\n      \r\n    `};\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .footer {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n   font-size:10px;\r\n   bottom:8rem !important;\r\n   width:100%;\r\n   flex-direction:column;\r\n   line-height:2rem;\r\n    `};\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      bottom:2rem !important;\r\n      line-height:1rem;\r\n    `};\r\n  }\r\n`;\r\n\r\nconst SignUpForm = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 35vw;\r\n  /* box-shadow: 13px 13px 20px rgba(0, 128, 85, 0.164),\r\n    inset -3px -3px 10px rgba(0, 128, 85, 0.459); */\r\n\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  ${customMedia.lessThan(\"tablet\")`\r\n  margin: 40px auto;\r\n   width:  calc(50vw + 70px);\r\n   height: 90vh;\r\n    `};\r\n\r\n  img {\r\n    position: absolute;\r\n    height: 6rem;\r\n    width: 60%;\r\n    margin: 1rem 2rem;\r\n    margin-top: 2rem;\r\n    object-fit: contain;\r\n  }\r\n  h2 {\r\n    font-size: 3rem;\r\n    margin-top: 3rem;\r\n    color: #008055;\r\n    font-family: \"Shadows Into Light\", cursive;\r\n  }\r\n\r\n  .signUpFormBottom {\r\n    position: absolute;\r\n    margin-top: 7rem;\r\n    width: 100%;\r\n    height: 75vh;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .inputFieldSignUp {\r\n    width: 90%;\r\n    height: 1.5rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      padding: 0.5rem 1rem;\r\n      height: 1.7rem;\r\n    `};\r\n  }\r\n  .inputSignUp {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem !important;\r\n    flex: 0.9;\r\n  }\r\n  .inputSignUp::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem !important;\r\n  }\r\n  .EmailAccount {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem !important;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n  }\r\n  .inputSignUp {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:12px !important;\r\n    `};\r\n  }\r\n  .inputSignUp::placeholder {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:12px !important;\r\n    `};\r\n  }\r\n  .shortScreen {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n     transform:scale(1.5);\r\n    `};\r\n  }\r\n  .password {\r\n    flex: 0.8;\r\n  }\r\n`;\r\n",["191","192"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarPersonal.js",["193","194","195","196","197","198","199"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./sidebar.css\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  DatePicker,\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { createMuiTheme, Slider } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { db } from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport DonutChart from \"../DonutChart\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport styled from \"styled-components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    color: \"#fff\",\r\n    background: \"rgba(0, 145, 96, 0.9)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SidebarPersonal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { currentUser, logOut } = useAuth();\r\n  const history = useHistory();\r\n  const [selectedStartDate, handleStartDateChange] = useState(new Date());\r\n  const [selectedEndDate, handleEndDateChange] = useState(new Date());\r\n  const [priority, setPriority] = useState(0);\r\n  const [inputTodo, setInputTodo] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [todoLength, setTodoLength] = useState(0);\r\n\r\n  const PrettoSlider = createMuiTheme({\r\n    overrides: {\r\n      MuiSlider: {\r\n        root: {\r\n          color:\r\n            priority < 33\r\n              ? \"rgb(1, 112, 75)\"\r\n              : priority > 66\r\n              ? \"rgba(185, 5, 5)\"\r\n              : \"rgba(185, 86, 5)\",\r\n          height: 8,\r\n          transition: \"all 0.5s ease-in-out\",\r\n          transform: \"scale(0.6)\",\r\n        },\r\n\r\n        thumb: {\r\n          height: 24,\r\n          width: 24,\r\n          backgroundColor: \"#fff\",\r\n          border: \"2px solid currentColor\",\r\n          marginTop: -8,\r\n          marginLeft: -12,\r\n          \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"inherit\",\r\n          },\r\n        },\r\n        active: {},\r\n        valueLabel: {\r\n          left: \"calc(-50% + 4px)\",\r\n        },\r\n        track: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n        rail: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n  const handleInputChange = (value) => {\r\n    setInputTodo(value);\r\n    setError(false);\r\n  };\r\n  function labelText(value) {\r\n    return priority < 33 ? \"Low\" : priority > 66 ? \"Top\" : \"Med\";\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    if (inputTodo !== \"\") {\r\n      setLoader(true);\r\n      db.collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"todos\")\r\n        .add({\r\n          todoText: inputTodo,\r\n          todoStartDate: selectedStartDate.toISOString(),\r\n          todoEndDate: selectedEndDate.toISOString(),\r\n          checked: false,\r\n          priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n      setInputTodo(\"\");\r\n      setLoader(false);\r\n      handleClose();\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleTodoLength = (list) => {\r\n    const l = list.length;\r\n    setTodoLength(l);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"todos\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoText: doc.data().todoText,\r\n          todoDate: doc.data().todoDate,\r\n          checked: doc.data().checked,\r\n        }));\r\n        console.log(list);\r\n        handleTodoLength(list);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addItemsPersonal\" onClick={handleClickOpen}>\r\n        Add Items +\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <TodoLeftContainer>\r\n          <TodoLeftUpBox>\r\n            <div className=\"inputField\">\r\n              <CreateIcon className=\"todoIcon\" />\r\n              <input\r\n                value={inputTodo}\r\n                className=\"todoInputPersonal\"\r\n                type=\"text\"\r\n                placeholder=\"Write here...\"\r\n                onChange={(e) => handleInputChange(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"dataContainerSide\">\r\n                <h3 className=\"timeHeading\">Start date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBoxSide\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        //format=\"DD/MM/YYYY\"\r\n                        value={selectedStartDate}\r\n                        onChange={handleStartDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n              <div className=\"dataContainerSide\">\r\n                <h3 className=\"timeHeading\">End date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBoxSide\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        value={selectedEndDate}\r\n                        //  format=\"DD/MM/YYYY\"\r\n                        onChange={handleEndDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              disabled={loader}\r\n              endIcon={<AddIcon />}\r\n              className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              ADD\r\n            </Button>\r\n            <p\r\n              style={{\r\n                color: \"rgb(0, 90, 60)\",\r\n                fontSize: \"0.6rem\",\r\n                marginTop: \"0.5rem\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Set priority\r\n            </p>\r\n            <ThemeProvider theme={PrettoSlider}>\r\n              <Slider\r\n                getAriaValueText={labelText}\r\n                defaultValue={priority}\r\n                value={priority}\r\n                valueLabelFormat={labelText}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(e, data) => {\r\n                  setPriority(data);\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n          </TodoLeftUpBox>\r\n          <TodoLeftDownBox>\r\n            {todoLength !== 0 ? (\r\n              <DonutChart todoLength={todoLength} />\r\n            ) : (\r\n              <h3\r\n                style={{\r\n                  fontWeight: 600,\r\n                  padding: \"1rem\",\r\n                  color: \"rgba(0, 141, 94, 0.695)\",\r\n                }}\r\n              >\r\n                NO ITEMS\r\n              </h3>\r\n            )}\r\n          </TodoLeftDownBox>\r\n        </TodoLeftContainer>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TodoLeftContainer = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  width: 94%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst TodoLeftUpBox = styled.div`\r\n  flex: 0.4 !important;\r\n  border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-height: 400px) {\r\n    flex: 1 !important;\r\n    border: none;\r\n  }\r\n\r\n  .inputField {\r\n    width: 90%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    padding-left: 0.5rem;\r\n    margin: 0.5rem;\r\n    margin-bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 1rem;\r\n    flex: 0.9;\r\n    padding-left: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n    @media (max-height: 700px) {\r\n      font-size: 0.5rem;\r\n    }\r\n  }\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n  .AlarmIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n  }\r\n  .dateBox {\r\n    overflow: hidden;\r\n    width: 88%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 1rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  .AddButton {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  .AddButton:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  .AddButtonDisabled {\r\n    opacity: 0.7;\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n  }\r\n`;\r\nconst TodoLeftDownBox = styled.div`\r\n  overflow: hidden;\r\n  @media (max-height: 400px) {\r\n    display: none;\r\n  }\r\n`;\r\n",["200","201"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\Schedular\\CalendarModal.js",["202","203","204","205","206"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  createMuiTheme,\r\n  Fade,\r\n  useMediaQuery,\r\n  useTheme,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport \"./style.css\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(2, 88, 60)\",\r\n    },\r\n  },\r\n  width: \"100%\",\r\n\r\n  overrides: {\r\n    MuiInputBase: {\r\n      root: {\r\n        overflow: \"hidden\",\r\n      },\r\n      input: {\r\n        color: \"rgb(0, 90, 60)\",\r\n        fontSize: \"1.2rem\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paperWidthSm: {\r\n        width: \"300px\",\r\n      },\r\n    },\r\n    MuiPickersDay: {\r\n      daySelected: {\r\n        backgroundColor: \"rgb(2, 88, 60)\",\r\n        [\":hover\"]: {\r\n          backgroundColor: \"rgb(2, 88, 60)\",\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      textPrimary: {\r\n        color: \"rgb(2, 88, 60)\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  const theme = useTheme();\r\n  return useMediaQuery(theme.breakpoints.down(\"sm\")) ? (\r\n    <Slide direction=\"left\" ref={ref} {...props} />\r\n  ) : (\r\n    <Fade direction=\"\" ref={ref} {...props} />\r\n  );\r\n});\r\n\r\nexport default function CalendarModal({\r\n  open,\r\n  handleClose,\r\n  event,\r\n  getAllEvents,\r\n  getChild,\r\n  setPersonalTabValue,\r\n  team,\r\n  urlTeamName,\r\n  setOpenSchedular,\r\n  board,\r\n}) {\r\n  const [todoText, setTodoText] = useState(event.title);\r\n  const [selectedStartDate, handleStartDateChange] = useState(event.start);\r\n  const [selectedEndDate, handleEndDateChange] = useState(event.end);\r\n  const [priority, setPriority] = useState(\r\n    event.backgroundColor === \"rgba(185, 5, 5, 0.8)\"\r\n      ? 100\r\n      : event.backgroundColor === \"rgba(185, 86, 5, 0.8)\"\r\n      ? 50\r\n      : 0\r\n  );\r\n  const { currentUser } = useAuth();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const PrettoSlider = withStyles({\r\n    root: {\r\n      color:\r\n        priority < 33\r\n          ? \"rgb(1, 112, 75)\"\r\n          : priority > 66\r\n          ? \"rgba(185, 5, 5)\"\r\n          : \"rgba(185, 86, 5)\",\r\n      height: 8,\r\n      transition: \"all 0.5s ease-in-out\",\r\n      transform: \"scale(0.6)\",\r\n      marginLeft: \"1rem\",\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: \"#fff\",\r\n      border: \"2px solid currentColor\",\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      \"&:focus, &:hover, &$active\": {\r\n        boxShadow: \"inherit\",\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: \"calc(-50% + 4px)\",\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n\r\n  const handleSubmit = () => {\r\n    if (\r\n      todoText !== \"\" &&\r\n      new Date(selectedStartDate).getTime() <=\r\n        new Date(selectedEndDate).getTime()\r\n    ) {\r\n      console.log(event._def.publicId);\r\n      if (team) {\r\n        db.collection(\"teams\")\r\n          .doc(urlTeamName)\r\n          .collection(\"teamTodos\")\r\n          .doc(event._def.publicId)\r\n          .set(\r\n            {\r\n              todoText: todoText,\r\n              todoStartTime: selectedStartDate.toISOString(),\r\n              todoEndTime: selectedEndDate.toISOString(),\r\n              priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n            },\r\n            { merge: true }\r\n          );\r\n        setOpenSchedular(false);\r\n      } else {\r\n        db.collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"todos\")\r\n          .doc(event._def.publicId)\r\n          .set(\r\n            {\r\n              todoText: todoText,\r\n              todoStartDate: selectedStartDate.toISOString(),\r\n              todoEndDate: selectedEndDate.toISOString(),\r\n              priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n            },\r\n            { merge: true }\r\n          );\r\n        setPersonalTabValue(0);\r\n      }\r\n\r\n      // getChild(getAllEvents());\r\n      setPriority(0);\r\n      handleClose();\r\n    }\r\n  };\r\n  function labelText(value) {\r\n    return priority < 33 ? \"Low\" : priority > 66 ? \"Top\" : \"Med\";\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      new Date(selectedEndDate).getTime() <\r\n      new Date(selectedStartDate).getTime()\r\n    ) {\r\n      handleEndDateChange(selectedStartDate);\r\n    }\r\n    // if (new Date(selectedStartDate).getTime() < new Date().getTime()) {\r\n    //   handleStartDateChange(new Date());\r\n    // }\r\n  }, [selectedEndDate]);\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      fullScreen={!isSmall}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        className=\"modalTitle\"\r\n        style={{ paddingLeft: \"30px\" }}\r\n      >\r\n        Edit\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          <p\r\n            style={{\r\n              marginLeft: \"0.5rem\",\r\n              fontSize: \"15px\",\r\n              color: \"rgb(0, 90, 60)\",\r\n              marginBottom: \"0.5rem\",\r\n            }}\r\n          >\r\n            {event._def.extendedProps.teamName}\r\n          </p>\r\n          <textarea\r\n            className=\"todoTextarea\"\r\n            value={todoText}\r\n            onChange={(e) => setTodoText(e.target.value)}\r\n          />\r\n          <div style={{ display: isSmall && \"flex\" }}>\r\n            <div className=\"dataContainer\">\r\n              <h3 className=\"timeHeading\">Start date</h3>\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <div className=\"dateBox\">\r\n                  <ThemeProvider theme={defaultMaterialTheme}>\r\n                    <DatePicker\r\n                      variant=\"dialog\"\r\n                      // format=\"DD/MM/YYYY\"\r\n                      value={selectedStartDate}\r\n                      orientation=\"portrait\"\r\n                      onChange={handleStartDateChange}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        textAlign: \"center\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      InputProps={{\r\n                        endAdornment: <AlarmIcon className=\"alarmModalIcon\" />,\r\n                        disableUnderline: true,\r\n                      }}\r\n                    />\r\n                  </ThemeProvider>\r\n                </div>\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n            <div className=\"dataContainer\" style={{ marginLeft: isSmall && 0 }}>\r\n              <h3 className=\"timeHeading\">End date</h3>\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <div className=\"dateBox\">\r\n                  <ThemeProvider theme={defaultMaterialTheme}>\r\n                    <DatePicker\r\n                      variant=\"dialog\"\r\n                      orientation=\"portrait\"\r\n                      value={selectedEndDate}\r\n                      //  format=\"DD/MM/YYYY\"\r\n                      onChange={handleEndDateChange}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        textAlign: \"center\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      InputProps={{\r\n                        endAdornment: <AlarmIcon className=\"alarmModalIcon\" />,\r\n                        disableUnderline: true,\r\n                      }}\r\n                    />\r\n                  </ThemeProvider>\r\n                </div>\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          </div>\r\n\r\n          {!board && (\r\n            <>\r\n              <p\r\n                style={{\r\n                  color: \"rgb(0, 90, 60)\",\r\n                  fontSize: \"0.6rem\",\r\n                  marginTop: \"0.7rem\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Set priority\r\n              </p>\r\n              <div style={{ width: \"90%\" }}>\r\n                <PrettoSlider\r\n                  getAriaValueText={labelText}\r\n                  defaultValue={priority}\r\n                  value={priority}\r\n                  valueLabelFormat={labelText}\r\n                  valueLabelDisplay=\"auto\"\r\n                  onChange={(e, data) => {\r\n                    setPriority(data);\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions style={{ paddingRight: \"22px\" }}>\r\n        <Button\r\n          className=\"addButtonModal\"\r\n          onClick={handleClose}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"addButtonModal\"\r\n          color=\"primary\"\r\n          onClick={handleSubmit}\r\n        >\r\n          save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n",["207","208"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\members\\TeamMembers.js",["209","210","211","212"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarProfile.js",["213","214","215","216","217","218","219","220","221","222","223","224"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarTeams.js",["225","226","227","228"],"import React, { useState, useEffect } from \"react\";\r\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport TeamCard from \"../TeamCard\";\r\nimport AddingTeamModal from \"../Dialog\";\r\nimport SnackBar from \"../../snackbar/SnackBar\";\r\nimport { db } from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { Slider } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    color: \"#fff\",\r\n    background: \"rgba(0, 145, 96, 0.9)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nconst TransitionTodo = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nexport default function SidebarTeams({ UrlTeamName, userName, discussion }) {\r\n  const [make, setMake] = useState(false);\r\n  const [openMaker, setOpenMaker] = useState(false);\r\n  const [openMakeSnackBar, setOpenMakeSnackBar] = useState(false);\r\n  const [openJoinSnackBar, setOpenJoinSnackBar] = useState(false);\r\n  const [openDeleteSnackBar, setOpenDeleteSnackBar] = useState(false);\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const [currentTeamName, setCurrentTeamName] = useState(\"\");\r\n  const [teams, setTeams] = useState([]);\r\n  const [joinedTeams, setJoinedTeams] = useState([]);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openAddTodo, setOpenAddTodo] = useState(false);\r\n  const [selectedStartDate, handleStartDateChange] = useState(new Date());\r\n  const [selectedEndDate, handleEndDateChange] = useState(new Date());\r\n  const [priority, setPriority] = useState(0);\r\n  const [inputTodo, setInputTodo] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const history = useHistory();\r\n  const { currentUser, logOut } = useAuth();\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickMakeTeam = () => {\r\n    setMake(true);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleClickJoinTeam = () => {\r\n    setMake(false);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleCloseMaker = () => {\r\n    setOpenMaker(false);\r\n  };\r\n\r\n  const handleInputChange = (value) => {\r\n    setInputTodo(value);\r\n  };\r\n\r\n  const handleCloseAddTodo = () => {\r\n    setOpenAddTodo(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (inputTodo !== \"\") {\r\n      db.collection(\"teams\")\r\n        .doc(UrlTeamName)\r\n        .collection(\"teamTodos\")\r\n        .add({\r\n          todoText: inputTodo,\r\n          todoEndTime: selectedEndDate.toISOString(),\r\n          todoStartTime: selectedStartDate.toISOString(),\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          admin: currentUser.uid,\r\n          checked: false,\r\n          assignedTo: [],\r\n          todoImage: \"\",\r\n          comment: \"\",\r\n          checkedBy: \"\",\r\n          assignedBy: userName,\r\n          priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n        });\r\n      setInputTodo(\"\");\r\n      setPriority(0);\r\n      setLoader(false);\r\n      handleCloseAddTodo();\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"userTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _teams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n          admin: doc.data().admin,\r\n        }));\r\n        console.log(_teams);\r\n        setTeams(_teams);\r\n      });\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _joinedTeams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n        }));\r\n        console.log(_joinedTeams);\r\n        setJoinedTeams(_joinedTeams);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  const PrettoSlider = createMuiTheme({\r\n    overrides: {\r\n      MuiSlider: {\r\n        root: {\r\n          color:\r\n            priority < 33\r\n              ? \"rgb(1, 112, 75)\"\r\n              : priority > 66\r\n              ? \"rgba(185, 5, 5)\"\r\n              : \"rgba(185, 86, 5)\",\r\n          height: 8,\r\n          transition: \"all 0.5s ease-in-out\",\r\n          transform: \"scale(0.6)\",\r\n        },\r\n\r\n        thumb: {\r\n          height: 24,\r\n          width: 24,\r\n          backgroundColor: \"#fff\",\r\n          border: \"2px solid currentColor\",\r\n          marginTop: -8,\r\n          marginLeft: -12,\r\n          \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"inherit\",\r\n          },\r\n        },\r\n        active: {},\r\n        valueLabel: {\r\n          left: \"calc(-50% + 4px)\",\r\n        },\r\n        track: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n        rail: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  function labelText(value) {\r\n    return priority < 33 ? \"Low\" : priority > 66 ? \"Top\" : \"Med\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\", width: \"98%\" }}>\r\n        <Button className=\"addItemsTeams\" onClick={handleClickOpen}>\r\n          <p>{UrlTeamName === undefined ? \"Select Team\" : UrlTeamName}</p>\r\n        </Button>\r\n        {!discussion && UrlTeamName !== undefined && (\r\n          <Button\r\n            className=\"addItemsTeams\"\r\n            onClick={() => setOpenAddTodo(true)}\r\n          >\r\n            Add task\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            {/* <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/help\")}\r\n            >\r\n              Help\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <TeamTodoLeftContainer>\r\n          <TeamTodoLeftLeftBox>\r\n            <Button\r\n              className=\"addButton1\"\r\n              onClick={() => handleClickMakeTeam()}\r\n            >\r\n              Make a team\r\n            </Button>\r\n            {/* <h3 style={{ overflow: \"hidden\" }}>My Teams</h3> */}\r\n            <MyTeamContainer>\r\n              {teams.map((team) => (\r\n                <TeamCard\r\n                  sidebarClose={handleClose}\r\n                  key={team.id}\r\n                  id={team.id}\r\n                  teamName={team.teamName}\r\n                  UrlTeamName={UrlTeamName}\r\n                  deleteBtn={true}\r\n                  setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n                  setCurrentTeamName={setCurrentTeamName}\r\n                ></TeamCard>\r\n              ))}\r\n            </MyTeamContainer>\r\n          </TeamTodoLeftLeftBox>\r\n          <TeamTodoLeftRightBox>\r\n            <Button\r\n              className=\"addButton1\"\r\n              onClick={() => handleClickJoinTeam()}\r\n            >\r\n              Join a team\r\n            </Button>\r\n            {/* <h3 style={{ overflow: \"hidden\" }}>Joined Teams</h3> */}\r\n            <MyTeamContainer>\r\n              {joinedTeams.map((team) => (\r\n                <TeamCard\r\n                  sidebarClose={handleClose}\r\n                  key={team.id}\r\n                  id={team.id}\r\n                  teamName={team.teamName}\r\n                  UrlTeamName={UrlTeamName}\r\n                  deleteBtn={true}\r\n                  setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n                  setCurrentTeamName={setCurrentTeamName}\r\n                ></TeamCard>\r\n              ))}\r\n            </MyTeamContainer>\r\n          </TeamTodoLeftRightBox>\r\n        </TeamTodoLeftContainer>\r\n        {openMaker && (\r\n          <AddingTeamModal\r\n            open={openMaker}\r\n            handleClose={handleCloseMaker}\r\n            make={make}\r\n            setCurrentTeamName={setCurrentTeamName}\r\n            openSnackbar={make ? setOpenMakeSnackBar : setOpenJoinSnackBar}\r\n          />\r\n        )}\r\n        {openMakeSnackBar && (\r\n          <SnackBar\r\n            open={openMakeSnackBar}\r\n            handleClose={() => setOpenMakeSnackBar(false)}\r\n            text={`Team ${currentTeamName} Created`}\r\n          />\r\n        )}\r\n        {openJoinSnackBar && (\r\n          <SnackBar\r\n            open={openJoinSnackBar}\r\n            handleClose={() => setOpenJoinSnackBar(false)}\r\n            text={`Welcome to team ${currentTeamName}`}\r\n          />\r\n        )}\r\n        {openDeleteSnackBar && (\r\n          <SnackBar\r\n            open={openDeleteSnackBar}\r\n            handleClose={() => openDeleteSnackBar(false)}\r\n            text={`Team ${currentTeamName} deleted`}\r\n          />\r\n        )}\r\n        {openSnack && (\r\n          <SnackBar\r\n            open={openSnack}\r\n            handleClose={() => setOpenSnack(false)}\r\n            text={\"Uploading...\"}\r\n            material={true}\r\n          />\r\n        )}\r\n      </Dialog>\r\n      <Dialog\r\n        fullScreen\r\n        open={openAddTodo}\r\n        onClose={handleCloseAddTodo}\r\n        TransitionComponent={TransitionTodo}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleCloseAddTodo}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <TodoLeftContainer>\r\n          <TodoLeftUpBox>\r\n            <div className=\"inputField\">\r\n              <CreateIcon className=\"todoIcon\" />\r\n              <input\r\n                value={inputTodo}\r\n                className=\"todoInputPersonal\"\r\n                type=\"text\"\r\n                placeholder=\"Write here...\"\r\n                onChange={(e) => handleInputChange(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"dataContainerSide\">\r\n                <h3 className=\"timeHeading\">Start date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBoxSide\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        //format=\"DD/MM/YYYY\"\r\n                        value={selectedStartDate}\r\n                        onChange={handleStartDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n              <div className=\"dataContainerSide\">\r\n                <h3 className=\"timeHeading\">End date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBoxSide\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        value={selectedEndDate}\r\n                        //  format=\"DD/MM/YYYY\"\r\n                        onChange={handleEndDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              disabled={loader}\r\n              endIcon={<AddIcon />}\r\n              className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              ADD\r\n            </Button>\r\n            <p\r\n              style={{\r\n                color: \"rgb(0, 90, 60)\",\r\n                fontSize: \"0.6rem\",\r\n                marginTop: \"0.5rem\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Set priority\r\n            </p>\r\n            <ThemeProvider theme={PrettoSlider}>\r\n              <Slider\r\n                getAriaValueText={labelText}\r\n                defaultValue={priority}\r\n                value={priority}\r\n                valueLabelFormat={labelText}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(e, data) => {\r\n                  setPriority(data);\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n          </TodoLeftUpBox>\r\n        </TodoLeftContainer>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TeamTodoLeftContainer = styled.div`\r\n  flex: 1;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst TeamTodoLeftLeftBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    margin-left: 0;\r\n    overflow: hidden;\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n  }\r\n`;\r\nconst MyTeamContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: scroll !important;\r\n`;\r\n\r\nconst TeamTodoLeftRightBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    margin-left: 0;\r\n    overflow: hidden;\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n  }\r\n`;\r\nconst TodoLeftContainer = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  width: 94%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst TodoLeftUpBox = styled.div`\r\n  flex: 1 !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-height: 400px) {\r\n    flex: 1 !important;\r\n    border: none;\r\n  }\r\n\r\n  .inputField {\r\n    width: 90%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    padding-left: 0.5rem;\r\n    margin: 0.5rem;\r\n    margin-bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 1rem;\r\n    flex: 0.9;\r\n    padding-left: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n    @media (max-height: 700px) {\r\n      font-size: 0.5rem;\r\n    }\r\n  }\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n  .AlarmIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n  }\r\n  .dateBox {\r\n    overflow: hidden;\r\n    width: 88%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 1rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  .AddButton {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  .AddButton:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  .AddButtonDisabled {\r\n    opacity: 0.7;\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n  }\r\n`;\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js",["229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249"],"import { Button, useMediaQuery, useTheme, makeStyles } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { db, storage } from \"../../firebase\";\r\nimport AddingTeamModal from \"./Dialog\";\r\nimport TeamCard from \"./TeamCard\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport {\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n  DatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport firebase from \"firebase\";\r\nimport TeamTodoCard from \"./TeamTodoCard\";\r\nimport noTeamTodoImage from \"../../assets/images/noTeamTodo.svg\";\r\nimport noTodoJoinTeam from \"../../assets/images/noTodoJoinTeam.svg\";\r\nimport deletedTeam from \"../../assets/images/deletedTeam.svg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./heightMedia.css\";\r\nimport SnackBar from \"../snackbar/SnackBar\";\r\nimport SidebarTeams from \"./sidebar/SidebarTeams\";\r\nimport VideoCallIcon from \"@material-ui/icons/VideoCall\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport TeamSchedular from \"../Schedular/TeamSchedular\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport selectTeam from \"../../assets/images/selectTeam.svg\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={1}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"100%\",\r\n  },\r\n  AppBar: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none\",\r\n    color: \"#000\",\r\n    marginTop: \"-1rem\",\r\n    paddingTop: \"0.5rem\",\r\n  },\r\n  Tabs: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"rgb(5, 185, 125)\",\r\n    height: 3,\r\n    borderRadius: \"7px\",\r\n    width: \"10.2rem\",\r\n  },\r\n  label: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"0.8rem\",\r\n    // lineHeight: \"2.3rem\",\r\n    color: \"#565656\",\r\n    textTransform: \"uppercase\",\r\n    // padding: \"1.8rem 4.2rem\",\r\n    padding: \"0.3rem\",\r\n  },\r\n  flexContainer: {\r\n    borderBottom: \"2px solid rgba(196, 196, 196, 0.5)\",\r\n  },\r\n  addBtn: {\r\n    minWidth: \"1.5rem\",\r\n    padding: 0,\r\n    height: \"1.5rem\",\r\n  },\r\n}));\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(2, 88, 60)\",\r\n    },\r\n  },\r\n  width: \"100%\",\r\n  cursor: \"pointer\",\r\n  overrides: {\r\n    MuiInputBase: {\r\n      root: {\r\n        overflow: \"hidden\",\r\n      },\r\n      input: {\r\n        color: \"rgb(0, 90, 60)\",\r\n        fontSize: \"1rem\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction TeamTodo({\r\n  UrlTeamName,\r\n  setDiscussionLock,\r\n  profileImage,\r\n  setTabValue,\r\n}) {\r\n  const [openMaker, setOpenMaker] = useState(false);\r\n  const [make, setMake] = useState(false);\r\n  const [selectedStartDate, handleStartDateChange] = useState(new Date());\r\n  const [selectedEndDate, handleEndDateChange] = useState(new Date());\r\n  const [inputTodo, setInputTodo] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [thisIsAdmin, setThisIsAdmin] = useState(false);\r\n  const [deleteTeam, setDeleteTeam] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [firstLoader, setFirstLoader] = useState(true);\r\n  const [teams, setTeams] = useState([]);\r\n  const [joinedTeams, setJoinedTeams] = useState([]);\r\n  const [teamsTodoList, setTeamsTodoList] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [profileSetter, setProfileSetter] = useState(true);\r\n  const [openMakeSnackBar, setOpenMakeSnackBar] = useState(false);\r\n  const [openJoinSnackBar, setOpenJoinSnackBar] = useState(false);\r\n  const [openDeleteSnackBar, setOpenDeleteSnackBar] = useState(false);\r\n  const [openSchedular, setOpenSchedular] = useState(false);\r\n  const [currentTeamName, setCurrentTeamName] = useState(\"\");\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const [transitionDirection, setTransitionDirection] = useState(\"down\");\r\n  const [priority, setPriority] = useState(0);\r\n  const [priorityFilter, setPriorityFilter] = useState(4);\r\n\r\n  const PrettoSlider = createMuiTheme({\r\n    overrides: {\r\n      MuiSlider: {\r\n        root: {\r\n          color:\r\n            priority < 33\r\n              ? \"rgb(1, 112, 75)\"\r\n              : priority > 66\r\n              ? \"rgba(185, 5, 5)\"\r\n              : \"rgba(185, 86, 5)\",\r\n          height: 8,\r\n          transition: \"all 0.5s ease-in-out\",\r\n          transform: \"scale(0.7)\",\r\n        },\r\n\r\n        thumb: {\r\n          height: 24,\r\n          width: 24,\r\n          backgroundColor: \"#fff\",\r\n          border: \"2px solid currentColor\",\r\n          marginTop: -8,\r\n          marginLeft: -12,\r\n          \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"inherit\",\r\n          },\r\n        },\r\n        active: {},\r\n        valueLabel: {\r\n          left: \"calc(-50% + 4px)\",\r\n        },\r\n        track: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n        rail: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  function labelText(value) {\r\n    return priority < 33 ? \"Low\" : priority > 66 ? \"Top\" : \"Med\";\r\n  }\r\n\r\n  const handleInputChange = (value) => {\r\n    setInputTodo(value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleClickMakeTeam = () => {\r\n    setMake(true);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleClickJoinTeam = () => {\r\n    setMake(false);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenMaker(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setTransitionDirection(\"down\");\r\n    if (inputTodo !== \"\") {\r\n      db.collection(\"teams\")\r\n        .doc(UrlTeamName)\r\n        .collection(\"teamTodos\")\r\n        .add({\r\n          todoText: inputTodo,\r\n          todoEndTime: selectedEndDate.toISOString(),\r\n          todoStartTime: selectedStartDate.toISOString(),\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          admin: currentUser.uid,\r\n          checked: false,\r\n          assignedTo: [],\r\n          todoImage: \"\",\r\n          comment: \"\",\r\n          checkedBy: \"\",\r\n          assignedBy: userName,\r\n          assignedById: currentUser.uid,\r\n          state: \"current\",\r\n          priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n        });\r\n      setInputTodo(\"\");\r\n      handleStartDateChange(new Date());\r\n      handleEndDateChange(new Date());\r\n      setPriority(0);\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"teams\")\r\n      .doc(UrlTeamName)\r\n      .collection(\"teamTodos\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          admin: doc.data().admin,\r\n          todoText: doc.data().todoText,\r\n          todoStartTime: doc.data().todoStartTime,\r\n          todoEndTime: doc.data().todoEndTime,\r\n          checked: doc.data().checked,\r\n          checkedBy: doc.data().checkedBy,\r\n          assignedTo: doc.data().assignedTo,\r\n          assignedBy: doc.data().assignedBy,\r\n          todoImage: doc.data().todoImage,\r\n          comment: doc.data().comment,\r\n          priority: doc.data().priority,\r\n          assignedById: doc.data().assignedById,\r\n        }));\r\n        setTeamsTodoList(list);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"userTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _teams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n          admin: doc.data().admin,\r\n        }));\r\n        console.log(_teams);\r\n        setTeams(_teams);\r\n      });\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _joinedTeams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n        }));\r\n        console.log(_joinedTeams);\r\n        setJoinedTeams(_joinedTeams);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  React.useEffect(() => {\r\n    setThisIsAdmin(false);\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const tempTeamList = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        admin: doc.data().admin,\r\n        teamDeleted: doc.data().teamDeleted,\r\n      }));\r\n      tempTeamList.filter((team) => {\r\n        if (team.id === UrlTeamName) {\r\n          setDeleteTeam(team.teamDeleted);\r\n          if (team.admin === currentUser.uid) {\r\n            setThisIsAdmin(true);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    setTransitionDirection(\"down\");\r\n  }, [UrlTeamName]);\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"profile\")\r\n      .onSnapshot((snapshot) => {\r\n        const profile = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n        }));\r\n\r\n        profile.filter((p) => {\r\n          if (p.name !== \"\") {\r\n            setUserName(p.name);\r\n            setProfileSetter(false);\r\n            setDiscussionLock(false);\r\n          }\r\n        });\r\n        setFirstLoader(false);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      new Date(selectedEndDate).getTime() <\r\n      new Date(selectedStartDate).getTime()\r\n    ) {\r\n      handleEndDateChange(selectedStartDate);\r\n    }\r\n    // if (new Date(selectedStartDate).getTime() < new Date().getTime()) {\r\n    //   handleStartDateChange(new Date());\r\n    // }\r\n  }, [selectedEndDate]);\r\n\r\n  const emptyFunction = () => {};\r\n\r\n  return firstLoader ? (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"50vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        color: \"#2ec592\",\r\n      }}\r\n    >\r\n      <PuffLoader loading={firstLoader} color=\"#2ec592\" />\r\n      <p style={{ marginTop: \"1rem\", marginLeft: \"0.5rem\", fontSize: \"small\" }}>\r\n        Loading\r\n      </p>\r\n    </div>\r\n  ) : profileSetter ? (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"70vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        color: \"rgba(0, 141, 94, 0.595)\",\r\n      }}\r\n    >\r\n      To use this feature,\r\n      <br /> Set your profile in Profile section\r\n      <Button\r\n        className=\"uploadView\"\r\n        style={{\r\n          padding: \"0.5rem\",\r\n          marginTop: \"1rem\",\r\n          fontSize: \"0.8rem\",\r\n          height: \"1.2rem\",\r\n          color: \"#fff\",\r\n          backgroundColor: \"rgb(5, 185, 125,0.9)\",\r\n          marginBottom: \"0.2rem\",\r\n          textTransform: \"none\",\r\n        }}\r\n        onClick={() => setTabValue(4)}\r\n      >\r\n        Go to profile\r\n      </Button>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <TeamTodoContainer>\r\n        {!isSmall ? (\r\n          <SidebarTeams UrlTeamName={UrlTeamName} userName={userName} />\r\n        ) : (\r\n          <TeamTodoLeftContainer>\r\n            <TeamTodoLeftLeftBox>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                <h3>My Teams</h3>\r\n                <Button\r\n                  classes={{ root: classes.addBtn }}\r\n                  className=\"addButton1\"\r\n                  onClick={() => handleClickMakeTeam()}\r\n                >\r\n                  <AddIcon className=\"addIcon\" />\r\n                </Button>\r\n              </div>\r\n\r\n              <MyTeamContainer>\r\n                {teams.map((team) => (\r\n                  <TeamCard\r\n                    sidebarClose={emptyFunction}\r\n                    key={team.id}\r\n                    id={team.id}\r\n                    teamName={team.teamName}\r\n                    UrlTeamName={UrlTeamName}\r\n                    deleteBtn={true}\r\n                    setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n                    setCurrentTeamName={setCurrentTeamName}\r\n                  ></TeamCard>\r\n                ))}\r\n              </MyTeamContainer>\r\n            </TeamTodoLeftLeftBox>\r\n            <TeamTodoLeftRightBox>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                <h3>Joined Teams</h3>\r\n                <Button\r\n                  classes={{ root: classes.addBtn }}\r\n                  className=\"addButton1\"\r\n                  onClick={() => handleClickJoinTeam()}\r\n                >\r\n                  <AddIcon className=\"addIcon\" />\r\n                </Button>\r\n              </div>\r\n              <MyTeamContainer>\r\n                {joinedTeams.map((team) => (\r\n                  <TeamCard\r\n                    sidebarClose={emptyFunction}\r\n                    key={team.id}\r\n                    id={team.id}\r\n                    teamName={team.teamName}\r\n                    UrlTeamName={UrlTeamName}\r\n                    deleteBtn={true}\r\n                    setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n                    setCurrentTeamName={setCurrentTeamName}\r\n                  ></TeamCard>\r\n                ))}\r\n              </MyTeamContainer>\r\n            </TeamTodoLeftRightBox>\r\n          </TeamTodoLeftContainer>\r\n        )}\r\n\r\n        <TeamTodoMiniActionContainer className=\"toolbarForAbove1000\">\r\n          {UrlTeamName !== undefined && (\r\n            <>\r\n              <CustomTooltip title=\"Start meeting\" placement=\"right\" arrow>\r\n                <a\r\n                  href={`https://slogmeet.web.app/${UrlTeamName}`}\r\n                  className=\"meetingLink\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <VideoCallIcon className=\"slogMeet\" disabled={loader} />\r\n                </a>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                arrow\r\n                title={\r\n                  priorityFilter === 3\r\n                    ? \"High\"\r\n                    : priorityFilter === 2\r\n                    ? \"Mid\"\r\n                    : priorityFilter === 4\r\n                    ? \"Filter\"\r\n                    : \"Low\"\r\n                }\r\n                placement=\"right\"\r\n              >\r\n                <div\r\n                  style={{\r\n                    backgroundColor:\r\n                      priorityFilter === 3\r\n                        ? \"rgba(185, 5, 5, 0.8)\"\r\n                        : priorityFilter === 2\r\n                        ? \"rgba(185, 86, 5, 0.8)\"\r\n                        : priorityFilter === 4\r\n                        ? \"rgb(5, 185, 125, 0.8)\"\r\n                        : \"rgba(0, 99, 66, 0.8)\",\r\n                  }}\r\n                  className=\"meetingLink\"\r\n                  onClick={() => {\r\n                    if (priorityFilter === 1) setPriorityFilter(2);\r\n                    if (priorityFilter === 2) setPriorityFilter(3);\r\n                    if (priorityFilter === 3) setPriorityFilter(4);\r\n                    if (priorityFilter === 4) setPriorityFilter(1);\r\n                  }}\r\n                >\r\n                  <ListIcon className=\"slogMeet\" />\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip title=\"Schedular\" placement=\"right\" arrow>\r\n                <div\r\n                  className=\"meetingLink\"\r\n                  onClick={() => setOpenSchedular(!openSchedular)}\r\n                  style={{\r\n                    background: openSchedular\r\n                      ? \"rgba(0, 99, 66, 0.8)\"\r\n                      : \"rgb(5, 185, 125, 0.8)\",\r\n                  }}\r\n                >\r\n                  {openSchedular ? (\r\n                    <ClearIcon className=\"slogMeet\" />\r\n                  ) : (\r\n                    <DateRangeIcon className=\"slogMeet\" />\r\n                  )}\r\n                </div>\r\n              </CustomTooltip>\r\n            </>\r\n          )}\r\n        </TeamTodoMiniActionContainer>\r\n\r\n        {openSchedular ? (\r\n          <TeamTodoRightContainer style={{ overflowY: \"scroll\" }}>\r\n            <TeamSchedular\r\n              todoList={teamsTodoList}\r\n              urlTeamName={UrlTeamName}\r\n              setOpenSchedular={setOpenSchedular}\r\n            />\r\n          </TeamTodoRightContainer>\r\n        ) : (\r\n          <TeamTodoRightContainer>\r\n            {isSmall && UrlTeamName !== undefined && (\r\n              <>\r\n                <TeamTodoMiniActionContainer className=\"toolbarForBelow1000\">\r\n                  <CustomTooltip title=\"Start meeting\" placement=\"right\">\r\n                    <a\r\n                      href={`https://slogmeet.web.app/${UrlTeamName}`}\r\n                      className=\"meetingLink\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <VideoCallIcon className=\"slogMeet\" disabled={loader} />\r\n                    </a>\r\n                  </CustomTooltip>\r\n                  <CustomTooltip\r\n                    title={\r\n                      priorityFilter === 3\r\n                        ? \"High\"\r\n                        : priorityFilter === 2\r\n                        ? \"Mid\"\r\n                        : priorityFilter === 4\r\n                        ? \"Filter\"\r\n                        : \"Low\"\r\n                    }\r\n                    placement=\"top\"\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        backgroundColor:\r\n                          priorityFilter === 3\r\n                            ? \"rgba(185, 5, 5, 0.8)\"\r\n                            : priorityFilter === 2\r\n                            ? \"rgba(185, 86, 5, 0.8)\"\r\n                            : priorityFilter === 4\r\n                            ? \"rgb(5, 185, 125, 0.8)\"\r\n                            : \"rgba(0, 99, 66, 0.8)\",\r\n                      }}\r\n                      className=\"meetingLink\"\r\n                      onClick={() => {\r\n                        setTransitionDirection(\"down\");\r\n                        if (priorityFilter === 1) setPriorityFilter(2);\r\n                        if (priorityFilter === 2) setPriorityFilter(3);\r\n                        if (priorityFilter === 3) setPriorityFilter(4);\r\n                        if (priorityFilter === 4) setPriorityFilter(1);\r\n                      }}\r\n                    >\r\n                      <ListIcon className=\"slogMeet\" />\r\n                    </div>\r\n                  </CustomTooltip>\r\n                  <CustomTooltip title=\"Schedular\" placement=\"top\">\r\n                    <div\r\n                      className=\"meetingLink\"\r\n                      onClick={() => setOpenSchedular(!openSchedular)}\r\n                      style={{\r\n                        background: openSchedular\r\n                          ? \"rgba(0, 99, 66, 0.8)\"\r\n                          : \"rgb(5, 185, 125, 0.8)\",\r\n                      }}\r\n                    >\r\n                      {openSchedular ? (\r\n                        <ClearIcon className=\"slogMeet\" />\r\n                      ) : (\r\n                        <DateRangeIcon className=\"slogMeet\" />\r\n                      )}\r\n                    </div>\r\n                  </CustomTooltip>\r\n                </TeamTodoMiniActionContainer>\r\n                <TodoRightUpBox>\r\n                  <div className=\"inputField\">\r\n                    <CreateIcon className=\"todoIcon\" />\r\n                    <textarea\r\n                      value={inputTodo}\r\n                      className=\"todoInput\"\r\n                      type=\"text\"\r\n                      placeholder=\"Write here...\"\r\n                      onChange={(e) => handleInputChange(e.target.value)}\r\n                      //onKeyDown={(e) => handleSubmitEnter(e)}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      paddingLeft: \"0 0rem\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  >\r\n                    <div className=\"priorityBox\">\r\n                      <ThemeProvider theme={PrettoSlider}>\r\n                        <Slider\r\n                          getAriaValueText={labelText}\r\n                          defaultValue={priority}\r\n                          value={priority}\r\n                          valueLabelFormat={labelText}\r\n                          valueLabelDisplay=\"auto\"\r\n                          onChange={(e, data) => {\r\n                            setPriority(data);\r\n                          }}\r\n                        />\r\n                      </ThemeProvider>\r\n                    </div>\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                      {/* <CustomTooltip title=\"Enter deadline\" placement=\"top\" arrow> */}\r\n                      <div className=\"dateBox\" style={{ marginRight: 0 }}>\r\n                        <p>Start:</p>\r\n                        <ThemeProvider theme={defaultMaterialTheme}>\r\n                          <DatePicker\r\n                            variant=\"dialog\"\r\n                            value={selectedStartDate}\r\n                            onChange={handleStartDateChange}\r\n                            style={{\r\n                              width: \"100%\",\r\n                              textAlign: \"center\",\r\n                              cursor: \"pointer\",\r\n                              fontSize: \"0.7rem\",\r\n                            }}\r\n                            InputProps={{\r\n                              endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                              disableUnderline: true,\r\n                            }}\r\n                          />\r\n                        </ThemeProvider>\r\n                      </div>\r\n                      {/* </CustomTooltip> */}\r\n                    </MuiPickersUtilsProvider>\r\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                      {/* <CustomTooltip title=\"Enter deadline\" placement=\"top\" arrow> */}\r\n                      <div className=\"dateBox\">\r\n                        <p>End:</p>\r\n                        <ThemeProvider theme={defaultMaterialTheme}>\r\n                          <DatePicker\r\n                            variant=\"dialog\"\r\n                            value={selectedEndDate}\r\n                            onChange={handleEndDateChange}\r\n                            style={{\r\n                              width: \"100%\",\r\n                              textAlign: \"center\",\r\n                              cursor: \"pointer\",\r\n                              fontSize: \"0.7rem\",\r\n                            }}\r\n                            InputProps={{\r\n                              endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                              disableUnderline: true,\r\n                            }}\r\n                          />\r\n                        </ThemeProvider>\r\n                      </div>\r\n                      {/* </CustomTooltip> */}\r\n                    </MuiPickersUtilsProvider>\r\n                    <Button\r\n                      disabled={loader}\r\n                      endIcon={<AddIcon className=\"addIcon\" />}\r\n                      className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n                      onClick={() => handleSubmit()}\r\n                    >\r\n                      ADD\r\n                    </Button>\r\n                  </div>\r\n                </TodoRightUpBox>\r\n              </>\r\n            )}\r\n            {UrlTeamName === undefined && (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"column\",\r\n                  paddingTop: \"7rem\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={selectTeam}\r\n                  style={{ height: \"10rem\", width: \"10rem\" }}\r\n                />\r\n\r\n                <p\r\n                  className=\"uploadView\"\r\n                  style={{\r\n                    marginTop: \"1rem\",\r\n                    fontSize: \"0.8rem\",\r\n                    color: \"rgb(5, 185, 125,0.9)\",\r\n                    marginBottom: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  Select a team to view\r\n                </p>\r\n              </div>\r\n            )}\r\n            {teamsTodoList.length === 0 && UrlTeamName !== undefined ? (\r\n              thisIsAdmin ? (\r\n                <div\r\n                  className=\"teamNoTodoImage\"\r\n                  style={{\r\n                    height: \"80%\",\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    objectFit: \"contain\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={noTeamTodoImage}\r\n                    style={{\r\n                      height: \"15rem\",\r\n                      width: \"15rem\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  />\r\n                  <h3\r\n                    style={{\r\n                      color: \"rgba(0, 141, 94, 0.695)\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    NO WORK TO DO\r\n                  </h3>{\" \"}\r\n                  <h4\r\n                    style={{\r\n                      color: \"rgba(0, 141, 94, 0.695)\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    ADD SOME\r\n                  </h4>{\" \"}\r\n                  <br />\r\n                  <h6\r\n                    style={{\r\n                      color: \"rgba(0, 141, 94, 0.695)\",\r\n                      cursor: \"pointer\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                    onClick={() => history.push(\"/help\")}\r\n                  >\r\n                    Need Help?\r\n                  </h6>{\" \"}\r\n                </div>\r\n              ) : deleteTeam ? (\r\n                <div\r\n                  className=\"teamNoTodoImage\"\r\n                  style={{\r\n                    height: \"80%\",\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    objectFit: \"contain\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={deletedTeam}\r\n                    style={{\r\n                      height: \"15rem\",\r\n                      width: \"15rem\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  />\r\n                  <h4\r\n                    style={{\r\n                      color: \"rgba(0, 141, 94, 0.695)\",\r\n                      overflow: \"hidden\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    THIS TEAM WAS DELETED BY THE ADMIN\r\n                  </h4>{\" \"}\r\n                  <br />\r\n                  <h6\r\n                    style={{\r\n                      color: \"rgba(0, 141, 94, 0.695)\",\r\n                      cursor: \"pointer\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                    onClick={() => history.push(\"/help\")}\r\n                  >\r\n                    Need Help?\r\n                  </h6>{\" \"}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className=\"teamNoTodoImage\"\r\n                  style={{\r\n                    height: \"80%\",\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    objectFit: \"contain\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={noTodoJoinTeam}\r\n                    style={{\r\n                      height: \"15rem\",\r\n                      width: \"15rem\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  />\r\n                  <h4\r\n                    style={{\r\n                      color: \"rgba(0, 141, 94, 0.695)\",\r\n                      overflow: \"hidden\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    NO WORK TO DO, WE WILL UPDATE\r\n                  </h4>{\" \"}\r\n                  <h5\r\n                    style={{\r\n                      color: \"rgba(0, 141, 94, 0.695)\",\r\n                      overflow: \"hidden\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    TILL THEN SIT BACK AND RELAX\r\n                  </h5>{\" \"}\r\n                  <br />\r\n                  <h6\r\n                    style={{\r\n                      color: \"rgba(0, 141, 94, 0.695)\",\r\n                      cursor: \"pointer\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                    onClick={() => history.push(\"/help\")}\r\n                  >\r\n                    Need Help?\r\n                  </h6>{\" \"}\r\n                </div>\r\n              )\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {teamsTodoList.length !== 0 && (\r\n              <div className=\"rightDownContainer\">\r\n                {teamsTodoList\r\n                  .filter((list) => {\r\n                    if (priorityFilter === 4) {\r\n                      return list;\r\n                    }\r\n                    if (priorityFilter === 3) {\r\n                      if (list.priority === 3) {\r\n                        return list;\r\n                      }\r\n                    }\r\n                    if (priorityFilter === 2) {\r\n                      if (list.priority === 2) {\r\n                        return list;\r\n                      }\r\n                    }\r\n                    if (priorityFilter === 1) {\r\n                      if (list.priority === 1) {\r\n                        return list;\r\n                      }\r\n                    }\r\n                  })\r\n                  .filter((list) => {\r\n                    if (list.state !== \"upcoming\" && list.checked === false) {\r\n                      return list;\r\n                    }\r\n                  })\r\n                  .map((todo) => (\r\n                    <TeamTodoCard\r\n                      key={todo.id}\r\n                      id={todo.id}\r\n                      text={todo.todoText}\r\n                      startDate={todo.todoStartTime}\r\n                      endDate={todo.todoEndTime}\r\n                      checked={todo.checked}\r\n                      checkedBy={todo.checkedBy}\r\n                      admin={todo.admin}\r\n                      urlTeamName={UrlTeamName}\r\n                      assigned={todo.assignedTo}\r\n                      assignedBy={todo.assignedBy}\r\n                      todoImage={todo.todoImage}\r\n                      comment={todo.comment}\r\n                      priority={todo.priority}\r\n                      assignedById={todo.assignedById}\r\n                      userName={userName}\r\n                      profileImage={profileImage}\r\n                      setTabValue={setTabValue}\r\n                      setTransitionDirection={setTransitionDirection}\r\n                      transitionDirection={transitionDirection}\r\n                      setOpenSchedular={setOpenSchedular}\r\n                    />\r\n                  ))}\r\n              </div>\r\n            )}\r\n          </TeamTodoRightContainer>\r\n        )}\r\n      </TeamTodoContainer>\r\n      {openMaker && (\r\n        <AddingTeamModal\r\n          open={openMaker}\r\n          handleClose={handleClose}\r\n          make={make}\r\n          setCurrentTeamName={setCurrentTeamName}\r\n          openSnackbar={make ? setOpenMakeSnackBar : setOpenJoinSnackBar}\r\n          userName={userName}\r\n        />\r\n      )}\r\n      {openMakeSnackBar && (\r\n        <SnackBar\r\n          open={openMakeSnackBar}\r\n          handleClose={() => setOpenMakeSnackBar(false)}\r\n          text={`${currentTeamName} Created`}\r\n        />\r\n      )}\r\n      {openJoinSnackBar && (\r\n        <SnackBar\r\n          open={openJoinSnackBar}\r\n          handleClose={() => setOpenJoinSnackBar(false)}\r\n          text={`Welcome to ${currentTeamName}`}\r\n        />\r\n      )}\r\n      {openDeleteSnackBar && (\r\n        <SnackBar\r\n          open={openDeleteSnackBar}\r\n          handleClose={() => setOpenDeleteSnackBar(false)}\r\n          text={`${currentTeamName} deleted`}\r\n        />\r\n      )}\r\n      {openSnack && (\r\n        <SnackBar\r\n          open={openSnack}\r\n          handleClose={() => setOpenSnack(false)}\r\n          text={\"Uploading...\"}\r\n          material={true}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamTodo;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"1000px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst TeamTodoContainer = styled.div`\r\n  width: 100%;\r\n  height: 89%;\r\n  position: absolute;\r\n  display: flex;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n  flex:1;\r\n    flex-direction:column;\r\n    height: 85%;\r\n    width: 97%;\r\n`}\r\n  .addIcon {\r\n    transform: scale(0.7);\r\n  }\r\n`;\r\n\r\nconst TeamTodoLeftContainer = styled.div`\r\n  flex: 0.4;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  overflow: hidden;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex:0.4;\r\n      border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n      margin-bottom:1rem;\r\n  `}\r\n`;\r\n\r\nconst TeamTodoLeftLeftBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 20% !important;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    margin: 0.5rem;\r\n    font-size: 0.9rem;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      width:97% !important;\r\n      margin: 0.5rem 1rem;\r\n      margin-left:0rem;\r\n    `}\r\n  }\r\n  .addButton1:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125, 0.8);\r\n    text-align: end;\r\n    font-size: 0.9rem;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size:10px;\r\n      margin-top:-0.4rem;\r\n    `};\r\n  }\r\n`;\r\nconst MyTeamContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: scroll !important;\r\n`;\r\n\r\nconst TeamTodoLeftRightBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 20% !important;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    margin: 0.5rem;\r\n    font-size: 0.9rem;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      width:97% !important;\r\n      margin: 0.5rem 1rem;\r\n      margin-left:0rem;\r\n    `}\r\n  }\r\n  .addButton1:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125, 0.8);\r\n    text-align: end;\r\n    width: 100%;\r\n    font-size: 0.9rem;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size:10px;\r\n      margin-top:-0.4rem;\r\n    `}\r\n  }\r\n`;\r\n\r\nconst TeamTodoMiniActionContainer = styled.div`\r\n  margin: 0.5rem 0rem;\r\n  padding: 0 0.3rem;\r\n  /* box-shadow: rgba(3, 185, 124, 0.308) 0px 1px 4px; */\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  /* background-color: rgba(3, 185, 124, 0.08); */\r\n\r\n  .meetingLink {\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    border-radius: 0 200% 200% 200%;\r\n    padding: 0.5rem;\r\n    box-shadow: rgba(3, 185, 124, 0.308) 0px 1px 4px;\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      margin-top: 0rem;\r\n      padding: 0.4rem;\r\n    `}\r\n  }\r\n\r\n  .slogMeet {\r\n    height: 1.5rem !important;\r\n    width: 1.5rem !important;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    color: #fff;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n       height: 1.2rem !important;\r\n    width: 1.2rem !important;\r\n    `}\r\n  }\r\n`;\r\nconst TeamTodoRightContainer = styled.div`\r\n  flex: 0.6;\r\n  padding-right: 1rem;\r\n\r\n  ${customMedia.lessThan(\"tablet\")`\r\n  margin-left: 0.5rem;\r\n`}\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n  flex:1;\r\n`}\r\n  .rightDownContainer {\r\n    padding: 0 0.1rem;\r\n    width: 99%;\r\n    height: 77% !important;\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n  }\r\n  .teamNoTodoImage {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    height:70% !important;\r\n    flex: 1;\r\n  `}\r\n  }\r\n  @media (max-width: 600px) {\r\n    .rightDownContainer {\r\n      height: 37% !important;\r\n    }\r\n  }\r\n  @media (min-height: 800px) {\r\n    .rightDownContainer {\r\n      height: 79% !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TodoRightUpBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n  width: 99%;\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n    border:none;\r\n  `}\r\n\r\n  .inputField {\r\n    width: 100%;\r\n    height: 2.5rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 5px;\r\n    border: none;\r\n    padding: 0.5rem 0;\r\n    margin: 0.5rem 0;\r\n    margin-bottom: 0rem;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n         margin:0;\r\n         height: 2rem;\r\n    `};\r\n  }\r\n  .todoInput {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 0.9rem !important;\r\n    flex: 0.95;\r\n    padding: 0.5rem;\r\n    margin: 1rem 0 !important;\r\n    resize: none;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    margin-left:0.5rem;\r\n    font-size: 1rem !important;\r\n    `};\r\n  }\r\n  .todoInput::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 0.7rem;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size: 1rem;\r\n    `};\r\n  }\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.2rem;\r\n    flex: 0.05;\r\n    padding-right: 0.3rem;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n  .AlarmIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.2rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    margin-top:0px;\r\n    `};\r\n  }\r\n  .priorityBox {\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    width: 60%;\r\n    height: 2rem;\r\n    margin: 0.2rem 0;\r\n    border-radius: 5px;\r\n  }\r\n  .dateBox {\r\n    width: 80%;\r\n    height: 1.2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 0.4rem;\r\n    margin: 0.2rem 0.2rem;\r\n    font-size: 0.7rem !important;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer !important;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    padding: 0.5rem 0.5rem;\r\n         margin:0.1rem 0;\r\n         font-size:0.7rem !important;\r\n    `};\r\n    p {\r\n      margin-right: 0.7rem;\r\n      color: rgb(0, 90, 60);\r\n      ${customMedia.lessThan(\"smTablet\")`\r\n        font-size:9px;\r\n    `};\r\n    }\r\n  }\r\n  .AddButton {\r\n    width: 40%;\r\n    font-size: 0.7rem !important;\r\n    height: 2rem !important;\r\n    overflow: hidden;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    margin: 0.2rem 0;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n     margin: 0.1rem 0.2rem;\r\n     margin-right:0;\r\n      padding:0;\r\n      height: 2.1rem !important;\r\n    `};\r\n  }\r\n\r\n  .AddButton:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  .AddButtonDisabled {\r\n    height: 2rem !important;\r\n    overflow: hidden;\r\n    opacity: 0.7;\r\n    width: 95.5%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    margin: 0.2rem;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n     margin: 0.1rem 0.2rem;\r\n     margin-right:0;\r\n      padding:0;\r\n      height: 2.1rem !important;\r\n    `};\r\n  }\r\n`;\r\n",["250","251"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Discussion.js",["252","253","254","255","256","257","258","259","260"],"import { Button, useMediaQuery, useTheme, makeStyles } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { db } from \"../../firebase\";\r\nimport TeamCard from \"./TeamCard\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport firebase from \"firebase\";\r\nimport \"./heightMedia.css\";\r\nimport Chat from \"./Chat\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport SidebarTeams from \"./sidebar/SidebarTeams\";\r\nimport selectTeam from \"../../assets/images/selectTeam.svg\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={1}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"100%\",\r\n  },\r\n  AppBar: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none\",\r\n    color: \"#000\",\r\n    marginTop: \"-1rem\",\r\n    paddingTop: \"0.5rem\",\r\n  },\r\n  Tabs: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"rgb(5, 185, 125)\",\r\n    height: 3,\r\n    borderRadius: \"7px\",\r\n    width: \"10.2rem\",\r\n  },\r\n  label: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"0.8rem\",\r\n    // lineHeight: \"2.3rem\",\r\n    color: \"#565656\",\r\n    textTransform: \"uppercase\",\r\n    // padding: \"1.8rem 4.2rem\",\r\n    padding: \"0.3rem\",\r\n  },\r\n  flexContainer: {\r\n    borderBottom: \"2px solid rgba(196, 196, 196, 0.5)\",\r\n  },\r\n  btn: {\r\n    minWidth: \"45px\",\r\n  },\r\n}));\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nfunction Discussion({ UrlTeamName, userName, profileImage }) {\r\n  const [teams, setTeams] = useState([]);\r\n  const [joinedTeams, setJoinedTeams] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const classes = useStyles();\r\n  const [sendTerm, setSendTerm] = useState(\"\");\r\n  const [chatList, setChatList] = useState([]);\r\n  const [deleteTeam, setDeleteTeam] = useState(false);\r\n  const [admin, setAdmin] = useState(\"\");\r\n\r\n  const handleSubmitEnter = async (event) => {\r\n    if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    const date = new Date();\r\n    if (sendTerm !== \"\") {\r\n      db.collection(\"teams\").doc(UrlTeamName).collection(\"discussion\").add({\r\n        discussionText: sendTerm,\r\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        senderId: currentUser.uid,\r\n        senderProfileImage: profileImage,\r\n        senderName: userName,\r\n        discussionTime: date.toISOString(),\r\n        help: false,\r\n        teamTodoText: \"\",\r\n        teamTodoImage: \"\",\r\n      });\r\n      setSendTerm(\"\");\r\n      executeScroll();\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"userTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _teams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n          admin: doc.data().admin,\r\n        }));\r\n        console.log(_teams);\r\n        setTeams(_teams);\r\n      });\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _joinedTeams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n        }));\r\n        console.log(_joinedTeams);\r\n        setJoinedTeams(_joinedTeams);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"teams\")\r\n      .doc(UrlTeamName)\r\n      .collection(\"discussion\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          senderId: doc.data().senderId,\r\n          senderName: doc.data().senderName,\r\n          discussionText: doc.data().discussionText,\r\n          discussionTime: doc.data().discussionTime,\r\n          senderProfileImage: doc.data().senderProfileImage,\r\n          teamTodoText: doc.data().teamTodoText,\r\n          help: doc.data().help,\r\n          teamTodoImage: doc.data().teamTodoImage,\r\n        }));\r\n        //console.log(list);\r\n        setChatList(list);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const tempTeamList = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        admin: doc.data().admin,\r\n        teamDeleted: doc.data().teamDeleted,\r\n      }));\r\n      tempTeamList.filter((team) => {\r\n        if (team.id === UrlTeamName) {\r\n          setDeleteTeam(team.teamDeleted);\r\n          setAdmin(team.admin);\r\n        }\r\n      });\r\n    });\r\n  }, [UrlTeamName]);\r\n\r\n  const executeScroll = () => {\r\n    document\r\n      .getElementById(\"scrollToThisDiv\")\r\n      .scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (UrlTeamName !== undefined && !deleteTeam) {\r\n      executeScroll();\r\n      console.log(\"scroll\");\r\n    }\r\n  }, [UrlTeamName]);\r\n\r\n  const emptyFunction = () => {};\r\n\r\n  return (\r\n    <div>\r\n      <TeamTodoContainer>\r\n        {!isSmall ? (\r\n          <SidebarTeams UrlTeamName={UrlTeamName} discussion={true} />\r\n        ) : (\r\n          <TeamTodoLeftContainer>\r\n            <TeamTodoLeftLeftBox>\r\n              <h3 style={{ overflow: \"hidden\" }}>My Teams</h3>\r\n              <MyTeamContainer>\r\n                {teams.map((team) => (\r\n                  <TeamCard\r\n                    sidebarClose={emptyFunction}\r\n                    key={team.id}\r\n                    id={team.id}\r\n                    teamName={team.teamName}\r\n                    UrlTeamName={UrlTeamName}\r\n                    discussion={true}\r\n                  ></TeamCard>\r\n                ))}\r\n              </MyTeamContainer>\r\n            </TeamTodoLeftLeftBox>\r\n            <TeamTodoLeftRightBox>\r\n              <h3 style={{ overflow: \"hidden\" }}>Joined Teams</h3>\r\n              <MyTeamContainer>\r\n                {joinedTeams.map((team) => (\r\n                  <TeamCard\r\n                    sidebarClose={emptyFunction}\r\n                    key={team.id}\r\n                    id={team.id}\r\n                    teamName={team.teamName}\r\n                    UrlTeamName={UrlTeamName}\r\n                    discussion={true}\r\n                  ></TeamCard>\r\n                ))}\r\n              </MyTeamContainer>\r\n            </TeamTodoLeftRightBox>\r\n          </TeamTodoLeftContainer>\r\n        )}\r\n        {/* ::::::::::::::::: */}\r\n        {UrlTeamName === undefined ? (\r\n          <TeamTodoRightContainer>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n                paddingTop: \"7rem\",\r\n              }}\r\n            >\r\n              <img\r\n                src={selectTeam}\r\n                style={{ height: \"10rem\", width: \"10rem\" }}\r\n              />\r\n\r\n              <p\r\n                className=\"uploadView\"\r\n                style={{\r\n                  marginTop: \"1rem\",\r\n                  fontSize: \"0.8rem\",\r\n                  color: \"rgb(5, 185, 125,0.9)\",\r\n                  marginBottom: \"0.2rem\",\r\n                }}\r\n              >\r\n                Select a team to start discussion\r\n              </p>\r\n            </div>\r\n          </TeamTodoRightContainer>\r\n        ) : deleteTeam ? (\r\n          <TeamTodoRightContainer\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              color: \"rgba(0, 141, 94)\",\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            This team was deleted by the admin\r\n          </TeamTodoRightContainer>\r\n        ) : (\r\n          <TeamTodoRightContainer>\r\n            {chatList.length === 0 ? (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  color: \"rgba(0, 141, 94)\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                }}\r\n              >\r\n                No messages...\r\n              </div>\r\n            ) : (\r\n              [...chatList]\r\n                .reverse()\r\n                .map((chat) => (\r\n                  <Chat\r\n                    key={chat.id}\r\n                    id={chat.id}\r\n                    UrlTeamName={UrlTeamName}\r\n                    senderProfileImage={chat.senderProfileImage}\r\n                    text={chat.discussionText}\r\n                    date={chat.discussionTime}\r\n                    name={chat.senderName}\r\n                    senderId={chat.senderId}\r\n                    admin={admin}\r\n                    help={chat.help}\r\n                    teamTodoText={chat.teamTodoText}\r\n                    teamTodoImage={chat.teamTodoImage}\r\n                  />\r\n                ))\r\n            )}\r\n            <div\r\n              id=\"scrollToThisDiv\"\r\n              style={{ height: \"3rem\", width: \"100%\" }}\r\n            ></div>\r\n            <TodoRightDownBox>\r\n              <textarea\r\n                value={sendTerm}\r\n                type=\"text\"\r\n                onKeyDown={(e) => handleSubmitEnter(e)}\r\n                onChange={(e) => setSendTerm(e.target.value)}\r\n                placeholder=\"Type...\"\r\n              />\r\n              <Button\r\n                // endIcon={<SendIcon />}\r\n                style={{\r\n                  background: \"rgb(5, 185, 125)\",\r\n                  color: \"#fff\",\r\n                  height: \"2rem\",\r\n                  marginRight: \"0.5rem\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n                onClick={handleSend}\r\n                classes={{ root: classes.btn }}\r\n              >\r\n                {!isSmall ? (\r\n                  <SendIcon style={{ fontSize: \"0.9rem\" }} />\r\n                ) : (\r\n                  \"Send\"\r\n                )}\r\n              </Button>\r\n            </TodoRightDownBox>\r\n          </TeamTodoRightContainer>\r\n        )}\r\n\r\n        {/* ::::::::::::::::: */}\r\n      </TeamTodoContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Discussion;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst TeamTodoContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 90%;\r\n  position: absolute;\r\n  display: flex;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n    flex:1;\r\n      flex-direction:column;\r\n      height: 93%;\r\n      margin-left:-0.1rem;\r\n      width: 99%;\r\n  `}\r\n`;\r\n\r\nconst TeamTodoLeftContainer = styled.div`\r\n  flex: 0.4;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  overflow: hidden;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n        flex:0.4;\r\n        border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n        margin-bottom:1rem;\r\n    `}\r\n`;\r\n\r\nconst TeamTodoLeftLeftBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n        width:97% !important;\r\n        margin: 0.5rem 1rem;\r\n        margin-left:0rem;\r\n      `}\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125, 0.8);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    font-size: 0.9rem;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n        font-size:10px;\r\n        margin-top:-0.4rem;\r\n      `}\r\n  }\r\n`;\r\nconst MyTeamContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: scroll !important;\r\n`;\r\n\r\nconst TeamTodoLeftRightBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n        width:97% !important;\r\n        margin: 0.5rem 1rem;\r\n        margin-left:0rem;\r\n      `}\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125, 0.8);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    width: 100%;\r\n    font-size: 0.9rem;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n        font-size:10px;\r\n        margin-top:-0.4rem;\r\n      `}\r\n  }\r\n`;\r\nconst TeamTodoRightContainer = styled.div`\r\n  border-radius: 20px;\r\n  margin: 0 0.5rem;\r\n  flex: 0.6;\r\n  overflow-y: scroll;\r\n  padding: 0 1rem;\r\n  margin-bottom: 3.5rem;\r\n  margin-top: 0.5rem;\r\n\r\n  @media (max-height: 500px) {\r\n    flex: 0.85 !important;\r\n  }\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n  margin:0 0.5rem;\r\n  padding:0;\r\n    margin-top: 0.5rem;\r\n    margin-bottom: 4rem;\r\n    flex:1;\r\n  `}\r\n  .teamNoTodoImage {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    height:100% !important;\r\n  `}\r\n  }\r\n`;\r\n\r\nconst TodoRightDownBox = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  margin: 0.2rem 0;\r\n  margin-bottom: 0;\r\n  width: 57%;\r\n  background-color: rgb(206, 252, 236);\r\n  /* @media (max-height: 650px) {\r\n    bottom: 0.8rem;\r\n  } */\r\n  @media (max-height: 570px) {\r\n    bottom: 1.5rem;\r\n  }\r\n  @media (max-height: 450px) {\r\n    bottom: 2rem;\r\n  }\r\n  @media (max-height: 350px) {\r\n    bottom: 2.2rem;\r\n  }\r\n\r\n  textarea {\r\n    resize: none;\r\n    flex: 1;\r\n    border: none;\r\n    background: none;\r\n    padding: 0 0.5rem;\r\n    height: 2rem;\r\n    outline: none;\r\n    border-bottom: 2px solid rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    color: rgb(5, 185, 125);\r\n    font-size: 0.8rem;\r\n    @media (max-width: 600px) {\r\n      font-size: 0.8rem !important;\r\n    }\r\n    /* @media (max-height: 500px) {\r\n      height: 3rem !important;\r\n    } */\r\n  }\r\n\r\n  textarea::placeholder {\r\n    color: rgb(5, 185, 125);\r\n    font-size: 0.8rem;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size: 1rem;\r\n    `};\r\n  }\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n    border:none;\r\n    width: 100% !important;\r\n    //bottom: 0;\r\n    margin-right:-1.7rem !important;\r\n  `}\r\n`;\r\nconst ChatScreen = styled.div`\r\n  flex: 0.9;\r\n  overflow-y: scroll !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n`;\r\nconst ChatInput = styled.div`\r\n  flex: 0.1;\r\n  display: flex;\r\n  background-color: rgba(5, 185, 125, 0.281);\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  align-items: center;\r\n  height: 3.5rem;\r\n  overflow: hidden;\r\n`;\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SIdebarTimeline.js",["261","262","263"],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./sidebar.css\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { createMuiTheme, DialogActions } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport styled from \"styled-components\";\r\nimport TimelineEdit from \"../../board/TimelineEdit\";\r\nimport { db } from \"../../../firebase\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(2, 88, 60)\",\r\n    },\r\n  },\r\n  width: \"100%\",\r\n\r\n  overrides: {\r\n    MuiInputBase: {\r\n      root: {\r\n        overflow: \"hidden\",\r\n      },\r\n      input: {\r\n        color: \"rgb(0, 90, 60)\",\r\n        fontSize: \"1.2rem\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paperWidthSm: {\r\n        width: \"300px !important\",\r\n      },\r\n    },\r\n    MuiPickersDay: {\r\n      daySelected: {\r\n        backgroundColor: \"rgb(2, 88, 60)\",\r\n        [\":hover\"]: {\r\n          backgroundColor: \"rgb(2, 88, 60)\",\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      textPrimary: {\r\n        color: \"rgb(2, 88, 60)\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default function SidebarTimeline({ urlTeamName }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [timelineText, setTimelineText] = useState(\"\");\r\n  const [selectedStartDate, handleStartDateChange] = useState(new Date());\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [currId, setCurrId] = useState(\"\");\r\n  const [currCardDetailedText, setCurrCardDetailedText] = useState(\"\");\r\n  const [currTimeStamp, setCurrTimeStamp] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  const [items2, setItems2] = useState([]);\r\n  const [sort, setSort] = useState(true);\r\n  const [transitionIn, setTransitionIn] = useState(true);\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const handleSubmit = () => {\r\n    if (timelineText !== \"\") {\r\n      const date = selectedStartDate.toISOString();\r\n      let m = new Date(date).getMonth();\r\n      let x = new Date(date).getDate();\r\n      if (x < 10) {\r\n        x = \"0\" + x;\r\n      }\r\n      const year = new Date(date).getFullYear();\r\n\r\n      db.collection(\"teams\")\r\n        .doc(urlTeamName)\r\n        .collection(\"timeline\")\r\n        .add({\r\n          cardDetailedText: timelineText,\r\n          title: monthNames[m] + \" \" + x + \",\" + \" \" + year,\r\n          timeStamp: selectedStartDate.toISOString(),\r\n        });\r\n      setTransitionIn(true);\r\n      setTimelineText(\"\");\r\n      handleStartDateChange(new Date());\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sort) {\r\n      db.collection(\"teams\")\r\n        .doc(urlTeamName)\r\n        .collection(\"timeline\")\r\n        .orderBy(\"timeStamp\", \"asc\")\r\n        .onSnapshot((snapshot) => {\r\n          const list = snapshot.docs.map((doc) => ({\r\n            cardDetailedText: doc.data().cardDetailedText,\r\n            title: doc.data().title,\r\n            timeStamp: doc.data().timeStamp,\r\n            id: doc.id,\r\n          }));\r\n          setItems(list);\r\n        });\r\n    } else {\r\n      db.collection(\"teams\")\r\n        .doc(urlTeamName)\r\n        .collection(\"timeline\")\r\n        .orderBy(\"timeStamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          const list = snapshot.docs.map((doc) => ({\r\n            cardDetailedText: doc.data().cardDetailedText,\r\n            title: doc.data().title,\r\n            id: doc.id,\r\n            timeStamp: doc.data().timeStamp,\r\n          }));\r\n          setItems2(list);\r\n        });\r\n    }\r\n  }, [sort]);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addItemsTimeline\" onClick={handleClickOpen}>\r\n        Add Card\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <TimelineLeft>\r\n          <textarea\r\n            placeholder=\"Write...\"\r\n            className=\"timelineTextarea\"\r\n            value={timelineText}\r\n            onChange={(e) => setTimelineText(e.target.value)}\r\n          />\r\n          <div className=\"dataContainerTimeline\">\r\n            <h3 className=\"timeHeading\">Date</h3>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n              <div className=\"dateBox\">\r\n                <ThemeProvider theme={defaultMaterialTheme}>\r\n                  <DatePicker\r\n                    variant=\"dialog\"\r\n                    format=\"MMMM DD, YYYY\"\r\n                    value={selectedStartDate}\r\n                    orientation=\"portrait\"\r\n                    onChange={handleStartDateChange}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      textAlign: \"center\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <DateRangeIcon\r\n                          className=\"alarmModalIcon\"\r\n                          style={{ marginBottom: \"0.5rem\" }}\r\n                        />\r\n                      ),\r\n                      disableUnderline: true,\r\n                    }}\r\n                  />\r\n                </ThemeProvider>\r\n              </div>\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n          <div style={{ display: \"flex\", width: \"96%\", marginTop: \"0.3rem\" }}>\r\n            <Button\r\n              style={{ marginRight: \"0.3rem\", flex: 0.7 }}\r\n              className=\"addButtonTimeline\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit}\r\n            >\r\n              add\r\n            </Button>\r\n            <Button\r\n              style={{ flex: 0.3 }}\r\n              className=\"addButtonTimeline\"\r\n              color=\"primary\"\r\n              onClick={() => setSort(!sort)}\r\n            >\r\n              {sort ? \"Reverse\" : \"undo\"}\r\n            </Button>\r\n          </div>\r\n          <div className=\"editTimelineContainer\">\r\n            {sort\r\n              ? items?.map((item) => (\r\n                  <Slide\r\n                    in={transitionIn}\r\n                    timeout={400}\r\n                    key={item.id}\r\n                    direction=\"down\"\r\n                  >\r\n                    <div key={item.id} className=\"timelineContentBox\">\r\n                      <p className=\"timelineText\">{item.title}</p>\r\n                      <EditIcon\r\n                        className=\"timelineEditIcons\"\r\n                        onClick={() => {\r\n                          setCurrId(item.id);\r\n                          setCurrTimeStamp(item.timeStamp);\r\n                          setCurrCardDetailedText(item.cardDetailedText);\r\n                          setOpenEdit(true);\r\n                        }}\r\n                      />\r\n                      <DeleteIcon\r\n                        className=\"timelineEditIcons\"\r\n                        onClick={() => {\r\n                          setCurrId(item.id);\r\n                          setCurrTimeStamp(item.timeStamp);\r\n                          setCurrCardDetailedText(item.cardDetailedText);\r\n                          setOpenDelete(true);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Slide>\r\n                ))\r\n              : items2?.map((item) => (\r\n                  <Slide\r\n                    in={transitionIn}\r\n                    timeout={400}\r\n                    key={item.id}\r\n                    direction=\"down\"\r\n                  >\r\n                    <div className=\"timelineContentBox\">\r\n                      <p className=\"timelineText\">{item.title}</p>\r\n                      <EditIcon\r\n                        className=\"timelineEditIcons\"\r\n                        onClick={() => {\r\n                          setCurrId(item.id);\r\n                          setCurrTimeStamp(item.timeStamp);\r\n                          setCurrCardDetailedText(item.cardDetailedText);\r\n                          setOpenEdit(true);\r\n                        }}\r\n                      />\r\n                      <DeleteIcon\r\n                        className=\"timelineEditIcons\"\r\n                        onClick={() => {\r\n                          setCurrId(item.id);\r\n                          setCurrTimeStamp(item.timeStamp);\r\n                          setCurrCardDetailedText(item.cardDetailedText);\r\n                          setOpenDelete(true);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Slide>\r\n                ))}\r\n          </div>\r\n        </TimelineLeft>\r\n        <DialogActions>\r\n          <Button\r\n            className=\"addButtonModal\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n        {openEdit && (\r\n          <TimelineEdit\r\n            open={openEdit}\r\n            handleClose={() => setOpenEdit(false)}\r\n            del={false}\r\n            urlTeamName={urlTeamName}\r\n            id={currId}\r\n            date={currTimeStamp}\r\n            content={currCardDetailedText}\r\n            setTransitionIn={setTransitionIn}\r\n          />\r\n        )}\r\n        {openDelete && (\r\n          <TimelineEdit\r\n            open={openDelete}\r\n            handleClose={() => setOpenDelete(false)}\r\n            del={true}\r\n            urlTeamName={urlTeamName}\r\n            id={currId}\r\n            date={currTimeStamp}\r\n            content={currCardDetailedText}\r\n            setTransitionIn={setTransitionIn}\r\n          />\r\n        )}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TimelineLeft = styled.div`\r\n  width: 95.5%;\r\n  height: 100%;\r\n  flex: 1;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  padding: 1rem;\r\n  @media (max-height: 400px) {\r\n  }\r\n`;\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\Board.js",["264","265"],"import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport BoardSection from \"./BoardSection\";\r\nimport selectTeam from \"../../assets/images/selectTeam.svg\";\r\nimport Timeline from \"./Timeline\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport SidebarTeams from \"../todo/sidebar/SidebarTeams\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={1}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n  },\r\n  AppBar: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none\",\r\n    color: \"#000\",\r\n    marginTop: \"-1rem\",\r\n    paddingTop: \"0.5rem\",\r\n    maxWidth: \"20rem\",\r\n  },\r\n  Tabs: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: 0,\r\n    minHeight: \"1rem\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"rgb(5, 185, 125)\",\r\n    height: 3,\r\n    borderRadius: \"7px\",\r\n    width: \"9rem\",\r\n  },\r\n  label: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"0.6rem\",\r\n    color: \"#565656\",\r\n    textTransform: \"uppercase\",\r\n    paddingTop: \"10px\",\r\n    borderRadius: \"10px 10px 0 0\",\r\n  },\r\n  flexContainer: {\r\n    borderBottom: \"2px solid rgba(196, 196, 196, 0.5)\",\r\n  },\r\n}));\r\n\r\nfunction Board({ urlTeamName, userName, setTabValue, profileImage }) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [currTeamAdmin, setCurrTeamAdmin] = React.useState(false);\r\n  const { currentUser } = useAuth();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  useEffect(() => {\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      snapshot.docs.filter(\r\n        (doc) =>\r\n          doc.id === urlTeamName &&\r\n          doc.data().admin === currentUser.uid &&\r\n          setCurrTeamAdmin(true)\r\n      );\r\n    });\r\n  }, [urlTeamName]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return urlTeamName === undefined ? (\r\n    <div\r\n      style={{\r\n        height: \"89%\",\r\n        width: \"100%\",\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <img src={selectTeam} style={{ height: \"13rem\", width: \"13rem\" }} />\r\n\r\n      <Button\r\n        className=\"uploadView\"\r\n        style={{\r\n          padding: \"0.5rem\",\r\n          marginTop: \"1rem\",\r\n          fontSize: \"0.8rem\",\r\n          height: \"1.2rem\",\r\n          color: \"#fff\",\r\n          backgroundColor: \"rgb(5, 185, 125,0.9)\",\r\n          marginBottom: \"0.2rem\",\r\n          textTransform: \"none\",\r\n        }}\r\n        onClick={() => setTabValue(1)}\r\n      >\r\n        Select a team to view\r\n      </Button>\r\n    </div>\r\n  ) : (\r\n    <BoardContainer>\r\n      {!isSmall ? (\r\n        <SidebarTeams\r\n          UrlTeamName={urlTeamName}\r\n          userName={userName}\r\n          discussion={true}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <AppBar className={classes.AppBar} position=\"static\">\r\n        <Tabs\r\n          classes={{\r\n            indicator: classes.indicator,\r\n            flexContainer: classes.flexContainer,\r\n          }}\r\n          variant=\"fullWidth\"\r\n          scrollButtons=\"auto\"\r\n          className={classes.Tabs}\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <Tab className={classes.label} label=\"PLAN\" {...a11yProps(0)} />\r\n          <Tab className={classes.label} label=\"TIMELINE\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel\r\n        style={{\r\n          width: \"100%\",\r\n          marginBottom: \"0.5rem\",\r\n        }}\r\n        value={value}\r\n        index={0}\r\n      >\r\n        <BoardSection\r\n          urlTeamName={urlTeamName}\r\n          userName={userName}\r\n          profileImage={profileImage}\r\n          setTabValue={setTabValue}\r\n          currTeamAdmin={currTeamAdmin}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel\r\n        style={{\r\n          width: \"100%\",\r\n          marginBottom: \"0.5rem\",\r\n        }}\r\n        value={value}\r\n        index={1}\r\n      >\r\n        <Timeline\r\n          urlTeamName={urlTeamName}\r\n          userName={userName}\r\n          profileImage={profileImage}\r\n          setTabValue={setTabValue}\r\n        />\r\n      </TabPanel>\r\n    </BoardContainer>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"820px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst BoardContainer = styled.div`\r\n  width: 100%;\r\n  height: 89%;\r\n  position: absolute;\r\n  overflow: \"hidden\";\r\n  ${customMedia.lessThan(\"tablet\")`\r\n      overflow-x:scroll;\r\n    `};\r\n`;\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js",["266","267","268","269","270","271","272","273","274","275","276","277","278","279"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Tab,\r\n  Tabs,\r\n  useMediaQuery,\r\n  useTheme,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport TodoCard from \"./TodoCard\";\r\nimport noTodoImg from \"../../assets/images/noTodo.svg\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport DonutChart from \"./DonutChart\";\r\nimport firebase from \"firebase\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./heightMedia.css\";\r\nimport SidebarPersonal from \"./sidebar/SidebarPersonal\";\r\nimport Schedular from \"../Schedular/Schedular\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(2, 88, 60)\",\r\n    },\r\n  },\r\n  width: \"100%\",\r\n\r\n  overrides: {\r\n    MuiInputBase: {\r\n      root: {\r\n        overflow: \"hidden\",\r\n      },\r\n      input: {\r\n        color: \"rgb(0, 90, 60)\",\r\n        fontSize: \"1.2rem\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={1}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"100%\",\r\n  },\r\n  AppBar: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none\",\r\n    color: \"#000\",\r\n    marginTop: \"-1rem\",\r\n    paddingTop: \"0.5rem\",\r\n  },\r\n  Tabs: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: 0,\r\n    minHeight: \"1rem\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"rgb(5, 185, 125)\",\r\n    height: 3,\r\n    borderRadius: \"7px\",\r\n    width: \"9rem\",\r\n  },\r\n  label: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"0.6rem\",\r\n    color: \"#565656\",\r\n    textTransform: \"uppercase\",\r\n    paddingTop: \"10px\",\r\n    borderRadius: \"10px 10px 0 0\",\r\n  },\r\n  flexContainer: {\r\n    borderBottom: \"2px solid rgba(196, 196, 196, 0.5)\",\r\n  },\r\n}));\r\n\r\nfunction PersonalTodo() {\r\n  const [selectedStartDate, handleStartDateChange] = useState(new Date());\r\n  const [selectedEndDate, handleEndDateChange] = useState(new Date());\r\n  const [inputTodo, setInputTodo] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"All (Day)\");\r\n  const [priorityFilter, setPriorityFilter] = useState(\"All (Priority)\");\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [transitionDirection, setTransitionDirection] = useState(\"down\");\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [todoLength, setTodoLength] = useState(0);\r\n  const [priority, setPriority] = useState(0);\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const [showFilter, setShowFilter] = useState(true);\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const PrettoSlider = createMuiTheme({\r\n    overrides: {\r\n      MuiSlider: {\r\n        root: {\r\n          color:\r\n            priority < 33\r\n              ? \"rgb(1, 112, 75)\"\r\n              : priority > 66\r\n              ? \"rgba(185, 5, 5)\"\r\n              : \"rgba(185, 86, 5)\",\r\n          height: 8,\r\n          transition: \"all 0.5s ease-in-out\",\r\n          transform: \"scale(0.6)\",\r\n        },\r\n\r\n        thumb: {\r\n          height: 24,\r\n          width: 24,\r\n          backgroundColor: \"#fff\",\r\n          border: \"2px solid currentColor\",\r\n          marginTop: -8,\r\n          marginLeft: -12,\r\n          \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"inherit\",\r\n          },\r\n        },\r\n        active: {},\r\n        valueLabel: {\r\n          left: \"calc(-50% + 4px)\",\r\n        },\r\n        track: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n        rail: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleInputChange = (value) => {\r\n    setInputTodo(value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setTransitionDirection(\"right\");\r\n    if (inputTodo !== \"\") {\r\n      setLoader(true);\r\n      db.collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"todos\")\r\n        .add({\r\n          todoText: inputTodo,\r\n          todoStartDate: selectedStartDate.toISOString(),\r\n          todoEndDate: selectedEndDate.toISOString(),\r\n          checked: false,\r\n          priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n          teamTodoText: \"\",\r\n          teamName: \"\",\r\n          help: false,\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n      setInputTodo(\"\");\r\n      setLoader(false);\r\n      setPriority(0);\r\n      handleStartDateChange(new Date());\r\n      handleEndDateChange(new Date());\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleSubmitEnter = async (event) => {\r\n    setTransitionDirection(\"right\");\r\n    if (\r\n      (inputTodo !== \"\" && event.code === \"Enter\") ||\r\n      event.code === \"NumpadEnter\"\r\n    ) {\r\n      setLoader(true);\r\n      db.collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"todos\")\r\n        .add({\r\n          todoText: inputTodo,\r\n          todoStartDate: selectedStartDate.toISOString(),\r\n          todoEndDate: selectedEndDate.toISOString(),\r\n          checked: false,\r\n          priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n          teamTodoText: \"\",\r\n          teamName: \"\",\r\n          help: false,\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n      setInputTodo(\"\");\r\n      setLoader(false);\r\n      setPriority(0);\r\n      handleStartDateChange(new Date());\r\n      handleEndDateChange(new Date());\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleTodoLength = (list) => {\r\n    const l = list.length;\r\n    setTodoLength(l);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"todos\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoText: doc.data().todoText,\r\n          todoStartDate: doc.data().todoStartDate,\r\n          todoEndDate: doc.data().todoEndDate,\r\n          checked: doc.data().checked,\r\n          priority: doc.data().priority,\r\n          teamTodoText: doc.data().teamTodoText,\r\n          todoTeamName: doc.data().teamName,\r\n          help: doc.data().help,\r\n        }));\r\n        console.log(list);\r\n        setTodoList(list);\r\n        handleTodoLength(list);\r\n      });\r\n  }, []);\r\n\r\n  function labelText(value) {\r\n    return priority < 33 ? \"Low\" : priority > 66 ? \"Top\" : \"Med\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      new Date(selectedEndDate).getTime() <\r\n      new Date(selectedStartDate).getTime()\r\n    ) {\r\n      handleEndDateChange(selectedStartDate);\r\n    }\r\n    // if (new Date(selectedStartDate).getTime() < new Date().getTime()) {\r\n    //   handleStartDateChange(new Date());\r\n    // }\r\n  }, [selectedEndDate]);\r\n\r\n  const emptyFunction = () => {};\r\n\r\n  return (\r\n    <TodoContainer>\r\n      {!isSmall ? (\r\n        <SidebarPersonal />\r\n      ) : (\r\n        <TodoLeftContainer>\r\n          <TodoLeftUpBox>\r\n            <div className=\"inputField\">\r\n              <CreateIcon className=\"todoIcon\" />\r\n              <input\r\n                value={inputTodo}\r\n                className=\"todoInputPersonal\"\r\n                type=\"text\"\r\n                placeholder=\"Write here...\"\r\n                onChange={(e) => handleInputChange(e.target.value)}\r\n                onKeyDown={(e) => handleSubmitEnter(e)}\r\n              />\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <div className=\"dataContainer\">\r\n                <h3 className=\"timeHeading\">Start date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBox\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        //format=\"DD/MM/YYYY\"\r\n                        value={selectedStartDate}\r\n                        onChange={handleStartDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n              <div className=\"dataContainer\" style={{ marginLeft: 0 }}>\r\n                <h3 className=\"timeHeading\">End date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBox\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        value={selectedEndDate}\r\n                        //  format=\"DD/MM/YYYY\"\r\n                        onChange={handleEndDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              disabled={loader}\r\n              endIcon={<AddIcon />}\r\n              className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              ADD\r\n            </Button>\r\n\r\n            <p\r\n              style={{\r\n                color: \"rgb(0, 90, 60)\",\r\n                fontSize: \"0.6rem\",\r\n                marginTop: \"0.5rem\",\r\n              }}\r\n            >\r\n              Set priority\r\n            </p>\r\n            <div style={{ width: \"90%\" }}>\r\n              <ThemeProvider theme={PrettoSlider}>\r\n                <Slider\r\n                  getAriaValueText={labelText}\r\n                  defaultValue={priority}\r\n                  value={priority}\r\n                  valueLabelFormat={labelText}\r\n                  valueLabelDisplay=\"auto\"\r\n                  onChange={(e, data) => {\r\n                    setPriority(data);\r\n                  }}\r\n                />\r\n              </ThemeProvider>\r\n            </div>\r\n          </TodoLeftUpBox>\r\n          <TodoLeftDownBox>\r\n            {todoLength !== 0 ? (\r\n              <DonutChart todoLength={todoLength} />\r\n            ) : (\r\n              <h3\r\n                style={{\r\n                  fontWeight: 600,\r\n                  padding: \"1rem\",\r\n                  color: \"rgba(0, 141, 94, 0.695)\",\r\n                }}\r\n              >\r\n                NO ITEMS\r\n              </h3>\r\n            )}\r\n          </TodoLeftDownBox>\r\n        </TodoLeftContainer>\r\n      )}\r\n\r\n      <TodoRightContainer>\r\n        <AppBar className={classes.AppBar} position=\"static\">\r\n          <Tabs\r\n            classes={{\r\n              indicator: classes.indicator,\r\n              flexContainer: classes.flexContainer,\r\n            }}\r\n            variant=\"fullWidth\"\r\n            scrollButtons=\"auto\"\r\n            className={classes.Tabs}\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"simple tabs example\"\r\n            style={{ position: \"relative\" }}\r\n          >\r\n            <Tab\r\n              className={classes.label}\r\n              label=\"ALL\"\r\n              {...a11yProps(0)}\r\n              onClick={() => {\r\n                setShowFilter(true);\r\n                setTransitionDirection(\"down\");\r\n              }}\r\n            />\r\n            <Tab\r\n              className={classes.label}\r\n              label=\"CHECKED\"\r\n              {...a11yProps(1)}\r\n              disabled={todoList.length === 0 ? true : false}\r\n              onClick={() => {\r\n                setShowFilter(true);\r\n                setTransitionDirection(\"down\");\r\n              }}\r\n            />\r\n            <Tab\r\n              className={classes.label}\r\n              label=\"UNCHECKED\"\r\n              {...a11yProps(2)}\r\n              disabled={todoList.length === 0 ? true : false}\r\n              onClick={() => {\r\n                setShowFilter(true);\r\n                setTransitionDirection(\"down\");\r\n              }}\r\n            />\r\n\r\n            <Tab\r\n              className={classes.label}\r\n              label=\"SCHEDULAR\"\r\n              {...a11yProps(3)}\r\n              style={{\r\n                backgroundColor: \"rgb(2, 92, 62)\",\r\n                color: \"#fff\",\r\n              }}\r\n              onClick={() => setShowFilter(false)}\r\n            />\r\n          </Tabs>\r\n        </AppBar>\r\n        {showFilter && (\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Select\r\n              value={filter}\r\n              onChange={(e) => setFilter(e.target.value)}\r\n              disableUnderline\r\n              style={{\r\n                height: \"2rem\",\r\n                marginTop: \"0.5rem\",\r\n                marginBottom: \"0.2rem\",\r\n                background: \"#d1faec\",\r\n                borderRadius: 10,\r\n                width: isSmall ? \"13%\" : \"30%\",\r\n                padding: \"2px 10px\",\r\n                textAlign: \"center\",\r\n                color: \"#2ec592\",\r\n                fontSize: \"0.7rem\",\r\n              }}\r\n            >\r\n              <MenuItem\r\n                style={{\r\n                  color: \"#2ec592\",\r\n                  fontSize: \"0.7rem\",\r\n                }}\r\n                value=\"All (Day)\"\r\n              >\r\n                All (Day)\r\n              </MenuItem>\r\n              <MenuItem\r\n                style={{\r\n                  color: \"#2ec592\",\r\n                  fontSize: \"0.7rem\",\r\n                }}\r\n                value=\"Today\"\r\n              >\r\n                Today\r\n              </MenuItem>\r\n              <MenuItem\r\n                style={{\r\n                  color: \"#2ec592\",\r\n                  fontSize: \"0.7rem\",\r\n                }}\r\n                value=\"Missed\"\r\n              >\r\n                Missed\r\n              </MenuItem>\r\n            </Select>\r\n            <Select\r\n              value={priorityFilter}\r\n              onChange={(e) => setPriorityFilter(e.target.value)}\r\n              disableUnderline\r\n              style={{\r\n                height: \"2rem\",\r\n                marginTop: \"0.5rem\",\r\n                marginBottom: \"0.2rem\",\r\n                marginLeft: \"1rem\",\r\n                background: \"#d1faec\",\r\n                borderRadius: 10,\r\n                width: isSmall ? \"13%\" : \"30%\",\r\n                padding: \"2px 10px\",\r\n                textAlign: \"center\",\r\n                color: \"#2ec592\",\r\n                fontSize: \"0.7rem\",\r\n              }}\r\n            >\r\n              <MenuItem\r\n                style={{\r\n                  color: \"#2ec592\",\r\n                  fontSize: \"0.7rem\",\r\n                }}\r\n                value=\"All (Priority)\"\r\n              >\r\n                All (Priority)\r\n              </MenuItem>\r\n              <MenuItem\r\n                style={{\r\n                  color: \"#2ec592\",\r\n                  fontSize: \"0.7rem\",\r\n                }}\r\n                value=\"Top priority\"\r\n              >\r\n                Top priority\r\n              </MenuItem>\r\n              <MenuItem\r\n                style={{\r\n                  color: \"#2ec592\",\r\n                  fontSize: \"0.7rem\",\r\n                }}\r\n                value=\"Mid priority\"\r\n              >\r\n                Mid priority\r\n              </MenuItem>\r\n              <MenuItem\r\n                style={{\r\n                  color: \"#2ec592\",\r\n                  fontSize: \"0.7rem\",\r\n                }}\r\n                value=\"Low priority\"\r\n              >\r\n                Low priority\r\n              </MenuItem>\r\n            </Select>\r\n            {filter !== \"All (Day)\" || priorityFilter !== \"All (Priority)\" ? (\r\n              <p\r\n                className=\"clearFilter\"\r\n                onClick={() => {\r\n                  setFilter(\"All (Day)\");\r\n                  setPriorityFilter(\"All (Priority)\");\r\n                }}\r\n              >\r\n                Clear all{\" \"}\r\n                <ClearIcon style={{ fontSize: \"0.7rem\", marginLeft: \"2px\" }} />\r\n              </p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        )}\r\n        <TabPanel\r\n          style={{\r\n            width: \"100%\",\r\n            overflowY: \"scroll\",\r\n            marginBottom: \"0.5rem\",\r\n          }}\r\n          value={value}\r\n          index={0}\r\n        >\r\n          {todoList.length !== 0 ? (\r\n            todoList\r\n              .filter((list) => {\r\n                if (filter === \"All (Day)\") {\r\n                  return list;\r\n                }\r\n                if (filter === \"Today\") {\r\n                  if (\r\n                    new Date(list.todoEndDate).toString().substring(0, 15) ===\r\n                    new Date().toString().substring(0, 15)\r\n                  ) {\r\n                    return list;\r\n                  }\r\n                }\r\n                if (filter === \"Missed\") {\r\n                  if (\r\n                    new Date().getTime() -\r\n                      new Date(list.todoEndDate).getTime() >\r\n                      86400000 &&\r\n                    !list.checked\r\n                  ) {\r\n                    return list;\r\n                  }\r\n                }\r\n              })\r\n              .filter((list) => {\r\n                if (priorityFilter === \"All (Priority)\") {\r\n                  return list;\r\n                }\r\n                if (priorityFilter === \"Top priority\") {\r\n                  if (list.priority === 3) {\r\n                    return list;\r\n                  }\r\n                }\r\n                if (priorityFilter === \"Mid priority\") {\r\n                  if (list.priority === 2) {\r\n                    return list;\r\n                  }\r\n                }\r\n                if (priorityFilter === \"Low priority\") {\r\n                  if (list.priority === 1) {\r\n                    return list;\r\n                  }\r\n                }\r\n              })\r\n              .map((todo) => (\r\n                <TodoCard\r\n                  key={todo.id}\r\n                  id={todo.id}\r\n                  text={todo.todoText}\r\n                  todoStartDate={todo.todoStartDate}\r\n                  todoEndDate={todo.todoEndDate}\r\n                  checked={todo.checked}\r\n                  priority={todo.priority}\r\n                  teamTodoText={todo.teamTodoText}\r\n                  todoTeamName={todo.todoTeamName}\r\n                  help={todo.help}\r\n                  setTransitionDirection={setTransitionDirection}\r\n                  transitionDirection={transitionDirection}\r\n                  setPersonalTabValue={setValue}\r\n                />\r\n              ))\r\n          ) : (\r\n            <NoTodo>\r\n              <img src={noTodoImg} className=\"noTodo\"></img>\r\n              <h3\r\n                style={{\r\n                  fontWeight: 600,\r\n                  padding: \"1rem\",\r\n                  color: \"rgba(0, 141, 94, 0.695)\",\r\n                }}\r\n              >\r\n                NO ITEMS\r\n              </h3>\r\n              <h5\r\n                style={{\r\n                  fontWeight: 600,\r\n                  color: \"rgba(0, 141, 94, 0.695)\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => history.push(\"/help\")}\r\n              >\r\n                Need Help?\r\n              </h5>\r\n            </NoTodo>\r\n          )}\r\n        </TabPanel>\r\n        <TabPanel\r\n          value={value}\r\n          index={1}\r\n          style={{ width: \"100%\", overflowY: \"scroll\", marginBottom: \"0.5rem\" }}\r\n        >\r\n          {todoList\r\n            .filter((check) => {\r\n              if (check.checked === true) {\r\n                return check;\r\n              }\r\n            })\r\n            .filter((list) => {\r\n              if (filter === \"All (Day)\") {\r\n                return list;\r\n              }\r\n              if (filter === \"Today\") {\r\n                if (\r\n                  new Date(list.todoEndDate).toString().substring(0, 15) ===\r\n                  new Date().toString().substring(0, 15)\r\n                ) {\r\n                  return list;\r\n                }\r\n              }\r\n              if (filter === \"Missed\") {\r\n                if (\r\n                  new Date().getTime() - new Date(list.todoEndDate).getTime() >\r\n                    86400000 &&\r\n                  !list.checked\r\n                ) {\r\n                  return list;\r\n                }\r\n              }\r\n            })\r\n            .filter((list) => {\r\n              if (priorityFilter === \"All (Priority)\") {\r\n                return list;\r\n              }\r\n              if (priorityFilter === \"Top priority\") {\r\n                if (list.priority === 3) {\r\n                  return list;\r\n                }\r\n              }\r\n              if (priorityFilter === \"Mid priority\") {\r\n                if (list.priority === 2) {\r\n                  return list;\r\n                }\r\n              }\r\n              if (priorityFilter === \"Low priority\") {\r\n                if (list.priority === 1) {\r\n                  return list;\r\n                }\r\n              }\r\n            })\r\n            .map((todo) => (\r\n              <TodoCard\r\n                key={todo.id}\r\n                id={todo.id}\r\n                text={todo.todoText}\r\n                todoStartDate={todo.todoStartDate}\r\n                todoEndDate={todo.todoEndDate}\r\n                checked={todo.checked}\r\n                priority={todo.priority}\r\n                teamTodoText={todo.teamTodoText}\r\n                todoTeamName={todo.todoTeamName}\r\n                help={todo.help}\r\n                setTransitionDirection={setTransitionDirection}\r\n                transitionDirection={transitionDirection}\r\n                setPersonalTabValue={setValue}\r\n              />\r\n            ))}\r\n        </TabPanel>\r\n        <TabPanel\r\n          value={value}\r\n          index={2}\r\n          style={{ width: \"100%\", overflowY: \"scroll\", marginBottom: \"0.5rem\" }}\r\n        >\r\n          {todoList\r\n            .filter((check) => {\r\n              if (check.checked === false) {\r\n                return check;\r\n              }\r\n            })\r\n            .filter((list) => {\r\n              if (filter === \"All (Day)\") {\r\n                return list;\r\n              }\r\n              if (filter === \"Today\") {\r\n                if (\r\n                  new Date(list.todoEndDate).toString().substring(0, 15) ===\r\n                  new Date().toString().substring(0, 15)\r\n                ) {\r\n                  return list;\r\n                }\r\n              }\r\n              if (filter === \"Missed\") {\r\n                if (\r\n                  new Date().getTime() - new Date(list.todoEndDate).getTime() >\r\n                    86400000 &&\r\n                  !list.checked\r\n                ) {\r\n                  return list;\r\n                }\r\n              }\r\n            })\r\n            .filter((list) => {\r\n              if (priorityFilter === \"All (Priority)\") {\r\n                return list;\r\n              }\r\n              if (priorityFilter === \"Top priority\") {\r\n                if (list.priority === 3) {\r\n                  return list;\r\n                }\r\n              }\r\n              if (priorityFilter === \"Mid priority\") {\r\n                if (list.priority === 2) {\r\n                  return list;\r\n                }\r\n              }\r\n              if (priorityFilter === \"Low priority\") {\r\n                if (list.priority === 1) {\r\n                  return list;\r\n                }\r\n              }\r\n            })\r\n            .map((todo) => (\r\n              <TodoCard\r\n                key={todo.id}\r\n                id={todo.id}\r\n                text={todo.todoText}\r\n                todoStartDate={todo.todoStartDate}\r\n                todoEndDate={todo.todoEndDate}\r\n                checked={todo.checked}\r\n                priority={todo.priority}\r\n                teamTodoText={todo.teamTodoText}\r\n                todoTeamName={todo.todoTeamName}\r\n                help={todo.help}\r\n                setTransitionDirection={setTransitionDirection}\r\n                transitionDirection={transitionDirection}\r\n                setPersonalTabValue={setValue}\r\n              />\r\n            ))}\r\n        </TabPanel>\r\n        <TabPanel style={{ width: \"100%\" }} value={value} index={3}>\r\n          <Schedular todoList={todoList} setPersonalTabValue={setValue} />\r\n        </TabPanel>\r\n      </TodoRightContainer>\r\n    </TodoContainer>\r\n  );\r\n}\r\n\r\nexport default PersonalTodo;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst NoTodo = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 2rem;\r\n  .noTodo {\r\n    object-fit: contain;\r\n    height: 40%;\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst TodoContainer = styled.div`\r\n  width: 100%;\r\n  height: 89%;\r\n  position: absolute;\r\n  display: flex;\r\n  overflow: hidden;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex-direction:column;\r\n      height: 85%;\r\n      width: 97%;\r\n  `};\r\n\r\n  .clearFilter {\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    margin-left: 1rem;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    font-size: 0.6rem;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    padding: 4px 6px;\r\n    transition: all 0.5s ease-in-out;\r\n  }\r\n  .clearFilter:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n`;\r\n\r\nconst TodoLeftContainer = styled.div`\r\n  //flex: 0.31;\r\n  height: 100%;\r\n  width: 31%;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n  flex: 0.45;\r\n         padding: 0rem;\r\n         margin:0;\r\n         border:none;\r\n    `};\r\n`;\r\n\r\nconst TodoLeftUpBox = styled.div`\r\n  //flex: 0.5 !important;\r\n  width: 100%;\r\n  border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n // flex: 0.5;\r\n    border:none;\r\n  `};\r\n\r\n  .inputField {\r\n    width: 90%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    padding-left: 0.5rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    margin:0;\r\n      // width: 87%;\r\n      // height:7rem;\r\n      //    padding:0.5rem 1rem;\r\n    `};\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 1rem;\r\n    flex: 0.9;\r\n    padding-left: 0.5rem;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size:0.7rem;\r\n    `};\r\n  }\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n    @media (max-height: 700px) {\r\n      font-size: 0.5rem;\r\n    }\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size:0.7rem;\r\n    `};\r\n  }\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n  .AlarmIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 2rem !important;\r\n    flex: 0.15;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    margin-top:-0px;\r\n    `};\r\n  }\r\n  .timeHeading {\r\n    flex: 0.5;\r\n    font-size: 0.7rem;\r\n    color: rgb(0, 90, 60);\r\n    font-weight: 300;\r\n    margin-left: 1rem;\r\n    @media (max-height: 400px) {\r\n      font-size: 3rem;\r\n    }\r\n  }\r\n  .dataContainer {\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 0.5rem;\r\n    width: 50%;\r\n    margin: 0rem 0.5rem;\r\n    padding-top: 0.5rem;\r\n  }\r\n  .dateBox {\r\n    overflow: hidden;\r\n    width: 90%;\r\n    height: 1rem;\r\n    border: none;\r\n    padding: 0.5rem 0.7rem;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    padding: 1.2rem 0.9rem;\r\n         margin:0.5rem 0;\r\n    `};\r\n  }\r\n  .AddButton {\r\n    width: 96%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    margin: 0.5rem;\r\n    margin-bottom: 0;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n     margin: 0rem;\r\n     height:2rem;\r\n    `};\r\n  }\r\n  .AddButton:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  .AddButtonDisabled {\r\n    opacity: 0.7;\r\n    width: 95.5%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\nconst TodoLeftDownBox = styled.div`\r\n  overflow: hidden;\r\n  // flex: 0.5 !important;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n  //flex: 1;\r\n    `};\r\n`;\r\n\r\nconst TodoRightContainer = styled.div`\r\n  // flex: 0.69;\r\n  height: 100%;\r\n  width: 69%;\r\n  padding: 0 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: scroll !important;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n       padding:0;\r\n       width: 100%;\r\n    `};\r\n`;\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\notification\\Notification.js",["280","281","282","283"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\TimelineEdit.js",["284","285","286","287","288"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\Timeline.js",["289","290","291"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Delete.js",["292","293","294","295","296","297","298","299"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\index.js",[],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\home\\Home.js",["300","301","302"],"import {\r\n  AppBar,\r\n  Button,\r\n  makeStyles,\r\n  Paper,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport NavBar from \"../navBar/NavBar\";\r\nimport styled from \"styled-components\";\r\nimport PersonalTodo from \"../todo/PersonalTodo\";\r\nimport TeamTodo from \"../todo/TeamTodo\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport Discussion from \"../todo/Discussion\";\r\nimport { db } from \"../../firebase\";\r\nimport SnackBar from \"../snackbar/SnackBar\";\r\nimport Profile from \"../profile/Profile\";\r\nimport Board from \"../board/Board\";\r\nimport Notification from \"../notification/Notification\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={1}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"100%\",\r\n  },\r\n  AppBar: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none\",\r\n    color: \"#000\",\r\n    height: \"2rem\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  Tabs: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"0rem\",\r\n    minHeight: \"1rem\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"rgb(5, 185, 125)\",\r\n    height: 3,\r\n    borderRadius: \"7px\",\r\n    width: \"9rem\",\r\n  },\r\n  label: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"0.7rem\",\r\n    color: \"#565656\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  flexContainer: {\r\n    borderBottom: \"3px solid rgba(196, 196, 196, 0.5)\",\r\n  },\r\n}));\r\n\r\nfunction Home(props) {\r\n  const { currentUser, logOut } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [profileImage, setProfileImage] = React.useState(\"\");\r\n  const [greeting, setGreeting] = React.useState(\"\");\r\n  const [discussionLock, setDiscussionLock] = React.useState(true);\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"profile\")\r\n      .onSnapshot((snapshot) => {\r\n        const profile = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n          profileImage: doc.data().profileImage,\r\n        }));\r\n        profile.filter((p) => {\r\n          if (p.name !== \"\") {\r\n            setUserName(p.name);\r\n            setProfileImage(p.profileImage);\r\n            setOpen(true);\r\n            setDiscussionLock(false);\r\n          }\r\n        });\r\n      });\r\n    // document.addEventListener(\"keydown\", (event) => {\r\n    //   if (event.ctrlKey) {\r\n    //     if (c < 4) {\r\n    //       ++c;\r\n    //       setValue(c);\r\n    //     } else {\r\n    //       setValue(0);\r\n    //       c = 0;\r\n    //     }\r\n\r\n    //     event.preventDefault();\r\n    //   }\r\n    // });\r\n  }, []);\r\n  var c = 0;\r\n\r\n  React.useEffect(() => {\r\n    var data = [\r\n        [22, \"Working late! \"],\r\n        [17, \"Good evening! \"],\r\n        [12, \"Good afternoon! \"],\r\n        [7, \"Good morning! \"],\r\n        [4, \"Whoa, early bird! \"],\r\n        [0, \"Late night work! \"],\r\n      ],\r\n      hr = new Date().getHours();\r\n    for (var i = 0; i < data.length; i++) {\r\n      if (hr >= data[i][0]) {\r\n        setGreeting(data[i][1]);\r\n        break;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100vh\", overflow: \"hidden\" }}>\r\n      <HomeContainer>\r\n        {!isSmall ? (\r\n          <div\r\n            style={{\r\n              width: \"92%\",\r\n              height: \"50px\",\r\n              color: \"#fff\",\r\n              background: \"rgba(0, 145, 96, 0.2)\",\r\n              paddingLeft: \"15px\",\r\n              paddingRight: \"15px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              position: \"static\",\r\n              boxShadow:\r\n                \"rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            <Notification setTabValue={setValue} />\r\n            <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/help\")}\r\n            >\r\n              Help\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <NavBar\r\n            style={{ position: \"fixed\" }}\r\n            page={1}\r\n            setTabValue={setValue}\r\n          />\r\n        )}\r\n\r\n        <Paper className=\"mainPaper\" elevation={5}>\r\n          <AppBar className={classes.AppBar} position=\"static\">\r\n            <Tabs\r\n              classes={{\r\n                indicator: classes.indicator,\r\n                flexContainer: classes.flexContainer,\r\n                root: classes.Tabs,\r\n              }}\r\n              variant=\"fullWidth\"\r\n              scrollButtons=\"auto\"\r\n              className={classes.Tabs}\r\n              value={value}\r\n              onChange={handleChange}\r\n              aria-label=\"simple tabs example\"\r\n              style={{ position: \"relative\" }}\r\n            >\r\n              <Tab\r\n                className={classes.label}\r\n                label={!isSmall ? \"My\" : \"PERSONAL\"}\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab className={classes.label} label=\"TEAM\" {...a11yProps(1)} />\r\n              <Tab\r\n                disabled={discussionLock}\r\n                className={classes.label}\r\n                label=\"BOARD\"\r\n                {...a11yProps(2)}\r\n              />\r\n              <Tab\r\n                disabled={discussionLock}\r\n                className={classes.label}\r\n                label={!isSmall ? \"Chat\" : \"DISCUSSION\"}\r\n                {...a11yProps(3)}\r\n              />\r\n              <Tab\r\n                className={classes.label}\r\n                label=\"Profile\"\r\n                {...a11yProps(4)}\r\n              />\r\n            </Tabs>\r\n          </AppBar>\r\n          <TabPanel style={{ width: \"100%\" }} value={value} index={0}>\r\n            <PersonalTodo />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <TeamTodo\r\n              UrlTeamName={props.match.params.teamName}\r\n              setDiscussionLock={setDiscussionLock}\r\n              profileImage={profileImage}\r\n              setTabValue={setValue}\r\n              userName={userName}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <Board\r\n              urlTeamName={props.match.params.teamName}\r\n              userName={userName}\r\n              profileImage={profileImage}\r\n              setTabValue={setValue}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={3}>\r\n            <Discussion\r\n              UrlTeamName={props.match.params.teamName}\r\n              userName={userName}\r\n              profileImage={profileImage}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={4}>\r\n            <Profile />\r\n          </TabPanel>\r\n        </Paper>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1440 320\"\r\n          className=\"svgUp\"\r\n        >\r\n          <path\r\n            fill=\"#00cba9\"\r\n            fill-opacity=\"1\"\r\n            d=\"M0,288L40,282.7C80,277,160,267,240,250.7C320,235,400,213,480,197.3C560,181,640,171,720,154.7C800,139,880,117,960,122.7C1040,128,1120,160,1200,176C1280,192,1360,192,1400,192L1440,192L1440,0L1400,0C1360,0,1280,0,1200,0C1120,0,1040,0,960,0C880,0,800,0,720,0C640,0,560,0,480,0C400,0,320,0,240,0C160,0,80,0,40,0L0,0Z\"\r\n          ></path>\r\n        </svg>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1440 320\"\r\n          className=\"svgDown\"\r\n        >\r\n          <path\r\n            fill=\"rgb(0, 80, 53)\"\r\n            fill-opacity=\"1\"\r\n            d=\"M0,96L14.1,96C28.2,96,56,96,85,112C112.9,128,141,160,169,160C197.6,160,226,128,254,128C282.4,128,311,160,339,149.3C367.1,139,395,85,424,80C451.8,75,480,117,508,144C536.5,171,565,181,593,176C621.2,171,649,149,678,170.7C705.9,192,734,256,762,234.7C790.6,213,819,107,847,106.7C875.3,107,904,213,932,234.7C960,256,988,192,1016,138.7C1044.7,85,1073,43,1101,37.3C1129.4,32,1158,64,1186,96C1214.1,128,1242,160,1271,186.7C1298.8,213,1327,235,1355,208C1383.5,181,1412,107,1426,69.3L1440,32L1440,320L1425.9,320C1411.8,320,1384,320,1355,320C1327.1,320,1299,320,1271,320C1242.4,320,1214,320,1186,320C1157.6,320,1129,320,1101,320C1072.9,320,1045,320,1016,320C988.2,320,960,320,932,320C903.5,320,875,320,847,320C818.8,320,791,320,762,320C734.1,320,706,320,678,320C649.4,320,621,320,593,320C564.7,320,536,320,508,320C480,320,452,320,424,320C395.3,320,367,320,339,320C310.6,320,282,320,254,320C225.9,320,198,320,169,320C141.2,320,113,320,85,320C56.5,320,28,320,14,320L0,320Z\"\r\n          ></path>\r\n        </svg>\r\n        {open && (\r\n          <SnackBar\r\n            open={open}\r\n            handleClose={() => setOpen(false)}\r\n            text={`${greeting} ${userName}`}\r\n            home={true}\r\n          />\r\n        )}\r\n        \r\n      </HomeContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst HomeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: rgb(5, 185, 125, 0.835);\r\n  padding: 0rem 1rem;\r\n  padding-top: 2.7rem;\r\n  overflow: hidden !important;\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      padding: 0;\r\n    `};\r\n\r\n  .mainPaper {\r\n    overflow: hidden;\r\n    position: absolute;\r\n    width: 97.5%;\r\n    height: 91%;\r\n    border-radius: 15px;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 15px 15px 0 0;\r\n    `};\r\n  }\r\n\r\n  .svgUp {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0rem;\r\n    left: 0;\r\n    transform: scale(1);\r\n    z-index: -1;\r\n  }\r\n  .svgDown {\r\n    display: block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    transform: scale(1);\r\n    z-index: -1;\r\n  }\r\n`;\r\n",["303","304"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\profile\\Endo.js",["305","306"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Chat.js",["307","308","309","310","311","312"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\DownloadImageModal.js",["313","314","315","316"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Fade } from \"@material-ui/core\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport { db, storage } from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Fade direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DownloadImageModal({\r\n  open,\r\n  handleClose,\r\n  link,\r\n  senderId,\r\n  imageId,\r\n  urlTeamName,\r\n  id,\r\n  imageList,\r\n  handleCloseImageModal,\r\n  setImageList,\r\n  todoText,\r\n  userName,\r\n  profileImage,\r\n  setTabValue,\r\n}) {\r\n  const { currentUser } = useAuth();\r\n  const [sure, setSure] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [imageChatText, setImageChatText] = useState(\"\");\r\n\r\n  const handleDeleteImage = async () => {\r\n    var desertRef = storage.refFromURL(link);\r\n    desertRef\r\n      .delete()\r\n      .then(function () {\r\n        console.log(\"File deleted successfully\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    db.collection(\"teams\")\r\n      .doc(urlTeamName)\r\n      .collection(\"teamTodos\")\r\n      .doc(id)\r\n      .collection(\"teamTodoImages\")\r\n      .doc(imageId)\r\n      .delete();\r\n\r\n    let _list = [...imageList];\r\n    setImageList(_list.filter((img) => imageId !== img.id));\r\n    if (imageList.length === 1) {\r\n      handleCloseImageModal();\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const sentToDiscussion = () => {\r\n    if (imageChatText !== \"\") {\r\n      db.collection(\"teams\").doc(urlTeamName).collection(\"discussion\").add({\r\n        discussionText: imageChatText,\r\n        teamTodoText: todoText,\r\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        senderId: currentUser.uid,\r\n        senderProfileImage: profileImage,\r\n        senderName: userName,\r\n        discussionTime: new Date().toISOString(),\r\n        help: true,\r\n        teamTodoImage: link,\r\n      });\r\n      setTabValue(2);\r\n      handleClose();\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogContent>\r\n          {currentUser.uid === senderId && !sure && (\r\n            <Button\r\n              endIcon={\r\n                <DeleteIcon\r\n                  style={{ color: \"#fff\", transform: \"scale(0.7)\" }}\r\n                />\r\n              }\r\n              className=\"uploadView\"\r\n              style={{\r\n                overflow: \"hidden\",\r\n                fontSize: \"0.7rem\",\r\n                height: \"1.5rem\",\r\n                color: \"#fff\",\r\n                backgroundColor: \"#019966\",\r\n                marginTop: \"1rem\",\r\n                marginRight: \"1rem\",\r\n              }}\r\n              onClick={() => setSure(true)}\r\n            >\r\n              Delete Image\r\n            </Button>\r\n          )}\r\n\r\n          {sure && (\r\n            <Button\r\n              className=\"uploadView\"\r\n              style={{\r\n                overflow: \"hidden\",\r\n                fontSize: \"0.7rem\",\r\n                height: \"1.5rem\",\r\n                color: \"#fff\",\r\n                backgroundColor: \"#019966\",\r\n                marginTop: \"1rem\",\r\n              }}\r\n              onClick={() => setSure(false)}\r\n            >\r\n              back\r\n            </Button>\r\n          )}\r\n          {sure && (\r\n            <Button\r\n              className=\"uploadView\"\r\n              style={{\r\n                overflow: \"hidden\",\r\n                fontSize: \"0.7rem\",\r\n                height: \"1.5rem\",\r\n                color: \"#fff\",\r\n                backgroundColor: \"#019966\",\r\n                marginTop: \"1rem\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n              onClick={handleDeleteImage}\r\n            >\r\n              sure ?\r\n            </Button>\r\n          )}\r\n\r\n          {!sure && (\r\n            <a href={link} target=\"_blank\" style={{ textDecoration: \"none\" }}>\r\n              <Button\r\n                endIcon={\r\n                  <OpenInNewIcon\r\n                    style={{ color: \"#fff\", transform: \"scale(0.7)\" }}\r\n                  />\r\n                }\r\n                className=\"uploadView\"\r\n                style={{\r\n                  overflow: \"hidden\",\r\n                  fontSize: \"0.7rem\",\r\n                  height: \"1.5rem\",\r\n                  color: \"#fff\",\r\n                  backgroundColor: \"#019966\",\r\n                  marginTop: \"1rem\",\r\n                }}\r\n              >\r\n                Open in new tab\r\n              </Button>\r\n            </a>\r\n          )}\r\n        </DialogContent>\r\n        <DialogContent style={{ color: \"#019966\" }}>\r\n          Ask in chat\r\n          {error && (\r\n            <p style={{ color: \"rgba(185, 5, 5, 0.7)\", fontSize: \"10px\" }}>\r\n              *Please add some description or title\r\n            </p>\r\n          )}\r\n          <textarea\r\n            defaultValue={imageChatText}\r\n            className=\"helperTextBox\"\r\n            placeholder=\"Add some description...\"\r\n            onChange={(e) => {\r\n              setError(false);\r\n              setImageChatText(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogContent style={{ display: \"flex\" }}>\r\n          <div style={{ flex: 1 }}></div>\r\n          <Button\r\n            className=\"uploadView\"\r\n            style={{\r\n              overflow: \"hidden\",\r\n              fontSize: \"0.7rem\",\r\n              height: \"1.5rem\",\r\n              color: \"#fff\",\r\n              backgroundColor: \"#019966\",\r\n              marginRight: \"0.5rem\",\r\n            }}\r\n            onClick={handleClose}\r\n          >\r\n            close\r\n          </Button>\r\n          <Button\r\n            className=\"uploadView\"\r\n            style={{\r\n              overflow: \"hidden\",\r\n              fontSize: \"0.7rem\",\r\n              height: \"1.5rem\",\r\n              color: \"#fff\",\r\n              backgroundColor: \"#019966\",\r\n              marginRight: \"0.5rem\",\r\n            }}\r\n            onClick={sentToDiscussion}\r\n          >\r\n            Ask\r\n          </Button>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\slogger\\Slogger.js",["317","318","319","320","321","322","323","324","325"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js",["326","327","328"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\context\\AuthContext.js",[],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\navBar\\NavBar.js",["329","330","331"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\profile\\EndoCards.js",["332"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\Schedular\\TeamSchedular.js",["333","334","335","336"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Material.js",["337","338","339","340","341"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\firebase.js",[],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\helpPage\\EmailDialog.js",["342","343","344","345"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\TeamCard.js",["346","347"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\BoardSection.js",["348","349","350","351"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\TeamTodoCard.js",["352","353"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\helpPage\\HelpPage.js",["354"],"import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport styled from \"styled-components\";\r\nimport NavBar from \"../navBar/NavBar\";\r\nimport videoFaq from \"../../assets/videos/faqVideo.mp4\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { Button, useMediaQuery } from \"@material-ui/core\";\r\nimport EmailDialog from \"./EmailDialog\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport SnackBar from \"../snackbar/SnackBar\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    overflow: \"scroll\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nfunction HelpPage() {\r\n  const classes = useStyles();\r\n  const { resetPassword, logOut } = useAuth();\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [openEmail, setOpenEmail] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const history = useHistory();\r\n\r\n  const handleChange = (set, value) => {\r\n    set(value);\r\n    setError(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpenEmail(false);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  const handlePasswordChange = async () => {\r\n    if (email === \"\") {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        await resetPassword(email);\r\n        setEmail(\"\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <HelpPageContainer>\r\n        {!isSmall ? (\r\n          <div\r\n            style={{\r\n              width: \"92%\",\r\n              height: \"56px\",\r\n              color: \"#fff\",\r\n              background: \"rgba(0, 145, 96, 0.9)\",\r\n              paddingLeft: \"15px\",\r\n              paddingRight: \"15px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              zIndex: 100,\r\n              boxShadow:\r\n                \"rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/home\")}\r\n            >\r\n              Home\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <NavBar page={1} home={true} />\r\n        )}\r\n\r\n        <HelpPageLeftBox>\r\n          <video autoPlay loop muted className=\"helpVideo\">\r\n            <source src={videoFaq} type=\"video/mp4\"></source>\r\n          </video>\r\n        </HelpPageLeftBox>\r\n        <HelpPageRightBox>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"80vh\",\r\n              overflowX: \"hidden\",\r\n              overflowY: \"scroll\",\r\n              padding: \"0 2rem\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <Button\r\n              className=\"mail\"\r\n              style={{\r\n                background: \"rgb(0, 180, 120)\",\r\n                color: \"#fff\",\r\n                width: \"30%\",\r\n                marginTop: \"2rem\",\r\n                marginBottom: \"1rem\",\r\n                overflow: \"hidden\",\r\n              }}\r\n              onClick={() => setOpenEmail(true)}\r\n              startIcon={<EmailIcon />}\r\n            >\r\n              Mail us\r\n            </Button>\r\n            <div className={classes.root}>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Change Password\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <Typography>Type your email:</Typography>\r\n                  <InputContainer>\r\n                    <input\r\n                      type=\"email\"\r\n                      required\r\n                      placeholder=\"Email...\"\r\n                      onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                    />\r\n                  </InputContainer>\r\n                  <Button\r\n                    disabled={loader}\r\n                    style={{\r\n                      background: \"rgb(0, 180, 120)\",\r\n                      color: \"#fff\",\r\n                      width: \"30%\",\r\n                    }}\r\n                    onClick={handlePasswordChange}\r\n                  >\r\n                    {loader ? \"Check Mail\" : \"Reset\"}\r\n                  </Button>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Personal Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Write the todo which you want to add then add a time to\r\n                    it.\r\n                    <br />\r\n                    2) You can all mark the todo completed by clicking on the\r\n                    checkbox in starting of every todo.\r\n                    <br />\r\n                    3) You can see completed todos and not completed todos in\r\n                    their respective sections.\r\n                    <br />\r\n                    4) A Donut chart is also visible at bottom left corner, It\r\n                    tell how much work is their and also show the percentage of\r\n                    work completed by you.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Team Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Create or Join a team, while creating make sure the you\r\n                    have unique team name.\r\n                    <br />\r\n                    2) Add todos to your team, the todo will get appear on every\r\n                    teammate page.\r\n                    <br />\r\n                    3) You can also assign you teammate's name to a particular\r\n                    todo.\r\n                    <br />\r\n                    4) You can also add images to any particular todo, by this\r\n                    you can explain the work more easily.\r\n                    <br />\r\n                    5) If the work is done mark it complete, this check will\r\n                    appear on every teammate page.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Discussion Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \" rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Select the team.\r\n                    <br />\r\n                    2) Start typing the message in th input box at bottom right.\r\n                    <br />\r\n                    3) Your messages can be seen by every member of that\r\n                    particular team.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Profile Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \" rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) First setup your profile.\r\n                    <br />\r\n                    2) On the right side you can select a team to get its all\r\n                    members details.\r\n                    <br />\r\n                    3) You can also endorse any group member once for their good\r\n                    work.\r\n                    <br />\r\n                    4) Your endorsements can be seen at the last of your profile\r\n                    in left.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Not able to see team todos\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Check your internet connection.\r\n                    <br />\r\n                    2) Talk to team leader, may be the team was deleted.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Raise an issue\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <Typography>To raise an issue please go to</Typography>\r\n\r\n                  <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                    https://github.com/Tushardeepak\r\n                  </a>\r\n\r\n                  <Typography>\r\n                    Create issue, give details and images.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Legal Rights\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <Typography>All rights of Slogger belong to</Typography>\r\n\r\n                  <a href=\"https://github.com/Tushardeepak\">\r\n                    https://github.com/Tushardeepak\r\n                  </a>\r\n\r\n                  <Typography>Feel free to contact/collaborate.</Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        </HelpPageRightBox>\r\n      </HelpPageContainer>\r\n      {openEmail && (\r\n        <EmailDialog\r\n          open={openEmail}\r\n          handleClose={handleClose}\r\n          setSent={setSent}\r\n        />\r\n      )}\r\n      {sent && (\r\n        <SnackBar\r\n          open={sent}\r\n          handleClose={() => setSent(false)}\r\n          text={\"Mail Sent, Thank You!\"}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HelpPage;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst HelpPageContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  overflow: hidden !important;\r\n`;\r\nconst HelpPageLeftBox = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  .helpVideo {\r\n    margin-top: 2rem;\r\n    object-fit: contain;\r\n    height: 80vh;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      display:none;\r\n  `}\r\n  }\r\n`;\r\nconst HelpPageRightBox = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden !important;\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      width: 100%;\r\n  `}\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    padding: \"1rem 0\";\r\n  }\r\n`;\r\nconst InputContainer = styled.div`\r\n  margin: 0.7rem 0;\r\n\r\n  input {\r\n    width: 90%;\r\n    background: rgb(0, 180, 120);\r\n    color: #fff;\r\n    outline: none;\r\n    border: none;\r\n    height: 2.5rem;\r\n    padding: 0 0.5rem;\r\n    font-size: 0.9rem;\r\n    border-radius: 3px;\r\n  }\r\n  input::placeholder {\r\n    color: #fff;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Dialog.js",["355","356","357","358","359","360"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\BoardTodo.js",["361","362","363","364","365","366","367"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\snackbar\\SnackBar.js",[],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\profile\\Feedback.js",["368","369"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\TodoCard.js",["370","371","372"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\App.js",["373"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\slogger\\ContactUs.js",["374"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\slogger\\Extension.js",["375","376"],{"ruleId":"377","severity":1,"message":"378","line":10,"column":8,"nodeType":"379","messageId":"380","endLine":10,"endColumn":19},{"ruleId":"377","severity":1,"message":"381","line":17,"column":8,"nodeType":"379","messageId":"380","endLine":17,"endColumn":16},{"ruleId":"377","severity":1,"message":"382","line":35,"column":9,"nodeType":"379","messageId":"380","endLine":35,"endColumn":16},{"ruleId":"383","severity":1,"message":"384","line":122,"column":6,"nodeType":"385","endLine":122,"endColumn":8,"suggestions":"386"},{"ruleId":"387","severity":1,"message":"388","line":128,"column":11,"nodeType":"389","endLine":128,"endColumn":62},{"ruleId":"390","severity":1,"message":"391","line":194,"column":21,"nodeType":"392","endLine":194,"endColumn":44},{"ruleId":"390","severity":1,"message":"391","line":288,"column":21,"nodeType":"392","endLine":288,"endColumn":44},{"ruleId":"390","severity":1,"message":"391","line":318,"column":21,"nodeType":"392","endLine":318,"endColumn":44},{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"377","severity":1,"message":"397","line":1,"column":27,"nodeType":"379","messageId":"380","endLine":1,"endColumn":36},{"ruleId":"377","severity":1,"message":"398","line":17,"column":3,"nodeType":"379","messageId":"380","endLine":17,"endColumn":17},{"ruleId":"377","severity":1,"message":"399","line":65,"column":10,"nodeType":"379","messageId":"380","endLine":65,"endColumn":15},{"ruleId":"377","severity":1,"message":"400","line":67,"column":10,"nodeType":"379","messageId":"380","endLine":67,"endColumn":18},{"ruleId":"377","severity":1,"message":"401","line":67,"column":20,"nodeType":"379","messageId":"380","endLine":67,"endColumn":31},{"ruleId":"377","severity":1,"message":"402","line":120,"column":9,"nodeType":"379","messageId":"380","endLine":120,"endColumn":22},{"ruleId":"383","severity":1,"message":"403","line":174,"column":6,"nodeType":"385","endLine":174,"endColumn":8,"suggestions":"404"},{"ruleId":"393","replacedBy":"405"},{"ruleId":"395","replacedBy":"406"},{"ruleId":"377","severity":1,"message":"381","line":11,"column":8,"nodeType":"379","messageId":"380","endLine":11,"endColumn":16},{"ruleId":"377","severity":1,"message":"407","line":12,"column":10,"nodeType":"379","messageId":"380","endLine":12,"endColumn":20},{"ruleId":"377","severity":1,"message":"408","line":25,"column":10,"nodeType":"379","messageId":"380","endLine":25,"endColumn":15},{"ruleId":"409","severity":1,"message":"410","line":55,"column":9,"nodeType":"411","messageId":"412","endLine":57,"endColumn":10,"fix":"413"},{"ruleId":"383","severity":1,"message":"414","line":199,"column":6,"nodeType":"385","endLine":199,"endColumn":23,"suggestions":"415"},{"ruleId":"393","replacedBy":"416"},{"ruleId":"395","replacedBy":"417"},{"ruleId":"377","severity":1,"message":"418","line":14,"column":8,"nodeType":"379","messageId":"380","endLine":14,"endColumn":15},{"ruleId":"377","severity":1,"message":"419","line":33,"column":10,"nodeType":"379","messageId":"380","endLine":33,"endColumn":31},{"ruleId":"383","severity":1,"message":"420","line":52,"column":6,"nodeType":"385","endLine":52,"endColumn":8,"suggestions":"421"},{"ruleId":"387","severity":1,"message":"388","line":167,"column":17,"nodeType":"389","endLine":175,"endColumn":19},{"ruleId":"377","severity":1,"message":"422","line":49,"column":10,"nodeType":"379","messageId":"380","endLine":49,"endColumn":21},{"ruleId":"377","severity":1,"message":"423","line":51,"column":10,"nodeType":"379","messageId":"380","endLine":51,"endColumn":22},{"ruleId":"377","severity":1,"message":"424","line":63,"column":10,"nodeType":"379","messageId":"380","endLine":63,"endColumn":15},{"ruleId":"377","severity":1,"message":"425","line":63,"column":17,"nodeType":"379","messageId":"380","endLine":63,"endColumn":25},{"ruleId":"377","severity":1,"message":"426","line":64,"column":10,"nodeType":"379","messageId":"380","endLine":64,"endColumn":25},{"ruleId":"377","severity":1,"message":"427","line":65,"column":10,"nodeType":"379","messageId":"380","endLine":65,"endColumn":14},{"ruleId":"377","severity":1,"message":"428","line":65,"column":16,"nodeType":"379","messageId":"380","endLine":65,"endColumn":32},{"ruleId":"377","severity":1,"message":"402","line":68,"column":9,"nodeType":"379","messageId":"380","endLine":68,"endColumn":22},{"ruleId":"377","severity":1,"message":"429","line":152,"column":13,"nodeType":"379","messageId":"380","endLine":152,"endColumn":23},{"ruleId":"377","severity":1,"message":"430","line":177,"column":9,"nodeType":"379","messageId":"380","endLine":177,"endColumn":22},{"ruleId":"383","severity":1,"message":"431","line":224,"column":6,"nodeType":"385","endLine":224,"endColumn":8,"suggestions":"432"},{"ruleId":"383","severity":1,"message":"431","line":241,"column":6,"nodeType":"385","endLine":241,"endColumn":8,"suggestions":"433"},{"ruleId":"377","severity":1,"message":"397","line":1,"column":27,"nodeType":"379","messageId":"380","endLine":1,"endColumn":36},{"ruleId":"377","severity":1,"message":"434","line":15,"column":10,"nodeType":"379","messageId":"380","endLine":15,"endColumn":23},{"ruleId":"377","severity":1,"message":"402","line":79,"column":9,"nodeType":"379","messageId":"380","endLine":79,"endColumn":22},{"ruleId":"383","severity":1,"message":"403","line":166,"column":6,"nodeType":"385","endLine":166,"endColumn":19,"suggestions":"435"},{"ruleId":"377","severity":1,"message":"436","line":6,"column":14,"nodeType":"379","messageId":"380","endLine":6,"endColumn":21},{"ruleId":"377","severity":1,"message":"398","line":13,"column":3,"nodeType":"379","messageId":"380","endLine":13,"endColumn":17},{"ruleId":"377","severity":1,"message":"408","line":22,"column":8,"nodeType":"379","messageId":"380","endLine":22,"endColumn":13},{"ruleId":"377","severity":1,"message":"437","line":64,"column":10,"nodeType":"379","messageId":"380","endLine":64,"endColumn":19},{"ruleId":"377","severity":1,"message":"399","line":149,"column":10,"nodeType":"379","messageId":"380","endLine":149,"endColumn":15},{"ruleId":"377","severity":1,"message":"438","line":160,"column":10,"nodeType":"379","messageId":"380","endLine":160,"endColumn":15},{"ruleId":"377","severity":1,"message":"439","line":160,"column":17,"nodeType":"379","messageId":"380","endLine":160,"endColumn":25},{"ruleId":"383","severity":1,"message":"403","line":318,"column":6,"nodeType":"385","endLine":318,"endColumn":19,"suggestions":"440"},{"ruleId":"441","severity":1,"message":"442","line":328,"column":34,"nodeType":"443","messageId":"444","endLine":328,"endColumn":36},{"ruleId":"383","severity":1,"message":"403","line":338,"column":6,"nodeType":"385","endLine":338,"endColumn":19,"suggestions":"445"},{"ruleId":"441","severity":1,"message":"442","line":350,"column":28,"nodeType":"443","messageId":"444","endLine":350,"endColumn":30},{"ruleId":"383","severity":1,"message":"446","line":359,"column":6,"nodeType":"385","endLine":359,"endColumn":8,"suggestions":"447"},{"ruleId":"383","severity":1,"message":"414","line":371,"column":6,"nodeType":"385","endLine":371,"endColumn":23,"suggestions":"448"},{"ruleId":"449","severity":1,"message":"450","line":506,"column":19,"nodeType":"392","endLine":506,"endColumn":34},{"ruleId":"449","severity":1,"message":"450","line":584,"column":23,"nodeType":"392","endLine":584,"endColumn":38},{"ruleId":"387","severity":1,"message":"388","line":745,"column":17,"nodeType":"389","endLine":748,"endColumn":19},{"ruleId":"387","severity":1,"message":"388","line":776,"column":19,"nodeType":"389","endLine":783,"endColumn":21},{"ruleId":"387","severity":1,"message":"388","line":824,"column":19,"nodeType":"389","endLine":831,"endColumn":21},{"ruleId":"387","severity":1,"message":"388","line":865,"column":19,"nodeType":"389","endLine":872,"endColumn":21},{"ruleId":"441","severity":1,"message":"451","line":910,"column":34,"nodeType":"443","messageId":"452","endLine":910,"endColumn":36},{"ruleId":"441","severity":1,"message":"451","line":930,"column":34,"nodeType":"443","messageId":"452","endLine":930,"endColumn":36},{"ruleId":"393","replacedBy":"453"},{"ruleId":"395","replacedBy":"454"},{"ruleId":"377","severity":1,"message":"455","line":4,"column":17,"nodeType":"379","messageId":"380","endLine":4,"endColumn":23},{"ruleId":"377","severity":1,"message":"437","line":41,"column":10,"nodeType":"379","messageId":"380","endLine":41,"endColumn":19},{"ruleId":"377","severity":1,"message":"456","line":88,"column":7,"nodeType":"379","messageId":"380","endLine":88,"endColumn":27},{"ruleId":"383","severity":1,"message":"403","line":159,"column":6,"nodeType":"385","endLine":159,"endColumn":19,"suggestions":"457"},{"ruleId":"441","severity":1,"message":"442","line":190,"column":34,"nodeType":"443","messageId":"444","endLine":190,"endColumn":36},{"ruleId":"383","severity":1,"message":"458","line":210,"column":6,"nodeType":"385","endLine":210,"endColumn":19,"suggestions":"459"},{"ruleId":"387","severity":1,"message":"388","line":265,"column":15,"nodeType":"389","endLine":268,"endColumn":17},{"ruleId":"377","severity":1,"message":"460","line":569,"column":7,"nodeType":"379","messageId":"380","endLine":569,"endColumn":17},{"ruleId":"377","severity":1,"message":"461","line":576,"column":7,"nodeType":"379","messageId":"380","endLine":576,"endColumn":16},{"ruleId":"409","severity":1,"message":"410","line":48,"column":9,"nodeType":"411","messageId":"412","endLine":50,"endColumn":10,"fix":"462"},{"ruleId":"463","severity":1,"message":"464","line":103,"column":48,"nodeType":"465","messageId":"466","endLine":103,"endColumn":49},{"ruleId":"383","severity":1,"message":"467","line":150,"column":6,"nodeType":"385","endLine":150,"endColumn":12,"suggestions":"468"},{"ruleId":"383","severity":1,"message":"431","line":108,"column":6,"nodeType":"385","endLine":108,"endColumn":19,"suggestions":"469"},{"ruleId":"387","severity":1,"message":"388","line":125,"column":7,"nodeType":"389","endLine":125,"endColumn":75},{"ruleId":"377","severity":1,"message":"470","line":14,"column":3,"nodeType":"379","messageId":"380","endLine":14,"endColumn":13},{"ruleId":"377","severity":1,"message":"399","line":133,"column":10,"nodeType":"379","messageId":"380","endLine":133,"endColumn":15},{"ruleId":"383","severity":1,"message":"403","line":285,"column":6,"nodeType":"385","endLine":285,"endColumn":8,"suggestions":"471"},{"ruleId":"383","severity":1,"message":"472","line":301,"column":6,"nodeType":"385","endLine":301,"endColumn":23,"suggestions":"473"},{"ruleId":"377","severity":1,"message":"474","line":303,"column":9,"nodeType":"379","messageId":"380","endLine":303,"endColumn":22},{"ruleId":"441","severity":1,"message":"451","line":611,"column":30,"nodeType":"443","messageId":"452","endLine":611,"endColumn":32},{"ruleId":"441","severity":1,"message":"451","line":634,"column":30,"nodeType":"443","messageId":"452","endLine":634,"endColumn":32},{"ruleId":"387","severity":1,"message":"388","line":673,"column":15,"nodeType":"389","endLine":673,"endColumn":55},{"ruleId":"441","severity":1,"message":"451","line":702,"column":29,"nodeType":"443","messageId":"452","endLine":702,"endColumn":31},{"ruleId":"441","severity":1,"message":"451","line":707,"column":28,"nodeType":"443","messageId":"452","endLine":707,"endColumn":30},{"ruleId":"441","severity":1,"message":"451","line":729,"column":28,"nodeType":"443","messageId":"452","endLine":729,"endColumn":30},{"ruleId":"441","severity":1,"message":"451","line":773,"column":29,"nodeType":"443","messageId":"452","endLine":773,"endColumn":31},{"ruleId":"441","severity":1,"message":"451","line":778,"column":28,"nodeType":"443","messageId":"452","endLine":778,"endColumn":30},{"ruleId":"441","severity":1,"message":"451","line":800,"column":28,"nodeType":"443","messageId":"452","endLine":800,"endColumn":30},{"ruleId":"377","severity":1,"message":"475","line":10,"column":8,"nodeType":"379","messageId":"380","endLine":10,"endColumn":17},{"ruleId":"377","severity":1,"message":"476","line":13,"column":8,"nodeType":"379","messageId":"380","endLine":13,"endColumn":14},{"ruleId":"383","severity":1,"message":"477","line":100,"column":6,"nodeType":"385","endLine":100,"endColumn":8,"suggestions":"478"},{"ruleId":"383","severity":1,"message":"477","line":107,"column":6,"nodeType":"385","endLine":107,"endColumn":8,"suggestions":"479"},{"ruleId":"377","severity":1,"message":"397","line":1,"column":17,"nodeType":"379","messageId":"380","endLine":1,"endColumn":26},{"ruleId":"377","severity":1,"message":"381","line":11,"column":8,"nodeType":"379","messageId":"380","endLine":11,"endColumn":16},{"ruleId":"409","severity":1,"message":"410","line":51,"column":9,"nodeType":"411","messageId":"412","endLine":53,"endColumn":10,"fix":"480"},{"ruleId":"377","severity":1,"message":"481","line":85,"column":11,"nodeType":"379","messageId":"380","endLine":85,"endColumn":22},{"ruleId":"463","severity":1,"message":"464","line":119,"column":50,"nodeType":"465","messageId":"466","endLine":119,"endColumn":51},{"ruleId":"409","severity":1,"message":"410","line":49,"column":9,"nodeType":"411","messageId":"412","endLine":51,"endColumn":10,"fix":"482"},{"ruleId":"463","severity":1,"message":"464","line":106,"column":48,"nodeType":"465","messageId":"466","endLine":106,"endColumn":49},{"ruleId":"383","severity":1,"message":"467","line":145,"column":6,"nodeType":"385","endLine":145,"endColumn":12,"suggestions":"483"},{"ruleId":"377","severity":1,"message":"484","line":1,"column":17,"nodeType":"379","messageId":"380","endLine":1,"endColumn":25},{"ruleId":"377","severity":1,"message":"381","line":11,"column":8,"nodeType":"379","messageId":"380","endLine":11,"endColumn":16},{"ruleId":"441","severity":1,"message":"442","line":53,"column":34,"nodeType":"443","messageId":"444","endLine":53,"endColumn":36},{"ruleId":"383","severity":1,"message":"485","line":66,"column":6,"nodeType":"385","endLine":66,"endColumn":8,"suggestions":"486"},{"ruleId":"377","severity":1,"message":"487","line":143,"column":10,"nodeType":"379","messageId":"380","endLine":143,"endColumn":28},{"ruleId":"377","severity":1,"message":"488","line":167,"column":9,"nodeType":"379","messageId":"380","endLine":167,"endColumn":23},{"ruleId":"441","severity":1,"message":"489","line":173,"column":20,"nodeType":"443","messageId":"444","endLine":173,"endColumn":22},{"ruleId":"390","severity":1,"message":"391","line":280,"column":11,"nodeType":"392","endLine":282,"endColumn":12},{"ruleId":"441","severity":1,"message":"442","line":129,"column":28,"nodeType":"443","messageId":"444","endLine":129,"endColumn":30},{"ruleId":"383","severity":1,"message":"403","line":151,"column":6,"nodeType":"385","endLine":151,"endColumn":8,"suggestions":"490"},{"ruleId":"377","severity":1,"message":"491","line":152,"column":7,"nodeType":"379","messageId":"380","endLine":152,"endColumn":8},{"ruleId":"393","replacedBy":"492"},{"ruleId":"395","replacedBy":"493"},{"ruleId":"383","severity":1,"message":"420","line":28,"column":6,"nodeType":"385","endLine":28,"endColumn":8,"suggestions":"494"},{"ruleId":"387","severity":1,"message":"388","line":51,"column":11,"nodeType":"389","endLine":51,"endColumn":76},{"ruleId":"495","severity":1,"message":"496","line":37,"column":7,"nodeType":"379","messageId":"497","endLine":37,"endColumn":11},{"ruleId":"383","severity":1,"message":"498","line":66,"column":6,"nodeType":"385","endLine":66,"endColumn":8,"suggestions":"499"},{"ruleId":"449","severity":1,"message":"450","line":185,"column":17,"nodeType":"392","endLine":185,"endColumn":32},{"ruleId":"387","severity":1,"message":"388","line":188,"column":17,"nodeType":"389","endLine":199,"endColumn":19},{"ruleId":"387","severity":1,"message":"388","line":209,"column":13,"nodeType":"389","endLine":217,"endColumn":15},{"ruleId":"377","severity":1,"message":"500","line":274,"column":7,"nodeType":"379","messageId":"380","endLine":274,"endColumn":18},{"ruleId":"377","severity":1,"message":"501","line":4,"column":8,"nodeType":"379","messageId":"380","endLine":4,"endColumn":21},{"ruleId":"377","severity":1,"message":"502","line":6,"column":8,"nodeType":"379","messageId":"380","endLine":6,"endColumn":25},{"ruleId":"377","severity":1,"message":"503","line":7,"column":8,"nodeType":"379","messageId":"380","endLine":7,"endColumn":19},{"ruleId":"449","severity":1,"message":"450","line":156,"column":28,"nodeType":"392","endLine":156,"endColumn":43},{"ruleId":"377","severity":1,"message":"504","line":23,"column":43,"nodeType":"379","messageId":"380","endLine":23,"endColumn":47},{"ruleId":"377","severity":1,"message":"382","line":30,"column":9,"nodeType":"379","messageId":"380","endLine":30,"endColumn":16},{"ruleId":"377","severity":1,"message":"505","line":31,"column":10,"nodeType":"379","messageId":"380","endLine":31,"endColumn":16},{"ruleId":"377","severity":1,"message":"506","line":31,"column":18,"nodeType":"379","messageId":"380","endLine":31,"endColumn":27},{"ruleId":"383","severity":1,"message":"384","line":45,"column":6,"nodeType":"385","endLine":45,"endColumn":8,"suggestions":"507"},{"ruleId":"387","severity":1,"message":"388","line":84,"column":9,"nodeType":"389","endLine":84,"endColumn":48},{"ruleId":"387","severity":1,"message":"388","line":347,"column":9,"nodeType":"389","endLine":347,"endColumn":73},{"ruleId":"387","severity":1,"message":"388","line":350,"column":9,"nodeType":"389","endLine":350,"endColumn":66},{"ruleId":"387","severity":1,"message":"388","line":408,"column":9,"nodeType":"389","endLine":408,"endColumn":61},{"ruleId":"383","severity":1,"message":"508","line":41,"column":6,"nodeType":"385","endLine":41,"endColumn":18,"suggestions":"509"},{"ruleId":"441","severity":1,"message":"451","line":44,"column":39,"nodeType":"443","messageId":"452","endLine":44,"endColumn":41},{"ruleId":"383","severity":1,"message":"403","line":67,"column":6,"nodeType":"385","endLine":67,"endColumn":8,"suggestions":"510"},{"ruleId":"377","severity":1,"message":"511","line":3,"column":3,"nodeType":"379","messageId":"380","endLine":3,"endColumn":13},{"ruleId":"377","severity":1,"message":"512","line":16,"column":7,"nodeType":"379","messageId":"380","endLine":16,"endColumn":16},{"ruleId":"513","severity":1,"message":"514","line":66,"column":18,"nodeType":"465","messageId":"515","endLine":66,"endColumn":20},{"ruleId":"383","severity":1,"message":"516","line":37,"column":6,"nodeType":"385","endLine":37,"endColumn":8,"suggestions":"517"},{"ruleId":"377","severity":1,"message":"518","line":14,"column":9,"nodeType":"379","messageId":"380","endLine":14,"endColumn":12},{"ruleId":"383","severity":1,"message":"519","line":18,"column":6,"nodeType":"385","endLine":18,"endColumn":8,"suggestions":"520"},{"ruleId":"441","severity":1,"message":"521","line":21,"column":39,"nodeType":"443","messageId":"452","endLine":21,"endColumn":41},{"ruleId":"383","severity":1,"message":"522","line":58,"column":6,"nodeType":"385","endLine":58,"endColumn":8,"suggestions":"523"},{"ruleId":"377","severity":1,"message":"524","line":15,"column":8,"nodeType":"379","messageId":"380","endLine":15,"endColumn":16},{"ruleId":"377","severity":1,"message":"525","line":16,"column":8,"nodeType":"379","messageId":"380","endLine":16,"endColumn":24},{"ruleId":"377","severity":1,"message":"526","line":61,"column":25,"nodeType":"379","messageId":"380","endLine":61,"endColumn":41},{"ruleId":"377","severity":1,"message":"429","line":85,"column":13,"nodeType":"379","messageId":"380","endLine":85,"endColumn":23},{"ruleId":"383","severity":1,"message":"527","line":186,"column":6,"nodeType":"385","endLine":186,"endColumn":8,"suggestions":"528"},{"ruleId":"377","severity":1,"message":"529","line":2,"column":8,"nodeType":"379","messageId":"380","endLine":2,"endColumn":14},{"ruleId":"377","severity":1,"message":"501","line":4,"column":8,"nodeType":"379","messageId":"380","endLine":4,"endColumn":21},{"ruleId":"377","severity":1,"message":"530","line":23,"column":10,"nodeType":"379","messageId":"380","endLine":23,"endColumn":21},{"ruleId":"377","severity":1,"message":"531","line":23,"column":23,"nodeType":"379","messageId":"380","endLine":23,"endColumn":37},{"ruleId":"377","severity":1,"message":"532","line":4,"column":8,"nodeType":"379","messageId":"380","endLine":4,"endColumn":14},{"ruleId":"377","severity":1,"message":"382","line":27,"column":9,"nodeType":"379","messageId":"380","endLine":27,"endColumn":16},{"ruleId":"377","severity":1,"message":"474","line":96,"column":9,"nodeType":"379","messageId":"380","endLine":96,"endColumn":22},{"ruleId":"441","severity":1,"message":"451","line":116,"column":30,"nodeType":"443","messageId":"452","endLine":116,"endColumn":32},{"ruleId":"441","severity":1,"message":"451","line":171,"column":30,"nodeType":"443","messageId":"452","endLine":171,"endColumn":32},{"ruleId":"441","severity":1,"message":"451","line":226,"column":30,"nodeType":"443","messageId":"452","endLine":226,"endColumn":32},{"ruleId":"377","severity":1,"message":"533","line":8,"column":8,"nodeType":"379","messageId":"380","endLine":8,"endColumn":21},{"ruleId":"377","severity":1,"message":"511","line":13,"column":3,"nodeType":"379","messageId":"380","endLine":13,"endColumn":13},{"ruleId":"377","severity":1,"message":"399","line":37,"column":10,"nodeType":"379","messageId":"380","endLine":37,"endColumn":15},{"ruleId":"377","severity":1,"message":"534","line":29,"column":10,"nodeType":"379","messageId":"380","endLine":29,"endColumn":18},{"ruleId":"377","severity":1,"message":"535","line":29,"column":20,"nodeType":"379","messageId":"380","endLine":29,"endColumn":31},{"ruleId":"377","severity":1,"message":"536","line":32,"column":10,"nodeType":"379","messageId":"380","endLine":32,"endColumn":17},{"ruleId":"377","severity":1,"message":"537","line":32,"column":19,"nodeType":"379","messageId":"380","endLine":32,"endColumn":29},{"ruleId":"441","severity":1,"message":"442","line":49,"column":28,"nodeType":"443","messageId":"444","endLine":49,"endColumn":30},{"ruleId":"441","severity":1,"message":"442","line":69,"column":28,"nodeType":"443","messageId":"444","endLine":69,"endColumn":30},{"ruleId":"377","severity":1,"message":"533","line":8,"column":8,"nodeType":"379","messageId":"380","endLine":8,"endColumn":21},{"ruleId":"377","severity":1,"message":"511","line":13,"column":3,"nodeType":"379","messageId":"380","endLine":13,"endColumn":13},{"ruleId":"377","severity":1,"message":"538","line":59,"column":10,"nodeType":"379","messageId":"380","endLine":59,"endColumn":20},{"ruleId":"377","severity":1,"message":"539","line":59,"column":22,"nodeType":"379","messageId":"380","endLine":59,"endColumn":35},{"ruleId":"377","severity":1,"message":"540","line":61,"column":10,"nodeType":"379","messageId":"380","endLine":61,"endColumn":22},{"ruleId":"377","severity":1,"message":"541","line":61,"column":24,"nodeType":"379","messageId":"380","endLine":61,"endColumn":39},{"ruleId":"377","severity":1,"message":"382","line":66,"column":9,"nodeType":"379","messageId":"380","endLine":66,"endColumn":16},{"ruleId":"383","severity":1,"message":"420","line":32,"column":6,"nodeType":"385","endLine":32,"endColumn":8,"suggestions":"542"},{"ruleId":"387","severity":1,"message":"388","line":55,"column":11,"nodeType":"389","endLine":55,"endColumn":76},{"ruleId":"377","severity":1,"message":"397","line":1,"column":17,"nodeType":"379","messageId":"380","endLine":1,"endColumn":26},{"ruleId":"377","severity":1,"message":"476","line":8,"column":8,"nodeType":"379","messageId":"380","endLine":8,"endColumn":14},{"ruleId":"377","severity":1,"message":"543","line":13,"column":10,"nodeType":"379","messageId":"380","endLine":13,"endColumn":14},{"ruleId":"387","severity":1,"message":"388","line":27,"column":13,"nodeType":"389","endLine":27,"endColumn":75},{"ruleId":"387","severity":1,"message":"388","line":76,"column":7,"nodeType":"389","endLine":76,"endColumn":57},{"ruleId":"449","severity":1,"message":"450","line":44,"column":13,"nodeType":"392","endLine":44,"endColumn":28},{"ruleId":"387","severity":1,"message":"388","line":53,"column":7,"nodeType":"389","endLine":53,"endColumn":57},"no-unused-vars","'signUpImage' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'isSmall' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'currentUser' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["544"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["545"],"no-negated-in-lhs",["546"],"'useEffect' is defined but never used.","'DateTimePicker' is defined but never used.","'error' is assigned a value but never used.","'todoList' is assigned a value but never used.","'setTodoList' is assigned a value but never used.","'handleSignOut' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["547"],["545"],["546"],"'useHistory' is defined but never used.","'green' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\":hover\"] found.","Property","unnecessarilyComputedProperty",{"range":"548","text":"549"},"React Hook React.useEffect has a missing dependency: 'selectedStartDate'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'handleEndDateChange' needs the current value of 'selectedStartDate'.",["550"],["545"],["546"],"'emailjs' is defined but never used.","'allSelectedMemberList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllMembers'. Either include it or remove the dependency array.",["551"],"'profilePath' is assigned a value but never used.","'profileError' is assigned a value but never used.","'teams' is assigned a value but never used.","'setTeams' is assigned a value but never used.","'allMemberIdList' is assigned a value but never used.","'team' is assigned a value but never used.","'handleChangeTeam' is assigned a value but never used.","'uploadTask' is assigned a value but never used.","'getAllMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["552"],["553"],"'generateMedia' is defined but never used.",["554"],"'storage' is defined but never used.","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.",["555"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["556"],"React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'setDiscussionLock'. Either include them or remove the dependency array. If 'setDiscussionLock' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["557"],["558"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd",["545"],["546"],"'useRef' is defined but never used.","'defaultMaterialTheme' is assigned a value but never used.",["559"],"React Hook React.useEffect has a missing dependency: 'deleteTeam'. Either include it or remove the dependency array.",["560"],"'ChatScreen' is assigned a value but never used.","'ChatInput' is assigned a value but never used.",{"range":"561","text":"549"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'urlTeamName'. Either include it or remove the dependency array.",["562"],["563"],"'withStyles' is defined but never used.",["564"],"React Hook useEffect has a missing dependency: 'selectedStartDate'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'handleEndDateChange' needs the current value of 'selectedStartDate'.",["565"],"'emptyFunction' is assigned a value but never used.","'ClearIcon' is defined but never used.","'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'getNotificationList'. Either include it or remove the dependency array.",["566"],["567"],{"range":"568","text":"549"},"'currentUser' is assigned a value but never used.",{"range":"569","text":"549"},["570"],"'useState' is defined but never used.","React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'teamName'. Either include them or remove the dependency array.",["571"],"'databaseSideDelete' is assigned a value but never used.","'databaseDelete' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.",["572"],"'c' is assigned a value but never used.",["545"],["546"],["573"],"no-redeclare","'date' is already defined.","redeclared","React Hook React.useEffect has a missing dependency: 'checkImage'. Either include it or remove the dependency array.",["574"],"'TodoActions' is assigned a value but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Zoom' is defined but never used.","'openEx' is assigned a value but never used.","'setOpenEx' is assigned a value but never used.",["575"],"React Hook useEffect has missing dependencies: 'array' and 'colors'. Either include them or remove the dependency array.",["576"],["577"],"'IconButton' is defined but never used.","'useStyles' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'giverId'. Either include it or remove the dependency array.",["578"],"'day' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.todoList'. Either include it or remove the dependency array.",["579"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'getAllEvents' and 'getChild'. Either include them or remove the dependency array.",["580"],"'DoneIcon' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'setAdminTodoText' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllImages'. Either include it or remove the dependency array.",["581"],"'Button' is defined but never used.","'senderEmail' is assigned a value but never used.","'setSenderEmail' is assigned a value but never used.","'styled' is defined but never used.","'CustomTooltip' is defined but never used.","'teamList' is assigned a value but never used.","'setTeamList' is assigned a value but never used.","'already' is assigned a value but never used.","'setAlready' is assigned a value but never used.","'localCheck' is assigned a value but never used.","'setLocalCheck' is assigned a value but never used.","'assignChange' is assigned a value but never used.","'setAssignChange' is assigned a value but never used.",["582"],"'Fade' is defined but never used.",{"desc":"583","fix":"584"},"no-global-assign","no-unsafe-negation",{"desc":"585","fix":"586"},[1612,1622],"\":hover\"",{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"585","fix":"591"},{"desc":"585","fix":"592"},{"desc":"593","fix":"594"},{"desc":"593","fix":"595"},{"desc":"593","fix":"596"},{"desc":"597","fix":"598"},{"desc":"587","fix":"599"},{"desc":"593","fix":"600"},{"desc":"601","fix":"602"},[1449,1459],{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"585","fix":"607"},{"desc":"587","fix":"608"},{"desc":"609","fix":"610"},{"desc":"609","fix":"611"},[1472,1482],[1318,1328],{"desc":"603","fix":"612"},{"desc":"613","fix":"614"},{"desc":"585","fix":"615"},{"desc":"589","fix":"616"},{"desc":"617","fix":"618"},{"desc":"583","fix":"619"},{"desc":"620","fix":"621"},{"desc":"585","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"589","fix":"631"},"Update the dependencies array to be: [currentUser, history]",{"range":"632","text":"633"},"Update the dependencies array to be: [currentUser.uid]",{"range":"634","text":"635"},"Update the dependencies array to be: [selectedEndDate, selectedStartDate]",{"range":"636","text":"637"},"Update the dependencies array to be: [getAllMembers]",{"range":"638","text":"639"},{"range":"640","text":"635"},{"range":"641","text":"635"},"Update the dependencies array to be: [UrlTeamName, currentUser.uid]",{"range":"642","text":"643"},{"range":"644","text":"643"},{"range":"645","text":"643"},"Update the dependencies array to be: [currentUser.uid, setDiscussionLock]",{"range":"646","text":"647"},{"range":"648","text":"637"},{"range":"649","text":"643"},"Update the dependencies array to be: [UrlTeamName, deleteTeam]",{"range":"650","text":"651"},"Update the dependencies array to be: [sort, urlTeamName]",{"range":"652","text":"653"},"Update the dependencies array to be: [currentUser.uid, urlTeamName]",{"range":"654","text":"655"},{"range":"656","text":"635"},{"range":"657","text":"637"},"Update the dependencies array to be: [getNotificationList]",{"range":"658","text":"659"},{"range":"660","text":"659"},{"range":"661","text":"653"},"Update the dependencies array to be: [currentUser.uid, teamName]",{"range":"662","text":"663"},{"range":"664","text":"635"},{"range":"665","text":"639"},"Update the dependencies array to be: [checkImage]",{"range":"666","text":"667"},{"range":"668","text":"633"},"Update the dependencies array to be: [array, colors, todoLength]",{"range":"669","text":"670"},{"range":"671","text":"635"},"Update the dependencies array to be: [giverId]",{"range":"672","text":"673"},"Update the dependencies array to be: [props.todoList]",{"range":"674","text":"675"},"Update the dependencies array to be: [getAllEvents, getChild]",{"range":"676","text":"677"},"Update the dependencies array to be: [getAllImages]",{"range":"678","text":"679"},{"range":"680","text":"639"},[4004,4006],"[currentUser, history]",[5060,5062],"[currentUser.uid]",[5383,5400],"[selectedEndDate, selectedStartDate]",[1782,1784],"[getAllMembers]",[7590,7592],[8118,8120],[5353,5366],"[UrlTeamName, currentUser.uid]",[9581,9594],[10174,10187],[10720,10722],"[currentUser.uid, setDiscussionLock]",[11054,11071],[4476,4489],[6027,6040],"[UrlTeamName, deleteTeam]",[4350,4356],"[sort, urlTeamName]",[2705,2718],"[currentUser.uid, urlTeamName]",[7868,7870],[8301,8318],[3336,3338],"[getNotificationList]",[3495,3497],[4166,4172],[1953,1955],"[currentUser.uid, teamName]",[3907,3909],[945,947],[1594,1596],"[checkImage]",[1917,1919],[1109,1121],"[array, colors, todoLength]",[1762,1764],[1096,1098],"[giverId]",[692,694],"[props.todoList]",[1794,1796],"[getAllEvents, getChild]",[5705,5707],"[getAllImages]",[1079,1081]]