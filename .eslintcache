[{"C:\\Users\\KIIT\\Desktop\\slogger\\src\\PrivateRoute.js":"1","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js":"2","C:\\Users\\KIIT\\Desktop\\slogger\\src\\utils\\theme.js":"3","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarPersonal.js":"4","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Chat.js":"5","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Discussion.js":"6","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Material.js":"7","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\home\\Home.js":"8","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js":"9","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodoCard.js":"10","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\Schedular\\CalendarModal.js":"11","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js":"12","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TodoCard.js":"13","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\Schedular\\Schedular.js":"14","C:\\Users\\KIIT\\Desktop\\slogger\\src\\index.js":"15","C:\\Users\\KIIT\\Desktop\\slogger\\src\\context\\AuthContext.js":"16","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Delete.js":"17","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarProfile.js":"18","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Dialog.js":"19","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\HelpPage.js":"20","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\EmailDialog.js":"21","C:\\Users\\KIIT\\Desktop\\slogger\\src\\firebase.js":"22","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\CustomTooltip.js":"23","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\ImagesModal.js":"24","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\snackbar\\SnackBar.js":"25","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\DownloadImageModal.js":"26","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\slogger\\Slogger.js":"27","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarTeams.js":"28","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\profile\\MemberCard.js":"29","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\auth\\SignUp.js":"30","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\navBar\\NavBar.js":"31","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\SlogPage.js":"32","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamCard.js":"33"},{"size":444,"mtime":1616858364594,"results":"34","hashOfConfig":"35"},{"size":3314,"mtime":1616930347187,"results":"36","hashOfConfig":"35"},{"size":967,"mtime":1618396117721,"results":"37","hashOfConfig":"35"},{"size":12090,"mtime":1618163472941,"results":"38","hashOfConfig":"35"},{"size":8925,"mtime":1618405538391,"results":"39","hashOfConfig":"35"},{"size":15542,"mtime":1618393488282,"results":"40","hashOfConfig":"35"},{"size":16679,"mtime":1618406288921,"results":"41","hashOfConfig":"35"},{"size":9754,"mtime":1618424635723,"results":"42","hashOfConfig":"35"},{"size":28332,"mtime":1618044440093,"results":"43","hashOfConfig":"35"},{"size":12374,"mtime":1618393213860,"results":"44","hashOfConfig":"35"},{"size":8801,"mtime":1618413415227,"results":"45","hashOfConfig":"35"},{"size":28599,"mtime":1618424424528,"results":"46","hashOfConfig":"35"},{"size":8998,"mtime":1618424559873,"results":"47","hashOfConfig":"35"},{"size":4186,"mtime":1618141589831,"results":"48","hashOfConfig":"35"},{"size":465,"mtime":1617447323256,"results":"49","hashOfConfig":"35"},{"size":1128,"mtime":1618228764093,"results":"50","hashOfConfig":"35"},{"size":8775,"mtime":1617536236919,"results":"51","hashOfConfig":"35"},{"size":17564,"mtime":1616858364983,"results":"52","hashOfConfig":"35"},{"size":5761,"mtime":1617879841949,"results":"53","hashOfConfig":"35"},{"size":16981,"mtime":1617994804530,"results":"54","hashOfConfig":"35"},{"size":2812,"mtime":1617995215896,"results":"55","hashOfConfig":"35"},{"size":530,"mtime":1616858507404,"results":"56","hashOfConfig":"35"},{"size":414,"mtime":1616858364855,"results":"57","hashOfConfig":"35"},{"size":3898,"mtime":1618128822932,"results":"58","hashOfConfig":"35"},{"size":1135,"mtime":1618078545850,"results":"59","hashOfConfig":"35"},{"size":6469,"mtime":1618128878492,"results":"60","hashOfConfig":"35"},{"size":13501,"mtime":1617895031545,"results":"61","hashOfConfig":"35"},{"size":8748,"mtime":1617348435463,"results":"62","hashOfConfig":"35"},{"size":8028,"mtime":1617125378020,"results":"63","hashOfConfig":"35"},{"size":17059,"mtime":1618228761420,"results":"64","hashOfConfig":"35"},{"size":7841,"mtime":1617475152711,"results":"65","hashOfConfig":"35"},{"size":24438,"mtime":1616858364976,"results":"66","hashOfConfig":"35"},{"size":4271,"mtime":1617119984792,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1etrus8",{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"73"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"73"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"147"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"73"},"C:\\Users\\KIIT\\Desktop\\slogger\\src\\PrivateRoute.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js",["156","157","158"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport { generateMedia } from \"styled-media-query\";\r\n\r\nfunction DonutChart({ todoLength }) {\r\n  const [data, setData] = useState({});\r\n  const [checkCount, setCheckCount] = useState(0);\r\n  const { currentUser } = useAuth();\r\n  var array = [];\r\n  var colors = [];\r\n\r\n  function getRandomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (todoLength !== 0) {\r\n      for (var i = 0; i < todoLength; i++) {\r\n        array.push(10);\r\n        const color = getRandomColor();\r\n        colors.push(color);\r\n      }\r\n    }\r\n    setData({\r\n      datasets: [\r\n        {\r\n          data: array,\r\n          backgroundColor: colors,\r\n        },\r\n      ],\r\n    });\r\n  }, [todoLength]);\r\n\r\n  const handleCheckLength = (list) => {\r\n    const check = list.filter((check) => {\r\n      if (check.checked === true) {\r\n        return check;\r\n      }\r\n    });\r\n    const c = check.length;\r\n    setCheckCount(c);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"todos\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoText: doc.data().todoText,\r\n          todoDate: doc.data().todoDate,\r\n          checked: doc.data().checked,\r\n        }));\r\n\r\n        handleCheckLength(list);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <CustomTooltip title=\"Visual representation of total work\" placement=\"top\">\r\n      <ChartContainer>\r\n        <Doughnut\r\n          data={data}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            tooltips: {\r\n              enabled: false,\r\n            },\r\n          }}\r\n          height={200}\r\n          width={200}\r\n        ></Doughnut>\r\n\r\n        <CustomTooltip\r\n          title={\r\n            Math.floor((checkCount / todoLength) * 100) === 0\r\n              ? `${Math.floor(\r\n                  (checkCount / todoLength) * 100\r\n                )}% of work is done`\r\n              : `Congrats: ${Math.floor(\r\n                  (checkCount / todoLength) * 100\r\n                )}% of work is done`\r\n          }\r\n          placement=\"top\"\r\n        >\r\n          <Percentage>\r\n            {Math.floor((checkCount / todoLength) * 100)}%\r\n          </Percentage>\r\n        </CustomTooltip>\r\n      </ChartContainer>\r\n    </CustomTooltip>\r\n  );\r\n}\r\n\r\nexport default DonutChart;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst ChartContainer = styled.div`\r\n  margin-top: 1rem;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n  margin-top:2rem;\r\n    `};\r\n`;\r\n\r\nconst Percentage = styled.p`\r\n  position: absolute;\r\n  top: 43%;\r\n  left: 43%;\r\n  font-size: 1.7rem;\r\n  font-weight: 600;\r\n  color: rgb(0, 82, 52);\r\n  cursor: pointer;\r\n`;\r\n",["159","160"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\utils\\theme.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarPersonal.js",["161","162","163","164","165","166","167"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Chat.js",["168","169","170","171","172","173","174","175","176","177"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Discussion.js",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Material.js",["204","205","206","207"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\home\\Home.js",["208","209","210"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"import { Button, useMediaQuery, useTheme, makeStyles } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { db, storage } from \"../../firebase\";\r\nimport AddingTeamModal from \"./Dialog\";\r\nimport TeamCard from \"./TeamCard\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport {\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n  DatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport firebase from \"firebase\";\r\nimport TeamTodoCard from \"./TeamTodoCard\";\r\nimport noTeamTodoImage from \"../../assets/images/noTeamTodo.svg\";\r\nimport noTodoJoinTeam from \"../../assets/images/noTodoJoinTeam.svg\";\r\nimport deletedTeam from \"../../assets/images/deletedTeam.svg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./heightMedia.css\";\r\nimport SnackBar from \"../snackbar/SnackBar\";\r\nimport SidebarTeams from \"./sidebar/SidebarTeams\";\r\nimport VideoCallIcon from \"@material-ui/icons/VideoCall\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={1}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"100%\",\r\n  },\r\n  AppBar: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none\",\r\n    color: \"#000\",\r\n    marginTop: \"-1rem\",\r\n    paddingTop: \"0.5rem\",\r\n  },\r\n  Tabs: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"rgb(5, 185, 125)\",\r\n    height: 3,\r\n    borderRadius: \"7px\",\r\n    width: \"10.2rem\",\r\n  },\r\n  label: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"0.8rem\",\r\n    // lineHeight: \"2.3rem\",\r\n    color: \"#565656\",\r\n    textTransform: \"uppercase\",\r\n    // padding: \"1.8rem 4.2rem\",\r\n    padding: \"0.3rem\",\r\n  },\r\n  flexContainer: {\r\n    borderBottom: \"2px solid rgba(196, 196, 196, 0.5)\",\r\n  },\r\n  addBtn: {\r\n    minWidth: \"1.5rem\",\r\n    padding: 0,\r\n    height: \"1.5rem\",\r\n  },\r\n}));\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(2, 88, 60)\",\r\n    },\r\n  },\r\n  width: \"100%\",\r\n  cursor: \"pointer\",\r\n  overrides: {\r\n    MuiInputBase: {\r\n      root: {\r\n        overflow: \"hidden\",\r\n      },\r\n      input: {\r\n        color: \"rgb(0, 90, 60)\",\r\n        fontSize: \"1rem\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction TeamTodo({\r\n  UrlTeamName,\r\n  setDiscussionLock,\r\n  profileImage,\r\n  setTabValue,\r\n}) {\r\n  const [openMaker, setOpenMaker] = useState(false);\r\n  const [make, setMake] = useState(false);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const [inputTodo, setInputTodo] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [thisIsAdmin, setThisIsAdmin] = useState(false);\r\n  const [deleteTeam, setDeleteTeam] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [profileError, setProfileError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [firstLoader, setFirstLoader] = useState(true);\r\n  const [teams, setTeams] = useState([]);\r\n  const [joinedTeams, setJoinedTeams] = useState([]);\r\n  const [teamsTodoList, setTeamsTodoList] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [profileSetter, setProfileSetter] = useState(true);\r\n  const [openMakeSnackBar, setOpenMakeSnackBar] = useState(false);\r\n  const [openJoinSnackBar, setOpenJoinSnackBar] = useState(false);\r\n  const [openDeleteSnackBar, setOpenDeleteSnackBar] = useState(false);\r\n  const [currentTeamName, setCurrentTeamName] = useState(\"\");\r\n  //const [profileImage, setProfileImage] = useState(\"\");\r\n  const [profilePath, setProfilePath] = useState(\"\");\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n\r\n  const handleInputChange = (value) => {\r\n    setInputTodo(value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleClickMakeTeam = () => {\r\n    setMake(true);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleClickJoinTeam = () => {\r\n    setMake(false);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenMaker(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (inputTodo !== \"\") {\r\n      db.collection(\"teams\").doc(UrlTeamName).collection(\"teamTodos\").add({\r\n        todoText: inputTodo,\r\n        todoTime: selectedDate.toISOString(),\r\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        admin: currentUser.uid,\r\n        checked: false,\r\n        assignedTo: \"\",\r\n        todoImage: \"\",\r\n        comment: \"\",\r\n        checkedBy: \"\",\r\n      });\r\n      setInputTodo(\"\");\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"teams\")\r\n      .doc(UrlTeamName)\r\n      .collection(\"teamTodos\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          admin: doc.data().admin,\r\n          todoText: doc.data().todoText,\r\n          todoTime: doc.data().todoTime,\r\n          checked: doc.data().checked,\r\n          checkedBy: doc.data().checkedBy,\r\n          assignedTo: doc.data().assignedTo,\r\n          todoImage: doc.data().todoImage,\r\n          comment: doc.data().comment,\r\n        }));\r\n        setTeamsTodoList(list);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"userTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _teams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n          admin: doc.data().admin,\r\n        }));\r\n        console.log(_teams);\r\n        setTeams(_teams);\r\n      });\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _joinedTeams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n        }));\r\n        console.log(_joinedTeams);\r\n        setJoinedTeams(_joinedTeams);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  React.useEffect(() => {\r\n    setThisIsAdmin(false);\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const tempTeamList = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        admin: doc.data().admin,\r\n        teamDeleted: doc.data().teamDeleted,\r\n      }));\r\n      tempTeamList.filter((team) => {\r\n        if (team.id === UrlTeamName) {\r\n          setDeleteTeam(team.teamDeleted);\r\n          if (team.admin === currentUser.uid) {\r\n            setThisIsAdmin(true);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }, [UrlTeamName]);\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"profile\")\r\n      .onSnapshot((snapshot) => {\r\n        const profile = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n        }));\r\n\r\n        profile.filter((p) => {\r\n          if (p.name !== \"\") {\r\n            setUserName(p.name);\r\n            setProfileSetter(false);\r\n            setDiscussionLock(false);\r\n          }\r\n        });\r\n        setFirstLoader(false);\r\n      });\r\n  }, []);\r\n\r\n  const emptyFunction = () => {};\r\n\r\n  return firstLoader ? (\r\n    <p>Loading...</p>\r\n  ) : profileSetter ? (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"70vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        color: \"rgba(0, 141, 94, 0.595)\",\r\n      }}\r\n    >\r\n      To use this feature,\r\n      <br /> Set your profile in Profile section\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <TeamTodoContainer>\r\n        {!isSmall ? (\r\n          <SidebarTeams UrlTeamName={UrlTeamName} />\r\n        ) : (\r\n          <TeamTodoLeftContainer>\r\n            <TeamTodoLeftLeftBox>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                <h3>My Teams</h3>\r\n                <Button\r\n                  classes={{ root: classes.addBtn }}\r\n                  className=\"addButton1\"\r\n                  onClick={() => handleClickMakeTeam()}\r\n                >\r\n                  <AddIcon className=\"addIcon\" />\r\n                </Button>\r\n              </div>\r\n\r\n              <MyTeamContainer>\r\n                {teams.map((team) => (\r\n                  <TeamCard\r\n                    sidebarClose={emptyFunction}\r\n                    key={team.id}\r\n                    id={team.id}\r\n                    teamName={team.teamName}\r\n                    UrlTeamName={UrlTeamName}\r\n                    deleteBtn={true}\r\n                    setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n                    setCurrentTeamName={setCurrentTeamName}\r\n                  ></TeamCard>\r\n                ))}\r\n              </MyTeamContainer>\r\n            </TeamTodoLeftLeftBox>\r\n            <TeamTodoLeftRightBox>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                <h3>Joined Teams</h3>\r\n                <Button\r\n                  classes={{ root: classes.addBtn }}\r\n                  className=\"addButton1\"\r\n                  onClick={() => handleClickJoinTeam()}\r\n                >\r\n                  <AddIcon className=\"addIcon\" />\r\n                </Button>\r\n              </div>\r\n              <MyTeamContainer>\r\n                {joinedTeams.map((team) => (\r\n                  <TeamCard\r\n                    sidebarClose={emptyFunction}\r\n                    key={team.id}\r\n                    id={team.id}\r\n                    teamName={team.teamName}\r\n                    UrlTeamName={UrlTeamName}\r\n                    deleteBtn={true}\r\n                    setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n                    setCurrentTeamName={setCurrentTeamName}\r\n                  ></TeamCard>\r\n                ))}\r\n              </MyTeamContainer>\r\n            </TeamTodoLeftRightBox>\r\n          </TeamTodoLeftContainer>\r\n        )}\r\n\r\n        <TeamTodoRightContainer>\r\n          {thisIsAdmin ? (\r\n            <TodoRightUpBox>\r\n              <div className=\"inputField\">\r\n                <CreateIcon className=\"todoIcon\" />\r\n                <textarea\r\n                  value={inputTodo}\r\n                  className=\"todoInput\"\r\n                  type=\"text\"\r\n                  placeholder=\"Write here...\"\r\n                  onChange={(e) => handleInputChange(e.target.value)}\r\n                  //onKeyDown={(e) => handleSubmitEnter(e)}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  paddingLeft: \"0 0rem\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  {/* <CustomTooltip title=\"Enter deadline\" placement=\"top\" arrow> */}\r\n                  <div className=\"dateBox\">\r\n                    <p>Deadline:</p>\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                          fontSize: \"0.7rem\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                  {/* </CustomTooltip> */}\r\n                </MuiPickersUtilsProvider>\r\n\r\n                <Button\r\n                  disabled={loader}\r\n                  endIcon={<AddIcon className=\"addIcon\" />}\r\n                  className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n                  onClick={() => handleSubmit()}\r\n                >\r\n                  ADD\r\n                </Button>\r\n                <CustomTooltip title=\"Start meeting\" placement=\"down\">\r\n                  <a\r\n                    href={`https://slogmeet.web.app/${UrlTeamName}`}\r\n                    className=\"meetingLink\"\r\n                  >\r\n                    <Button disabled={loader} className=\"slogMeet\">\r\n                      <VideoCallIcon />\r\n                    </Button>\r\n                  </a>\r\n                </CustomTooltip>\r\n              </div>\r\n            </TodoRightUpBox>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                color: \"rgb(5, 185, 125)\",\r\n                padding: \"1.4rem 0rem\",\r\n                borderBottom: \"2px solid rgba(0, 141, 94, 0.295)\",\r\n              }}\r\n            >\r\n              <h1 style={{ fontSize: \"1rem\" }}>SLOGGER</h1>\r\n              {UrlTeamName !== undefined && (\r\n                <CustomTooltip title=\"Join meeting\" placement=\"top\">\r\n                  <a\r\n                    href={`https://slogmeet.web.app/${UrlTeamName}`}\r\n                    className=\"meetingJoinLink\"\r\n                  >\r\n                    <Button\r\n                      disabled={loader}\r\n                      className=\"slogMeet\"\r\n                      style={{ width: \"10%\", transform: \"scale(0.7)\" }}\r\n                    >\r\n                      <VideoCallIcon />\r\n                    </Button>\r\n                  </a>\r\n                </CustomTooltip>\r\n              )}\r\n            </div>\r\n          )}\r\n          {teamsTodoList.length === 0 ? (\r\n            thisIsAdmin ? (\r\n              <div\r\n                className=\"teamNoTodoImage\"\r\n                style={{\r\n                  height: \"80%\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  objectFit: \"contain\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={noTeamTodoImage}\r\n                  style={{\r\n                    height: \"15rem\",\r\n                    width: \"15rem\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                />\r\n                <h3\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  NO WORK TO DO\r\n                </h3>{\" \"}\r\n                <h4\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  ADD SOME\r\n                </h4>{\" \"}\r\n                <br />\r\n                <h6\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    cursor: \"pointer\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                  onClick={() => history.push(\"/help\")}\r\n                >\r\n                  Need Help?\r\n                </h6>{\" \"}\r\n              </div>\r\n            ) : deleteTeam ? (\r\n              <div\r\n                className=\"teamNoTodoImage\"\r\n                style={{\r\n                  height: \"80%\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  objectFit: \"contain\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={deletedTeam}\r\n                  style={{\r\n                    height: \"15rem\",\r\n                    width: \"15rem\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                />\r\n                <h4\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    overflow: \"hidden\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  THIS TEAM WAS DELETED BY THE ADMIN\r\n                </h4>{\" \"}\r\n                <br />\r\n                <h6\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    cursor: \"pointer\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                  onClick={() => history.push(\"/help\")}\r\n                >\r\n                  Need Help?\r\n                </h6>{\" \"}\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className=\"teamNoTodoImage\"\r\n                style={{\r\n                  height: \"80%\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  objectFit: \"contain\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={noTodoJoinTeam}\r\n                  style={{\r\n                    height: \"15rem\",\r\n                    width: \"15rem\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                />\r\n                <h4\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    overflow: \"hidden\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  NO WORK TO DO, WE WILL UPDATE\r\n                </h4>{\" \"}\r\n                <h5\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    overflow: \"hidden\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  TILL THEN SIT BACK AND RELAX\r\n                </h5>{\" \"}\r\n                <br />\r\n                <h6\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    cursor: \"pointer\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                  onClick={() => history.push(\"/help\")}\r\n                >\r\n                  Need Help?\r\n                </h6>{\" \"}\r\n              </div>\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {teamsTodoList.map((todo) => (\r\n            <TeamTodoCard\r\n              key={todo.id}\r\n              id={todo.id}\r\n              text={todo.todoText}\r\n              date={todo.todoTime}\r\n              checked={todo.checked}\r\n              checkedBy={todo.checkedBy}\r\n              admin={todo.admin}\r\n              urlTeamName={UrlTeamName}\r\n              assigned={todo.assignedTo}\r\n              todoImage={todo.todoImage}\r\n              comment={todo.comment}\r\n              userName={userName}\r\n              profileImage={profileImage}\r\n              setTabValue={setTabValue}\r\n            />\r\n          ))}\r\n        </TeamTodoRightContainer>\r\n      </TeamTodoContainer>\r\n      {openMaker && (\r\n        <AddingTeamModal\r\n          open={openMaker}\r\n          handleClose={handleClose}\r\n          make={make}\r\n          setCurrentTeamName={setCurrentTeamName}\r\n          openSnackbar={make ? setOpenMakeSnackBar : setOpenJoinSnackBar}\r\n        />\r\n      )}\r\n      {openMakeSnackBar && (\r\n        <SnackBar\r\n          open={openMakeSnackBar}\r\n          handleClose={() => setOpenMakeSnackBar(false)}\r\n          text={`Team ${currentTeamName} Created`}\r\n        />\r\n      )}\r\n      {openJoinSnackBar && (\r\n        <SnackBar\r\n          open={openJoinSnackBar}\r\n          handleClose={() => setOpenJoinSnackBar(false)}\r\n          text={`Welcome to team ${currentTeamName}`}\r\n        />\r\n      )}\r\n      {openDeleteSnackBar && (\r\n        <SnackBar\r\n          open={openDeleteSnackBar}\r\n          handleClose={() => setOpenDeleteSnackBar(false)}\r\n          text={`Team ${currentTeamName} deleted`}\r\n        />\r\n      )}\r\n      {openSnack && (\r\n        <SnackBar\r\n          open={openSnack}\r\n          handleClose={() => setOpenSnack(false)}\r\n          text={\"Uploading...\"}\r\n          material={true}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamTodo;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst TeamTodoContainer = styled.div`\r\n  width: 100%;\r\n  height: 89%;\r\n  position: absolute;\r\n  display: flex;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n  flex:1;\r\n    flex-direction:column;\r\n    height: 85%;\r\n    width: 97%;\r\n`}\r\n  .addIcon {\r\n    transform: scale(0.7);\r\n  }\r\n`;\r\n\r\nconst TeamTodoLeftContainer = styled.div`\r\n  flex: 0.45;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  overflow: hidden;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex:0.4;\r\n      border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n      margin-bottom:1rem;\r\n  `}\r\n`;\r\n\r\nconst TeamTodoLeftLeftBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 20% !important;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    margin: 0.5rem;\r\n    font-size: 0.9rem;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      width:97% !important;\r\n      margin: 0.5rem 1rem;\r\n      margin-left:0rem;\r\n    `}\r\n  }\r\n  .addButton1:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125, 0.8);\r\n    text-align: end;\r\n    font-size: 0.9rem;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size:10px;\r\n      margin-top:-0.4rem;\r\n    `};\r\n  }\r\n`;\r\nconst MyTeamContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: scroll !important;\r\n`;\r\n\r\nconst TeamTodoLeftRightBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 20% !important;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    margin: 0.5rem;\r\n    font-size: 0.9rem;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      width:97% !important;\r\n      margin: 0.5rem 1rem;\r\n      margin-left:0rem;\r\n    `}\r\n  }\r\n  .addButton1:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125, 0.8);\r\n    text-align: end;\r\n    width: 100%;\r\n    font-size: 0.9rem;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size:10px;\r\n      margin-top:-0.4rem;\r\n    `}\r\n  }\r\n`;\r\nconst TeamTodoRightContainer = styled.div`\r\n  flex: 0.55;\r\n  overflow-y: scroll;\r\n  padding: 0 1rem;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n  flex:1;\r\n  \r\n  padding: 0 0.2rem;\r\n`}\r\n  .teamNoTodoImage {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    height:70% !important;\r\n    flex: 1;\r\n  `}\r\n  }\r\n  .meetingLink {\r\n    width: 30%;\r\n    margin: 0.2rem 0rem;\r\n    margin-left: 0.2rem;\r\n    text-decoration: none;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n     width: 50% !important;\r\n     margin:0.1rem 0rem !important;\r\n     margin-left: 0.2rem !important;\r\n    `};\r\n  }\r\n  .meetingJoinLink {\r\n    width: 12%;\r\n    margin: 0.2rem 0.5rem;\r\n    text-decoration: none;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n     width: 17% !important;\r\n     \r\n    `};\r\n  }\r\n  .slogMeet {\r\n    height: 2rem !important;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    height: 2.1rem !important;\r\n    `};\r\n  }\r\n\r\n  .slogMeet:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n`;\r\n\r\nconst TodoRightUpBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n  width: 100%;\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n    border:none;\r\n  `}\r\n\r\n  .inputField {\r\n    width: 100%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 5px;\r\n    border: none;\r\n    padding: 0.5rem 0;\r\n    margin: 0.5rem 0;\r\n    margin-bottom: 0rem;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n         margin:0;\r\n         height: 2rem;\r\n    `};\r\n  }\r\n  .todoInput {\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 0.9rem !important;\r\n    flex: 0.95;\r\n    padding: 0.5rem;\r\n    margin: 1rem 0 !important;\r\n    resize: none;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    margin-left:0.5rem;\r\n    font-size: 1rem !important;\r\n    `};\r\n  }\r\n  .todoInput::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 0.7rem;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size: 1rem;\r\n    `};\r\n  }\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.2rem;\r\n    flex: 0.05;\r\n    padding-right: 0.3rem;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n  .AlarmIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.2rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    margin-top:0px;\r\n    `};\r\n  }\r\n  .dateBox {\r\n    width: 95%;\r\n    height: 1.2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 0.4rem;\r\n    margin: 0.2rem 0;\r\n    margin-right: 0.2rem;\r\n    font-size: 0.7rem !important;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer !important;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    padding: 0.5rem 0.5rem;\r\n         margin:0.1rem 0;\r\n         font-size:0.7rem !important;\r\n    `};\r\n    P {\r\n      margin-right: 0.7rem;\r\n      color: rgb(0, 90, 60);\r\n      ${customMedia.lessThan(\"smTablet\")`\r\n        font-size:9px;\r\n    `};\r\n    }\r\n  }\r\n  .AddButton {\r\n    width: 90%;\r\n    font-size: 0.7rem !important;\r\n    height: 2rem !important;\r\n    overflow: hidden;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    margin: 0.2rem 0;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n     margin: 0.1rem 0.2rem;\r\n     margin-right:0;\r\n      padding:0;\r\n      height: 2.1rem !important;\r\n    `};\r\n  }\r\n\r\n  .AddButton:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  .AddButtonDisabled {\r\n    height: 2rem !important;\r\n    overflow: hidden;\r\n    opacity: 0.7;\r\n    width: 95.5%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125, 0.8);\r\n    margin: 0.2rem;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n     margin: 0.1rem 0.2rem;\r\n     margin-right:0;\r\n      padding:0;\r\n      height: 2.1rem !important;\r\n    `};\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodoCard.js",["234","235","236"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\Schedular\\CalendarModal.js",["237","238","239","240"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js",["241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TodoCard.js",["255","256"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\Schedular\\Schedular.js",["257","258"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Calendar as FCalendar } from \"@fullcalendar/core\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"./style.css\";\r\nimport CalendarModal from \"./CalendarModal\";\r\n\r\nfunction Schedular(props) {\r\n  const calendarRef = useRef(null);\r\n  const [event, setEvent] = useState([]);\r\n  const [openCalendarModal, setOpenCalendarModal] = useState(false);\r\n  const day = 60 * 60 * 24 * 1000;\r\n\r\n  const getAllEvents = () => {\r\n    return props.todoList?.map((todo) => {\r\n      if (todo.priority === 3) {\r\n        return {\r\n          id: todo.id,\r\n          title: todo.todoText,\r\n          start: new Date(new Date(todo.todoStartDate).getTime() + day)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          end: new Date(new Date(todo.todoEndDate).getTime() + day * 2)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          backgroundColor: \"rgba(185, 5, 5, 0.8)\",\r\n          display: \"block\",\r\n          teamName: todo.todoTeamName,\r\n        };\r\n      }\r\n      if (todo.priority === 2) {\r\n        return {\r\n          id: todo.id,\r\n          title: todo.todoText,\r\n          start: new Date(new Date(todo.todoStartDate).getTime() + day)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          end: new Date(new Date(todo.todoEndDate).getTime() + day * 2)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          backgroundColor: \"rgba(185, 86, 5, 0.8)\",\r\n          display: \"block\",\r\n          teamName: todo.todoTeamName,\r\n        };\r\n      }\r\n      if (todo.priority === 1) {\r\n        return {\r\n          id: todo.id,\r\n          title: todo.todoText,\r\n          start: new Date(new Date(todo.todoStartDate).getTime() + day)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          end: new Date(new Date(todo.todoEndDate).getTime() + day * 2)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          backgroundColor: \"rgba(0, 99, 66, 0.8)\",\r\n          display: \"block\",\r\n          teamName: todo.todoTeamName,\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChild(getAllEvents());\r\n    console.log(getAllEvents());\r\n  }, []);\r\n\r\n  const getChild = (data) => {\r\n    var calendarEl = document.getElementById(\"calendar\");\r\n    var calendar = new FCalendar(calendarEl, {\r\n      aspectRatio: 1.8,\r\n      weekends: true,\r\n      contentWidth: \"100%\",\r\n      height: \"auto\",\r\n      themeSystem: \"bootstrap\",\r\n      plugins: [listPlugin, dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n\r\n      headerToolbar: {\r\n        left: \"prev,next,today\",\r\n        center: \"title\",\r\n        right: \"listYear,dayGridMonth\",\r\n        ...props.options,\r\n      },\r\n      views: {\r\n        listYear: { buttonText: \"Schedule\" },\r\n        dayGridMonth: { buttonText: \"Month\" },\r\n      },\r\n      eventClick: function (info) {\r\n        modalFunction(info.event);\r\n\r\n        console.log(info.event);\r\n      },\r\n\r\n      defaultView: \"listWeek\",\r\n      editable: false,\r\n      selectable: false,\r\n      selectMirror: false,\r\n      dayMaxEvents: false,\r\n      customButtons: \"\",\r\n      initialEvents: data,\r\n      navLinks: true,\r\n      initialView: props.initialView,\r\n    });\r\n    console.log(calendar.getOption(\"aspectRatio\"));\r\n    calendar.render();\r\n    calendarRef.current = calendar;\r\n  };\r\n  const modalFunction = (e) => {\r\n    setEvent(e);\r\n    setOpenCalendarModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedularContainer\">\r\n      <div className=\"demo-app\">\r\n        <div className=\"demo-app-main\">\r\n          <div id=\"calendar\"></div>\r\n        </div>\r\n      </div>\r\n      {openCalendarModal && (\r\n        <CalendarModal\r\n          open={CalendarModal}\r\n          handleClose={() => setOpenCalendarModal(false)}\r\n          event={event}\r\n          getAllEvents={getAllEvents}\r\n          getChild={getChild}\r\n          setPersonalTabValue={props.setPersonalTabValue}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedular;\r\n",["259","260"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\index.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\context\\AuthContext.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Delete.js",["261","262","263","264","265","266","267","268"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport \"./style.css\";\r\nimport { db, storage } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Fade } from \"@material-ui/core\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Fade direction=\"\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Delete({\r\n  open,\r\n  handleClose,\r\n  teamName,\r\n  id,\r\n  setCurrentTeamName,\r\n  setOpenDeleteSnackBar,\r\n}) {\r\n  const [cannotDelete, setCannotDelete] = React.useState(false);\r\n  const [ModalOpen, setModalOpen] = React.useState(false);\r\n\r\n  const handleCloseDeleteListModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const { currentUser } = useAuth();\r\n  const handleJoinDelete = () => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .doc(id)\r\n      .delete();\r\n    handleClose();\r\n    setOpenDeleteSnackBar(true);\r\n    setCurrentTeamName(teamName);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const tempTeamList = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        admin: doc.data().admin,\r\n      }));\r\n      var count = 0;\r\n      tempTeamList.filter((team) => {\r\n        if (team.id === teamName) {\r\n          if (team.admin === currentUser.uid) {\r\n            count = count + 1;\r\n          }\r\n        }\r\n      });\r\n      if (count !== 0) {\r\n        // callDelete();\r\n      } else {\r\n        setCannotDelete(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      onClose={handleClose}\r\n      keepMounted\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        className=\"title\"\r\n      ></DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          {cannotDelete ? (\r\n            <p>\r\n              Team will be deleted on your side only,\r\n              <br /> Are you sure?{\" \"}\r\n            </p>\r\n          ) : (\r\n            <p>Are you sure?</p>\r\n          )}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button\r\n          className=\"addButtonDelete\"\r\n          onClick={handleClose}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"addButtonDelete\"\r\n          onClick={\r\n            cannotDelete ? () => handleJoinDelete() : () => setModalOpen(true)\r\n          }\r\n          color=\"primary\"\r\n        >\r\n          Delete\r\n        </Button>\r\n      </DialogActions>\r\n      {ModalOpen && (\r\n        <DeleteUserTeamModal\r\n          open={ModalOpen}\r\n          handleThisClose={handleCloseDeleteListModal}\r\n          teamName={teamName}\r\n          id={id}\r\n          closeBackModal={handleClose}\r\n          currentUser={currentUser.uid}\r\n          setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n          setCurrentTeamName={setCurrentTeamName}\r\n        />\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction DeleteUserTeamModal({\r\n  open,\r\n  handleThisClose,\r\n  teamName,\r\n  id,\r\n  closeBackModal,\r\n  currentUser,\r\n  setOpenDeleteSnackBar,\r\n  setCurrentTeamName,\r\n}) {\r\n  const [todoSideDelete, setTodoSideDelete] = React.useState(false);\r\n  const [userSideDelete, setUserSideDelete] = React.useState(false);\r\n  const [databaseSideDelete, setDatabaseSideDelete] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const userTeamDelete = () => {\r\n    db.collection(\"teams\").doc(teamName).set(\r\n      {\r\n        teamDeleted: true,\r\n      },\r\n      { merge: true }\r\n    );\r\n\r\n    db.collection(\"users\")\r\n      .doc(currentUser)\r\n      .collection(\"userTeams\")\r\n      .doc(id)\r\n      .delete();\r\n\r\n    setUserSideDelete(true);\r\n    setOpenDeleteSnackBar(true);\r\n    setCurrentTeamName(teamName);\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const databaseDelete = () => {\r\n    db.collection(\"teams\").doc(teamName).delete();\r\n    setDatabaseSideDelete(true);\r\n  };\r\n\r\n  const deleteAllTodo = (todo) => {\r\n    todo.map((doc) => {\r\n      if (doc.todoImage !== \"\") {\r\n        var desertRef = storage.refFromURL(doc.todoImage);\r\n        desertRef\r\n          .delete()\r\n          .then(function () {\r\n            console.log(\"File deleted successfully\");\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      }\r\n\r\n      db.collection(\"teams\")\r\n        .doc(teamName)\r\n        .collection(\"teamTodos\")\r\n        .doc(doc.id)\r\n        .delete();\r\n    });\r\n  };\r\n\r\n  const todoDelete = () => {\r\n    db.collection(\"teams\")\r\n      .doc(teamName)\r\n      .collection(\"teamTodos\")\r\n      .onSnapshot((snapshot) => {\r\n        const todoDeleteList = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoImage: doc.data().todoImage,\r\n        }));\r\n\r\n        console.log(todoDeleteList);\r\n        deleteAllTodo(todoDeleteList);\r\n      });\r\n\r\n    setTodoSideDelete(true);\r\n  };\r\n\r\n  const handleCompleteClose = () => {\r\n    handleThisClose();\r\n    closeBackModal();\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      keepMounted\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        className=\"title\"\r\n      ></DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <h3 style={{ paddingBottom: \"1rem\" }}>\r\n              Help us to delete it from both place\r\n            </h3>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <p style={{ flex: 0.7 }}>Delete all todos: </p>\r\n              <Button\r\n                disabled={todoSideDelete ? true : false}\r\n                // className=\"addButton\"\r\n                className={todoSideDelete ? \"addButtonDisabled\" : \"addButton\"}\r\n                style={{ flex: 0.3 }}\r\n                onClick={() => todoDelete()}\r\n              >\r\n                {todoSideDelete ? \"deleted\" : \"delete\"}\r\n              </Button>\r\n            </div>\r\n            {/* <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <p style={{ flex: 0.7 }}>Delete from database: </p>\r\n              <Button\r\n                disabled={\r\n                  todoSideDelete ? (databaseSideDelete ? true : false) : true\r\n                }\r\n                // className=\"addButton\"\r\n                className={\r\n                  todoSideDelete\r\n                    ? databaseSideDelete\r\n                      ? \"addButtonDisabled\"\r\n                      : \"addButton\"\r\n                    : \"addButtonDisabled\"\r\n                }\r\n                style={{ flex: 0.3 }}\r\n                onClick={() => databaseDelete()}\r\n              >\r\n                {databaseSideDelete ? \"deleted\" : \"delete\"}\r\n              </Button>\r\n            </div> */}\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <p style={{ flex: 0.7 }}>Delete from your side: </p>\r\n              <Button\r\n                disabled={\r\n                  todoSideDelete ? (userSideDelete ? true : false) : true\r\n                }\r\n                // className=\"addButton\"\r\n\r\n                className={\r\n                  todoSideDelete\r\n                    ? userSideDelete\r\n                      ? \"addButtonDisabled\"\r\n                      : \"addButton\"\r\n                    : \"addButtonDisabled\"\r\n                }\r\n                style={{ flex: 0.3 }}\r\n                onClick={() => userTeamDelete()}\r\n              >\r\n                {userSideDelete ? \"deleted\" : \"delete\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button\r\n          className=\"addButton\"\r\n          onClick={() => handleCompleteClose()}\r\n          color=\"primary\"\r\n          disabled={userSideDelete && todoSideDelete ? false : true}\r\n          className={\r\n            todoSideDelete && userSideDelete ? \"addButton\" : \"addButtonDisabled\"\r\n          }\r\n        >\r\n          Done\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n",["269","270"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarProfile.js",["271","272","273","274","275","276","277","278","279","280","281","282"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./sidebar.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport { db, storage } from \"../../../firebase\";\r\nimport { Avatar, Paper } from \"@material-ui/core\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SnackBar from \"../../snackbar/SnackBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    color: \"#fff\",\r\n    background: \"rgba(0, 145, 96, 0.9)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SidebarProfile() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n  const { currentUser, logOut } = useAuth();\r\n  const [profileImage, setProfileImage] = useState(\"\");\r\n  const [profilePath, setProfilePath] = useState(\"\");\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const [profileError, setProfileError] = useState(false);\r\n  const [profileSetter, setProfileSetter] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [skills, setSkills] = useState(\"\");\r\n  const [skillList, setSkillList] = useState([]);\r\n  const [bio, setBio] = useState(\"\");\r\n  const [facebook, setFacebook] = useState(\"\");\r\n  const [instagram, setInstagram] = useState(\"\");\r\n  const [github, setGithub] = useState(\"\");\r\n  const [linkedin, setLinkedin] = useState(\"\");\r\n  const [teams, setTeams] = useState([]);\r\n  const [allMemberIdList, setAllMemberIdList] = useState([]);\r\n  const [team, handleChangeTeam] = React.useState(\"\");\r\n  const [endorsementList, setEndorsementList] = useState([]);\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSaveProfile = () => {\r\n    const _skillList = skills.split(\",\");\r\n    setSkillList(_skillList);\r\n\r\n    setProfileSetter(!profileSetter);\r\n\r\n    if (profileSetter) {\r\n      if (name !== \"\" && email !== \"\") {\r\n        setProfileError(false);\r\n        db.collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"profile\")\r\n          .onSnapshot((snapshot) => {\r\n            if (snapshot.docs.length === 0) {\r\n              db.collection(\"users\")\r\n                .doc(currentUser.uid)\r\n                .collection(\"profile\")\r\n                .add({\r\n                  name: name,\r\n                  email: email,\r\n                  contact: contact,\r\n                  bio: bio,\r\n                  skills: skills,\r\n                  facebook: facebook,\r\n                  instagram: instagram,\r\n                  github: github,\r\n                  linkedin: linkedin,\r\n                  profileImage: profileImage,\r\n                });\r\n            } else {\r\n              const prevProfile = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n              }));\r\n\r\n              db.collection(\"users\")\r\n                .doc(currentUser.uid)\r\n                .collection(\"profile\")\r\n                .doc(prevProfile[0].id)\r\n                .set(\r\n                  {\r\n                    name: name,\r\n                    email: email,\r\n                    bio: bio === \"\" ? \"NoContact\" : bio,\r\n                    contact: contact === \"\" ? \"NoContact\" : contact,\r\n                    skills: skills === \"\" ? \"NoSkill\" : skills,\r\n                    facebook: facebook === \"\" ? \"NoLink\" : facebook,\r\n                    instagram: instagram === \"\" ? \"NoLink\" : instagram,\r\n                    github: github === \"\" ? \"NoLink\" : github,\r\n                    linkedin: linkedin === \"\" ? \"NoLink\" : linkedin,\r\n                    profileImage: profileImage === \"\" ? \"NoLink\" : profileImage,\r\n                  },\r\n                  { merge: true }\r\n                );\r\n            }\r\n          });\r\n      } else {\r\n        setProfileError(true);\r\n      }\r\n    } else {\r\n      console.log(\"Not\");\r\n    }\r\n  };\r\n\r\n  const onSelectFile = async (event) => {\r\n    var path = (window.URL || window.webkitURL).createObjectURL(\r\n      event.target.files[0]\r\n    );\r\n    setProfilePath(path.slice(5));\r\n    setOpenSnack(true);\r\n    try {\r\n      const image = event.target.files[0];\r\n      const uploadTask = await storage\r\n        .ref(`profileImages/${image.name}`)\r\n        .put(image);\r\n      storage\r\n        .ref(\"profileImages\")\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          console.log(url);\r\n          setProfileImage(url);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setOpenSnack(false);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"endorsement\")\r\n      .doc(id)\r\n      .delete();\r\n  };\r\n\r\n  const getAllMembers = (selectedTeamName) => {\r\n    db.collection(\"teams\")\r\n      .doc(selectedTeamName)\r\n      .collection(\"members\")\r\n      .onSnapshot((snapshot) => {\r\n        const memberIdList = snapshot.docs.map((doc) => ({\r\n          id: doc.data().id,\r\n        }));\r\n\r\n        setAllMemberIdList(memberIdList);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"profile\")\r\n      .onSnapshot((snapshot) => {\r\n        if (snapshot.docs.length === 0) {\r\n          console.log(\"New User\");\r\n        } else {\r\n          const profile = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            name: doc.data().name,\r\n            email: doc.data().email,\r\n            profileImage: doc.data().profileImage,\r\n            skills: doc.data().skills,\r\n            contact: doc.data().contact,\r\n            facebook: doc.data().facebook,\r\n            instagram: doc.data().instagram,\r\n            linkedin: doc.data().linkedin,\r\n            github: doc.data().github,\r\n            bio: doc.data().bio,\r\n          }));\r\n          setProfileImage(profile[0].profileImage);\r\n          setName(profile[0].name);\r\n          setEmail(profile[0].email);\r\n          setSkills(profile[0].skills);\r\n          setContact(profile[0].contact);\r\n          setFacebook(profile[0].facebook);\r\n          setInstagram(profile[0].instagram);\r\n          setBio(profile[0].bio);\r\n          setGithub(profile[0].github);\r\n          setLinkedin(profile[0].linkedin);\r\n          setSkillList(profile[0].skills.split(\",\"));\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"endorsement\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          profileImage: doc.data().GiverProfileImage,\r\n          name: doc.data().GiverName,\r\n          email: doc.data().GiverEmail,\r\n          endorsement: doc.data().GiverEndorsement,\r\n          GiverId: doc.data().GiverId,\r\n        }));\r\n        console.log(list);\r\n        setEndorsementList(list);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addItemsProfile\" onClick={handleClickOpen}>\r\n        My profile\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            {/* <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/help\")}\r\n            >\r\n              Help\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className=\"sidebarProfileMyProfile\">\r\n          <div className=\"sidebarProfileTopBar\">\r\n            <div className=\"avatarBox\">\r\n              <input\r\n                hidden\r\n                id=\"profile-image-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={(e) => onSelectFile(e)}\r\n              />\r\n              {profileSetter ? (\r\n                <IconButton\r\n                  className=\"avatarEdit\"\r\n                  onClick={() => {\r\n                    document.getElementById(\"profile-image-file\").click();\r\n                  }}\r\n                >\r\n                  <CreateIcon />\r\n                </IconButton>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Avatar className=\"avatar\" alt={name} src={profileImage} />\r\n            </div>\r\n\r\n            <Button\r\n              className=\"sidebarProfileProfileEdit\"\r\n              onClick={() => handleSaveProfile()}\r\n            >\r\n              {profileSetter ? \"done\" : \"edit\"}\r\n            </Button>\r\n          </div>\r\n          <div className=\"sidebarProfileInputBox\">\r\n            <label>Name:</label>\r\n            <input\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className=\"sidebarProfileInput\"\r\n              placeholder=\"Full name...\"\r\n            />\r\n          </div>\r\n          <div className=\"sidebarProfileInputBox\">\r\n            <label>Email:</label>\r\n            <input\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"sidebarProfileInput\"\r\n              placeholder=\"Email given on slogger...\"\r\n            />\r\n          </div>\r\n          <div className=\"sidebarProfileInputBox\">\r\n            <label>Contact:</label>\r\n            <input\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={contact}\r\n              onChange={(e) => setContact(e.target.value)}\r\n              className=\"sidebarProfileInput\"\r\n              placeholder=\"Phone number...\"\r\n            />\r\n          </div>\r\n          <div className=\"sidebarProfileInputBox\" style={{ height: \"auto\" }}>\r\n            <label>Bio:</label>\r\n            <textarea\r\n              style={{\r\n                resize: \"none\",\r\n                padding: \"7px\",\r\n              }}\r\n              rows=\"5\"\r\n              cols=\"5\"\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={bio}\r\n              onChange={(e) => setBio(e.target.value)}\r\n              className=\"sidebarProfileInput\"\r\n              placeholder=\"Say something about yourself...\"\r\n            />\r\n          </div>\r\n          {profileSetter ? (\r\n            <>\r\n              <div className=\"sidebarProfileInputBox\">\r\n                <label>Skills:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={skills}\r\n                  onChange={(e) => setSkills(e.target.value)}\r\n                  className=\"sidebarProfileInput\"\r\n                  placeholder=\"Skills with comma separated...\"\r\n                />\r\n              </div>\r\n              <div className=\"sidebarProfileInputBox\">\r\n                <label>Facebook Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={facebook}\r\n                  onChange={(e) => setFacebook(e.target.value)}\r\n                  className=\"sidebarProfileInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n              <div className=\"sidebarProfileInputBox\">\r\n                <label>Instagram Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={instagram}\r\n                  onChange={(e) => setInstagram(e.target.value)}\r\n                  className=\"sidebarProfileInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n              <div className=\"sidebarProfileInputBox\">\r\n                <label>Github Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={github}\r\n                  onChange={(e) => setGithub(e.target.value)}\r\n                  className=\"sidebarProfileInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n              <div className=\"sidebarProfileInputBox\">\r\n                <label>Linkedin Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={linkedin}\r\n                  onChange={(e) => setLinkedin(e.target.value)}\r\n                  className=\"sidebarProfileInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"skillListAndLinkBox\">\r\n              {skillList.length !== 0 ? (\r\n                <div className=\"skillContainer\">\r\n                  <p>Skills: </p>\r\n                  <div className=\"skillBox\">\r\n                    {skillList?.map((skill) => (\r\n                      <div className=\"skill\">{skill}</div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <div className=\"linkContainer\">\r\n                {facebook === \"\" || facebook === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={facebook}>\r\n                    <FacebookIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n                {instagram === \"\" || instagram === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={instagram}>\r\n                    <InstagramIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n                {github === \"\" || github === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={github}>\r\n                    <GitHubIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n                {linkedin === \"\" || linkedin === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={linkedin}>\r\n                    <LinkedInIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n              </div>\r\n              <p className=\"endorsementHeading\">My Endorsements</p>\r\n              {endorsementList?.map((data) => (\r\n                <Paper elevation={3} className=\"sidebarEndContainer\">\r\n                  <div className=\"sidebarEndTopContainer\">\r\n                    <div className=\"sidebarEndCircle\">\r\n                      <Avatar\r\n                        className=\"sidebarEndProfileImage\"\r\n                        alt={data.name}\r\n                        src={data.profileImage}\r\n                      />\r\n                    </div>\r\n                    <div className=\"sidebarEndNameContainer\">\r\n                      <p>\r\n                        <PersonIcon className=\"sidebarEndIcon\" />\r\n                        {data.name}\r\n                      </p>\r\n                      <p>\r\n                        <EmailIcon className=\"sidebarEndIcon\" />\r\n                        {data.email}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"sidebarEndLinkContainer\">\r\n                      <DeleteIcon\r\n                        className=\"memberIcon\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => handleDelete(data.GiverId)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"sidebarEndEndContainer\"\r\n                    style={{ color: \"#40856e\" }}\r\n                  >\r\n                    <p>{data.endorsement}</p>\r\n                  </div>\r\n                </Paper>\r\n              ))}\r\n            </div>\r\n          )}\r\n          {openSnack && (\r\n            <SnackBar\r\n              open={openSnack}\r\n              handleClose={() => setOpenSnack(false)}\r\n              text={\"Uploading...\"}\r\n              material={true}\r\n            />\r\n          )}\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",["283","284"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Dialog.js",["285","286","287","288","289","290"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport \"./style.css\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./heightMedia.css\";\r\nimport { Fade } from \"@material-ui/core\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Fade direction=\"\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AddingTeamModal({\r\n  open,\r\n  handleClose,\r\n  make,\r\n  setCurrentTeamName,\r\n  openSnackbar,\r\n}) {\r\n  const [inputTeamName, setInputTeamName] = useState(\"\");\r\n  const [teamList, setTeamList] = useState([]);\r\n  const [alreadyExist, setAlreadyExist] = useState(false);\r\n  const [doesNotExist, setDoesNotExist] = useState(false);\r\n  const [already, setAlready] = useState(1);\r\n  const { currentUser } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const handleInputChange = (value) => {\r\n    setInputTeamName(value);\r\n    setAlreadyExist(false);\r\n    setDoesNotExist(false);\r\n  };\r\n\r\n  const handleMakeSubmit = () => {\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const list = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n      }));\r\n      console.log(list);\r\n      var count = 0;\r\n      list.filter((filter) => {\r\n        if (filter.id === inputTeamName) {\r\n          count = count + 1;\r\n        }\r\n      });\r\n      if (count !== 0) {\r\n        setAlreadyExist(true);\r\n      } else {\r\n        makeSubmit();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleJoinSubmit = () => {\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const list = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n      }));\r\n      console.log(list);\r\n      var count = 0;\r\n      list.filter((filter) => {\r\n        if (filter.id === inputTeamName) {\r\n          count = count + 1;\r\n        }\r\n      });\r\n      if (count !== 0) {\r\n        joinSubmit();\r\n      } else {\r\n        setDoesNotExist(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const joinSubmit = () => {\r\n    db.collection(\"users\").doc(currentUser.uid).collection(\"joinTeams\").add({\r\n      teamName: inputTeamName,\r\n      timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    db.collection(\"teams\").doc(inputTeamName).collection(\"members\").add({\r\n      id: currentUser.uid,\r\n    });\r\n    setCurrentTeamName(inputTeamName);\r\n    history.push(`/home/${inputTeamName}`);\r\n    handleClose();\r\n    openSnackbar(true);\r\n  };\r\n\r\n  const addTeamNameToUser = () => {\r\n    db.collection(\"users\").doc(currentUser.uid).collection(\"userTeams\").add({\r\n      teamName: inputTeamName,\r\n      admin: currentUser.uid,\r\n      timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    db.collection(\"teams\").doc(inputTeamName).collection(\"members\").add({\r\n      id: currentUser.uid,\r\n    });\r\n    setCurrentTeamName(inputTeamName);\r\n    history.push(`/home/${inputTeamName}`);\r\n    handleClose();\r\n    openSnackbar(true);\r\n  };\r\n\r\n  // const makeTeamCollection = () => {\r\n  //   db.collection(\"teams\").doc(inputTeamName).collection(\"teamTodos\").add({\r\n  //     todoText: \"hello\",\r\n  //   });\r\n  //   addTeamNameToUser();\r\n  // };\r\n\r\n  const makeSubmit = () => {\r\n    db.collection(\"teams\").doc(inputTeamName).set(\r\n      {\r\n        admin: currentUser.uid,\r\n        teamDeleted: false,\r\n      },\r\n      { merge: true }\r\n    );\r\n    addTeamNameToUser();\r\n\r\n    // makeTeamCollection();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-slide-title\" className=\"title\">\r\n        {make ? \"Make your team\" : \"Join a team\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          {alreadyExist ? (\r\n            <p\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"red\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              This name already exits\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {doesNotExist ? (\r\n            <p\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"red\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              No team found\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"inputFieldModal\">\r\n            <input\r\n              className=\"inputModal\"\r\n              value={inputTeamName}\r\n              type=\"text\"\r\n              placeholder={make ? \"Give team name...\" : \"Write team name...\"}\r\n              onChange={(e) => handleInputChange(e.target.value)}\r\n            ></input>\r\n          </div>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          className=\"addButtonModal\"\r\n          onClick={handleClose}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"addButtonModal\"\r\n          onClick={make ? () => handleMakeSubmit() : () => handleJoinSubmit()}\r\n          color=\"primary\"\r\n        >\r\n          {make ? \"Make\" : \"join\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\HelpPage.js",["291"],"import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport styled from \"styled-components\";\r\nimport NavBar from \"../navBar/NavBar\";\r\nimport videoFaq from \"../../assets/videos/faqVideo.mp4\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { Button, useMediaQuery } from \"@material-ui/core\";\r\nimport EmailDialog from \"./EmailDialog\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport SnackBar from \"../snackbar/SnackBar\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    overflow: \"scroll\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nfunction HelpPage() {\r\n  const classes = useStyles();\r\n  const { resetPassword, logOut } = useAuth();\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [openEmail, setOpenEmail] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const history = useHistory();\r\n\r\n  const handleChange = (set, value) => {\r\n    set(value);\r\n    setError(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpenEmail(false);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  const handlePasswordChange = async () => {\r\n    if (email === \"\") {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        await resetPassword(email);\r\n        setEmail(\"\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <HelpPageContainer>\r\n        {!isSmall ? (\r\n          <div\r\n            style={{\r\n              width: \"92%\",\r\n              height: \"56px\",\r\n              color: \"#fff\",\r\n              background: \"rgba(0, 145, 96, 0.9)\",\r\n              paddingLeft: \"15px\",\r\n              paddingRight: \"15px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              zIndex: 100,\r\n              boxShadow:\r\n                \"rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/home\")}\r\n            >\r\n              Home\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <NavBar page={1} home={true} />\r\n        )}\r\n\r\n        <HelpPageLeftBox>\r\n          <video autoPlay loop muted className=\"helpVideo\">\r\n            <source src={videoFaq} type=\"video/mp4\"></source>\r\n          </video>\r\n        </HelpPageLeftBox>\r\n        <HelpPageRightBox>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"80vh\",\r\n              overflowX: \"hidden\",\r\n              overflowY: \"scroll\",\r\n              padding: \"0 2rem\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <Button\r\n              className=\"mail\"\r\n              style={{\r\n                background: \"rgb(0, 180, 120)\",\r\n                color: \"#fff\",\r\n                width: \"30%\",\r\n                marginTop: \"2rem\",\r\n                marginBottom: \"1rem\",\r\n                overflow: \"hidden\",\r\n              }}\r\n              onClick={() => setOpenEmail(true)}\r\n              startIcon={<EmailIcon />}\r\n            >\r\n              Mail us\r\n            </Button>\r\n            <div className={classes.root}>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Change Password\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <Typography>Type your email:</Typography>\r\n                  <InputContainer>\r\n                    <input\r\n                      type=\"email\"\r\n                      required\r\n                      placeholder=\"Email...\"\r\n                      onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                    />\r\n                  </InputContainer>\r\n                  <Button\r\n                    disabled={loader}\r\n                    style={{\r\n                      background: \"rgb(0, 180, 120)\",\r\n                      color: \"#fff\",\r\n                      width: \"30%\",\r\n                    }}\r\n                    onClick={handlePasswordChange}\r\n                  >\r\n                    {loader ? \"Check Mail\" : \"Reset\"}\r\n                  </Button>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Personal Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Write the todo which you want to add then add a time to\r\n                    it.\r\n                    <br />\r\n                    2) You can all mark the todo completed by clicking on the\r\n                    checkbox in starting of every todo.\r\n                    <br />\r\n                    3) You can see completed todos and not completed todos in\r\n                    their respective sections.\r\n                    <br />\r\n                    4) A Donut chart is also visible at bottom left corner, It\r\n                    tell how much work is their and also show the percentage of\r\n                    work completed by you.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Team Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Create or Join a team, while creating make sure the you\r\n                    have unique team name.\r\n                    <br />\r\n                    2) Add todos to your team, the todo will get appear on every\r\n                    teammate page.\r\n                    <br />\r\n                    3) You can also assign you teammate's name to a particular\r\n                    todo.\r\n                    <br />\r\n                    4) You can also add images to any particular todo, by this\r\n                    you can explain the work more easily.\r\n                    <br />\r\n                    5) If the work is done mark it complete, this check will\r\n                    appear on every teammate page.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Discussion Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \" rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Select the team.\r\n                    <br />\r\n                    2) Start typing the message in th input box at bottom right.\r\n                    <br />\r\n                    3) Your messages can be seen by every member of that\r\n                    particular team.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Profile Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \" rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) First setup your profile.\r\n                    <br />\r\n                    2) On the right side you can select a team to get its all\r\n                    members details.\r\n                    <br />\r\n                    3) You can also endorse any group member once for their good\r\n                    work.\r\n                    <br />\r\n                    4) Your endorsements can be seen at the last of your profile\r\n                    in left.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Not able to see team todos\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Check your internet connection.\r\n                    <br />\r\n                    2) Talk to team leader, may be the team was deleted.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Raise an issue\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <Typography>To raise an issue please go to</Typography>\r\n\r\n                  <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                    https://github.com/Tushardeepak\r\n                  </a>\r\n\r\n                  <Typography>\r\n                    Create issue, give details and images.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Legal Rights\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <Typography>All rights of Slogger belong to</Typography>\r\n\r\n                  <a href=\"https://github.com/Tushardeepak\">\r\n                    https://github.com/Tushardeepak\r\n                  </a>\r\n\r\n                  <Typography>Feel free to contact/collaborate.</Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        </HelpPageRightBox>\r\n      </HelpPageContainer>\r\n      {openEmail && (\r\n        <EmailDialog\r\n          open={openEmail}\r\n          handleClose={handleClose}\r\n          setSent={setSent}\r\n        />\r\n      )}\r\n      {sent && (\r\n        <SnackBar\r\n          open={sent}\r\n          handleClose={() => setSent(false)}\r\n          text={\"Mail Sent, Thank You!\"}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HelpPage;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst HelpPageContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  overflow: hidden !important;\r\n`;\r\nconst HelpPageLeftBox = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  .helpVideo {\r\n    margin-top: 2rem;\r\n    object-fit: contain;\r\n    height: 80vh;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      display:none;\r\n  `}\r\n  }\r\n`;\r\nconst HelpPageRightBox = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden !important;\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      width: 100%;\r\n  `}\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    padding: \"1rem 0\";\r\n  }\r\n`;\r\nconst InputContainer = styled.div`\r\n  margin: 0.7rem 0;\r\n\r\n  input {\r\n    width: 90%;\r\n    background: rgb(0, 180, 120);\r\n    color: #fff;\r\n    outline: none;\r\n    border: none;\r\n    height: 2.5rem;\r\n    padding: 0 0.5rem;\r\n    font-size: 0.9rem;\r\n    border-radius: 3px;\r\n  }\r\n  input::placeholder {\r\n    color: #fff;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\EmailDialog.js",["292","293","294","295"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./style.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport { Fade, useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  const theme = useTheme();\r\n  return useMediaQuery(theme.breakpoints.down(\"sm\")) ? (\r\n    <Slide direction=\"left\" ref={ref} {...props} />\r\n  ) : (\r\n    <Fade direction=\"\" ref={ref} {...props} />\r\n  );\r\n});\r\n\r\nexport default function AddingTeamModal({ open, handleClose, setSent }) {\r\n  const [senderEmail, setSenderEmail] = useState(\"\");\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleSend = (e) => {\r\n    console.log(e);\r\n    e.preventDefault();\r\n    emailjs\r\n      .sendForm(\r\n        \"service_ulq5i1l\",\r\n        \"template_iaftte2\",\r\n        e.target,\r\n        \"user_cY9bhdeY9bLLxIaUdplFl\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n\r\n    e.target.reset();\r\n    setSent(true);\r\n    handleClose();\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      fullScreen={!isSmall}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-slide-title\" className=\"title\">\r\n        Mail us\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          <form\r\n            className=\"contact-form\"\r\n            onSubmit={handleSend}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              width: \"33rem\",\r\n            }}\r\n          >\r\n            <label>Email</label>\r\n            <input type=\"email\" name=\"email\" className=\"input\" />\r\n            <label>Message</label>\r\n            <textarea name=\"message\" className=\"input\" />\r\n            <div style={{ display: \"flex\" }}>\r\n              <button className=\"addButton\" onClick={() => handleClose()}>\r\n                Cancel\r\n              </button>\r\n              <input type=\"submit\" value=\"Send\" className=\"addButton\" />\r\n            </div>\r\n          </form>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\firebase.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\CustomTooltip.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\ImagesModal.js",["296","297"],"import React, { useEffect, useState } from \"react\";\r\nimport { AutoRotatingCarousel } from \"material-auto-rotating-carousel\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport \"./imagesModal.css\";\r\nimport DownloadImageModal from \"./DownloadImageModal\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nfunction ImagesModal({\r\n  handleOpen,\r\n  setHandleOpen,\r\n  imageList,\r\n  urlTeamName,\r\n  id,\r\n  setImageList,\r\n  todoText,\r\n  userName,\r\n  profileImage,\r\n  setTabValue,\r\n}) {\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const [openDownload, setOpenDownload] = useState(false);\r\n  const [link, setLink] = useState(\"\");\r\n  const [senderId, setSenderId] = useState(\"\");\r\n  const [imageId, setImageId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(imageList);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <AutoRotatingCarousel\r\n        open={handleOpen}\r\n        onClose={() => setHandleOpen(false)}\r\n        autoplay={false}\r\n        mobile={!isSmall}\r\n        style={{ position: \"absolute\" }}\r\n      >\r\n        {imageList?.map((images) => (\r\n          <Card\r\n            key={images.id}\r\n            style={{\r\n              height: isSmall ? \"97%\" : \"100%\",\r\n              overflowY: \"scroll\",\r\n              borderRadius: isSmall ? \"10px\" : 0,\r\n            }}\r\n          >\r\n            {!isSmall && (\r\n              <CancelIcon\r\n                style={{ margin: \"1rem\", color: \"grey\" }}\r\n                onClick={() => setHandleOpen(false)}\r\n              />\r\n            )}\r\n            <p\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                color: \"seagreen\",\r\n                margin: \"1rem 0 0 1rem\",\r\n              }}\r\n            >\r\n              <span style={{ fontSize: \"0.7rem\" }}>Uploaded by :</span>{\" \"}\r\n              {images.senderName}\r\n            </p>\r\n            <Divider style={{ margin: \"0.5rem 1rem 0 1rem\" }} />\r\n            <CardContent style={{ borderRadius: \"10px\" }}>\r\n              <img\r\n                src={images.todoImage}\r\n                style={{\r\n                  objectFit: \"contain\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  borderRadius: \"10px\",\r\n                  marginTop: isSmall ? 0 : \"5%\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  setImageId(images.id);\r\n                  setSenderId(images.senderId);\r\n                  setLink(images.todoImage);\r\n                  setOpenDownload(true);\r\n                }}\r\n                // onClick={() => window.open(`${images.todoImage}`, \"_blank\")}\r\n              />\r\n              <Divider style={{ margin: \"1rem 0 \" }} />\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n                style={{\r\n                  marginTop: \"1rem\",\r\n                  color: \"#019966\",\r\n                  margin: \"0rem 1rem 1rem 1rem\",\r\n                }}\r\n              >\r\n                {images.todoImageText}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </AutoRotatingCarousel>\r\n      {openDownload && (\r\n        <DownloadImageModal\r\n          open={openDownload}\r\n          handleClose={() => setOpenDownload(false)}\r\n          link={link}\r\n          senderId={senderId}\r\n          imageId={imageId}\r\n          urlTeamName={urlTeamName}\r\n          id={id}\r\n          imageList={imageList}\r\n          handleCloseImageModal={() => setHandleOpen(false)}\r\n          setImageList={setImageList}\r\n          todoText={todoText}\r\n          userName={userName}\r\n          profileImage={profileImage}\r\n          setTabValue={setTabValue}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagesModal;\r\n",["298","299"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\snackbar\\SnackBar.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\DownloadImageModal.js",["300","301","302","303"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Fade } from \"@material-ui/core\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport { db, storage } from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Fade direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DownloadImageModal({\r\n  open,\r\n  handleClose,\r\n  link,\r\n  senderId,\r\n  imageId,\r\n  urlTeamName,\r\n  id,\r\n  imageList,\r\n  handleCloseImageModal,\r\n  setImageList,\r\n  todoText,\r\n  userName,\r\n  profileImage,\r\n  setTabValue,\r\n}) {\r\n  const { currentUser } = useAuth();\r\n  const [sure, setSure] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [imageChatText, setImageChatText] = useState(\"\");\r\n\r\n  const handleDeleteImage = async () => {\r\n    var desertRef = storage.refFromURL(link);\r\n    desertRef\r\n      .delete()\r\n      .then(function () {\r\n        console.log(\"File deleted successfully\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    db.collection(\"teams\")\r\n      .doc(urlTeamName)\r\n      .collection(\"teamTodos\")\r\n      .doc(id)\r\n      .collection(\"teamTodoImages\")\r\n      .doc(imageId)\r\n      .delete();\r\n\r\n    let _list = [...imageList];\r\n    setImageList(_list.filter((img) => imageId !== img.id));\r\n    if (imageList.length === 1) {\r\n      handleCloseImageModal();\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const sentToDiscussion = () => {\r\n    if (imageChatText !== \"\") {\r\n      db.collection(\"teams\").doc(urlTeamName).collection(\"discussion\").add({\r\n        discussionText: imageChatText,\r\n        teamTodoText: todoText,\r\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        senderId: currentUser.uid,\r\n        senderProfileImage: profileImage,\r\n        senderName: userName,\r\n        discussionTime: new Date().toISOString(),\r\n        help: true,\r\n        teamTodoImage: link,\r\n      });\r\n      setTabValue(2);\r\n      handleClose();\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogContent style={{ color: \"#019966\" }}>Actions</DialogContent>\r\n        <DialogContent>\r\n          {currentUser.uid === senderId && !sure && (\r\n            <Button\r\n              endIcon={\r\n                <DeleteIcon\r\n                  style={{ color: \"#fff\", transform: \"scale(0.7)\" }}\r\n                />\r\n              }\r\n              className=\"uploadView\"\r\n              style={{\r\n                overflow: \"hidden\",\r\n                fontSize: \"0.7rem\",\r\n                height: \"1.5rem\",\r\n                color: \"#fff\",\r\n                backgroundColor: \"#019966\",\r\n                marginTop: \"1rem\",\r\n                marginRight: \"1rem\",\r\n              }}\r\n              onClick={() => setSure(true)}\r\n            >\r\n              Delete Image\r\n            </Button>\r\n          )}\r\n\r\n          {sure && (\r\n            <Button\r\n              className=\"uploadView\"\r\n              style={{\r\n                overflow: \"hidden\",\r\n                fontSize: \"0.7rem\",\r\n                height: \"1.5rem\",\r\n                color: \"#fff\",\r\n                backgroundColor: \"#019966\",\r\n                marginTop: \"1rem\",\r\n              }}\r\n              onClick={() => setSure(false)}\r\n            >\r\n              back\r\n            </Button>\r\n          )}\r\n          {sure && (\r\n            <Button\r\n              className=\"uploadView\"\r\n              style={{\r\n                overflow: \"hidden\",\r\n                fontSize: \"0.7rem\",\r\n                height: \"1.5rem\",\r\n                color: \"#fff\",\r\n                backgroundColor: \"#019966\",\r\n                marginTop: \"1rem\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n              onClick={handleDeleteImage}\r\n            >\r\n              sure ?\r\n            </Button>\r\n          )}\r\n\r\n          {!sure && (\r\n            <a href={link} target=\"_blank\" style={{ textDecoration: \"none\" }}>\r\n              <Button\r\n                endIcon={\r\n                  <OpenInNewIcon\r\n                    style={{ color: \"#fff\", transform: \"scale(0.7)\" }}\r\n                  />\r\n                }\r\n                className=\"uploadView\"\r\n                style={{\r\n                  overflow: \"hidden\",\r\n                  fontSize: \"0.7rem\",\r\n                  height: \"1.5rem\",\r\n                  color: \"#fff\",\r\n                  backgroundColor: \"#019966\",\r\n                  marginTop: \"1rem\",\r\n                }}\r\n              >\r\n                Open in new tab\r\n              </Button>\r\n            </a>\r\n          )}\r\n        </DialogContent>\r\n        <DialogContent style={{ color: \"#019966\" }}>\r\n          Ask in chat\r\n          {error && (\r\n            <p style={{ color: \"rgba(185, 5, 5, 0.7)\", fontSize: \"10px\" }}>\r\n              *Please add some description or title\r\n            </p>\r\n          )}\r\n          <textarea\r\n            defaultValue={imageChatText}\r\n            className=\"helperTextBox\"\r\n            placeholder=\"Add some description...\"\r\n            onChange={(e) => {\r\n              setError(false);\r\n              setImageChatText(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogContent style={{ display: \"flex\" }}>\r\n          <div style={{ flex: 1 }}></div>\r\n          <Button\r\n            className=\"uploadView\"\r\n            style={{\r\n              overflow: \"hidden\",\r\n              fontSize: \"0.7rem\",\r\n              height: \"1.5rem\",\r\n              color: \"#fff\",\r\n              backgroundColor: \"#019966\",\r\n              marginRight: \"0.5rem\",\r\n            }}\r\n            onClick={sentToDiscussion}\r\n          >\r\n            Ask\r\n          </Button>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\slogger\\Slogger.js",["304","305","306","307","308","309","310","311","312"],"//ASSETS\r\nimport homePageIcon from \"../../assets/images/homeBannerIcon.png\";\r\nimport homeBannerVideo from \"../../assets/videos/HomeBannerVideo.mp4\";\r\nimport ImportantDevicesRoundedIcon from \"@material-ui/icons/ImportantDevicesRounded\";\r\nimport EmojiFoodBeverageRoundedIcon from \"@material-ui/icons/EmojiFoodBeverageRounded\";\r\nimport TrackChangesRoundedIcon from \"@material-ui/icons/TrackChangesRounded\";\r\nimport MultilineChartRoundedIcon from \"@material-ui/icons/MultilineChartRounded\";\r\nimport DuoRoundedIcon from \"@material-ui/icons/DuoRounded\";\r\nimport LockRoundedIcon from \"@material-ui/icons/LockRounded\";\r\nimport personalTodoImg from \"../../assets/images/personalTodoImg.svg\";\r\nimport teamTodoImg from \"../../assets/images/teamTodoImg.svg\";\r\nimport discussionImg from \"../../assets/images/discussionImg.svg\";\r\nimport profileImg from \"../../assets/images/profileImg.svg\";\r\nimport meetImg from \"../../assets/images/meetImg.svg\";\r\n\r\n//Main\r\nimport React from \"react\";\r\nimport NavBar from \"../navBar/NavBar\";\r\nimport \"./style.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { Button, useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nfunction SloggerNew() {\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  React.useEffect(() => {\r\n    if (currentUser !== null) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"auto\",\r\n        fontFamily: \"Times New Roman\",\r\n        overflowX: \"hidden\",\r\n      }}\r\n    >\r\n      <NavBar page={0} />\r\n      <div className=\"banner\">\r\n        <video autoPlay loop muted className=\"video\">\r\n          <source src={homeBannerVideo} type=\"video/mp4\"></source>\r\n        </video>\r\n\r\n        <img src={homePageIcon} className=\"bannerImg\" />\r\n        <div className=\"bannerText\">\r\n          <h3>One stop solution for Work Management</h3>\r\n          <h3>and Team Management</h3>\r\n        </div>\r\n        <Button\r\n          className=\"bannerBtn\"\r\n          onClick={\r\n            currentUser != null\r\n              ? () => history.push(\"/home\")\r\n              : () => history.push(\"/signup\")\r\n          }\r\n        >\r\n          {currentUser != null ? \"Go to Dashboard\" : \"Get started\"}\r\n        </Button>\r\n        <svg\r\n          className=\"downSvgSlogger1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1440 320\"\r\n        >\r\n          <path\r\n            fill=\"#fff\"\r\n            fill-opacity=\"1\"\r\n            d=\"M0,224L24,208C48,192,96,160,144,165.3C192,171,240,213,288,224C336,235,384,213,432,218.7C480,224,528,256,576,266.7C624,277,672,267,720,256C768,245,816,235,864,234.7C912,235,960,245,1008,229.3C1056,213,1104,171,1152,165.3C1200,160,1248,192,1296,181.3C1344,171,1392,117,1416,90.7L1440,64L1440,320L1416,320C1392,320,1344,320,1296,320C1248,320,1200,320,1152,320C1104,320,1056,320,1008,320C960,320,912,320,864,320C816,320,768,320,720,320C672,320,624,320,576,320C528,320,480,320,432,320C384,320,336,320,288,320C240,320,192,320,144,320C96,320,48,320,24,320L0,320Z\"\r\n          ></path>\r\n        </svg>\r\n        <svg\r\n          className=\"downSvgSlogger2\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1440 320\"\r\n        >\r\n          <path\r\n            fill=\"#272142bd\"\r\n            fill-opacity=\"1\"\r\n            d=\"M0,224L24,208C48,192,96,160,144,165.3C192,171,240,213,288,224C336,235,384,213,432,218.7C480,224,528,256,576,266.7C624,277,672,267,720,256C768,245,816,235,864,234.7C912,235,960,245,1008,229.3C1056,213,1104,171,1152,165.3C1200,160,1248,192,1296,181.3C1344,171,1392,117,1416,90.7L1440,64L1440,320L1416,320C1392,320,1344,320,1296,320C1248,320,1200,320,1152,320C1104,320,1056,320,1008,320C960,320,912,320,864,320C816,320,768,320,720,320C672,320,624,320,576,320C528,320,480,320,432,320C384,320,336,320,288,320C240,320,192,320,144,320C96,320,48,320,24,320L0,320Z\"\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n      <div className=\"sloggerBuild\">\r\n        <h2 className=\"sloggerHeadingMain\">\r\n          Why to use\r\n          <span className=\"sloggerHeading\">SLOGGER</span>{\" \"}\r\n        </h2>\r\n        <div className=\"serviceBox\">\r\n          <div className=\"contentBox\">\r\n            <div className=\"iconBox\">\r\n              <EmojiFoodBeverageRoundedIcon className=\"icon\" />\r\n            </div>\r\n            <h2 className=\"contentHeading\">Easy to use</h2>\r\n            <p className=\"contentPara\">\r\n              With slogger you can do various activities to manage your team and\r\n              work with ease. No complex technologies are used.\r\n            </p>\r\n          </div>\r\n          <div className=\"contentBox\">\r\n            <div className=\"iconBox\">\r\n              <ImportantDevicesRoundedIcon className=\"icon\" />\r\n            </div>\r\n            <h2 className=\"contentHeading\">Access anywhere</h2>\r\n            <p className=\"contentPara\">\r\n              Download Slogger as an app in your mobile phone or on your\r\n              desktop. Install option will be shown in browsers.\r\n            </p>\r\n          </div>\r\n          <div className=\"contentBox\">\r\n            <div className=\"iconBox\">\r\n              <TrackChangesRoundedIcon className=\"icon\" />\r\n            </div>\r\n            <h2 className=\"contentHeading\">Stay focused</h2>\r\n            <p className=\"contentPara\">\r\n              As it run as an independent app, It helps you to stay focused on\r\n              your goals without being distracted by what's in the other tabs.\r\n            </p>\r\n          </div>\r\n          <div className=\"contentBox\">\r\n            <div className=\"iconBox\">\r\n              <MultilineChartRoundedIcon className=\"icon\" />\r\n            </div>\r\n            <h2 className=\"contentHeading\">Good analysis</h2>\r\n            <p className=\"contentPara\">\r\n              Slogger gives a graphical representation of your work, plus it\r\n              also gives schedular by which you can plan your future activities\r\n              effectively.\r\n            </p>\r\n          </div>\r\n          <div className=\"contentBox\">\r\n            <div className=\"iconBox\">\r\n              <DuoRoundedIcon className=\"icon\" />\r\n            </div>\r\n            <h2 className=\"contentHeading\">Fast meetings</h2>\r\n            <p className=\"contentPara\">\r\n              With Slogger you can create video/audio call meetings with your\r\n              team in just a click, that also with unlimited hours and\r\n              teammates.\r\n            </p>\r\n          </div>\r\n          <div className=\"contentBox\">\r\n            <div className=\"iconBox\">\r\n              <LockRoundedIcon className=\"icon\" />\r\n            </div>\r\n            <h2 className=\"contentHeading\">Fully secure</h2>\r\n            <p className=\"contentPara\">\r\n              All the files and messages are secured with google storage\r\n              securities. Its safe and reliable.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"screenHeading\">Workflow that just works</h2>\r\n      <h4 className=\"screenSubHeading\">Artistically Inspired</h4>\r\n      <div className=\"screenContainer\">\r\n        <div className=\"screenContentBox\">\r\n          <h3 className=\"screenContentSubHeading\">FOCUSED WORK</h3>\r\n          <h3 className=\"screenContentHeading\">Personal section</h3>\r\n          <h3 className=\"screenContentPara\">1) Make your own todo list</h3>\r\n          <h3 className=\"screenContentPara\">\r\n            2) Filter those which are completed\r\n          </h3>\r\n          <h3 className=\"screenContentPara\">\r\n            3) Get a visual representation of your work\r\n          </h3>\r\n          <h3 className=\"screenContentPara\">\r\n            4) Gives a schedular for planning future activities\r\n          </h3>\r\n        </div>\r\n        <img src={personalTodoImg} className=\"screenImg\" />\r\n      </div>\r\n      <div className=\"screenContainer\">\r\n        <div className=\"screenImgBox\">\r\n          {isSmall ? <img src={teamTodoImg} className=\"screenImg\" /> : \"\"}\r\n        </div>\r\n        <div className=\"screenContentBoxReverse\">\r\n          <h3 className=\"screenContentSubHeading\">EFFECTIVE MANAGEMENT</h3>\r\n          <h3 className=\"screenContentHeading\">Team section</h3>\r\n          <h3 className=\"screenContentPara\">1) Make your own teams</h3>\r\n          <h3 className=\"screenContentPara\">2) Join teams</h3>\r\n          <h3 className=\"screenContentPara\">3) Assign work to teammates</h3>\r\n          <h3 className=\"screenContentPara\">4) Check when the work is done</h3>\r\n          <h3 className=\"screenContentPara\">5) Add images to any work</h3>\r\n          <h3 className=\"screenContentPara\">6) Group video call meetings</h3>\r\n        </div>\r\n        {isSmall ? \"\" : <img src={teamTodoImg} className=\"screenImg\" />}\r\n      </div>\r\n      <div className=\"screenContainer\">\r\n        <div className=\"screenContentBox\">\r\n          <h3 className=\"screenContentSubHeading\">FAST SOLUTIONS</h3>\r\n          <h3 className=\"screenContentHeading\">Discussion section</h3>\r\n          <h3 className=\"screenContentPara\">1) Discuss with your teammates</h3>\r\n          <h3 className=\"screenContentPara\">\r\n            2) One discussion room for every team\r\n          </h3>\r\n          <h3 className=\"screenContentPara\">\r\n            3) Help other to solve their doubts\r\n          </h3>\r\n        </div>\r\n        <img src={discussionImg} className=\"screenImg\" />\r\n      </div>\r\n      <div className=\"screenContainer\">\r\n        <div className=\"screenImgBox\">\r\n          {isSmall ? <img src={profileImg} className=\"screenImg\" /> : \"\"}\r\n        </div>\r\n        <div className=\"screenContentBoxReverse\">\r\n          <h3 className=\"screenContentSubHeading\">BOOST CONFIDENCE</h3>\r\n          <h3 className=\"screenContentHeading\">Profile section</h3>\r\n          <h3 className=\"screenContentPara\">1) Build up your profile</h3>\r\n          <h3 className=\"screenContentPara\">\r\n            2) Add bio, skills and contact info\r\n          </h3>\r\n          <h3 className=\"screenContentPara\">\r\n            3) Get profile for other team members\r\n          </h3>\r\n          <h3 className=\"screenContentPara\">\r\n            4) Endorse them for their good work\r\n          </h3>\r\n        </div>\r\n        {isSmall ? \"\" : <img src={profileImg} className=\"screenImg\" />}\r\n      </div>\r\n      <div className=\"screenContainer\">\r\n        <div className=\"screenContentBox\">\r\n          <h3 className=\"screenContentSubHeading\">LIGHTING FAST</h3>\r\n          <h3 className=\"screenContentHeading\">SlogMeet</h3>\r\n          <h3 className=\"screenContentPara\">\r\n            1) High quality video/audio meetings\r\n          </h3>\r\n          <h3 className=\"screenContentPara\">2) Unlimited hours</h3>\r\n          <h3 className=\"screenContentPara\">3) Infinite number of teammates</h3>\r\n          <h3 className=\"screenContentPara\">3) No setup required</h3>\r\n        </div>\r\n        <img src={meetImg} className=\"screenImg\" />\r\n      </div>\r\n      <div className=\"footerContainer\">\r\n        <span\r\n          style={{ marginLeft: \"15%\", fontSize: \"1.125rem\", cursor: \"pointer\" }}\r\n        >\r\n          Questions?\r\n          <br />\r\n        </span>\r\n        <div className=\"footerColumn\">\r\n          <ul>\r\n            <li onClick={() => history.push(\"/help\")}>FAQ</li>\r\n            <li>\r\n              {\" \"}\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Relations\r\n              </a>\r\n            </li>\r\n            <li onClick={() => history.push(\"/help\")}>How to use</li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Help Center\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Collaborate\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Terms of Use\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Contact Us\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Amount\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Complain\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Privacy\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Media Center\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Storage\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Cookie Preferences\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                Legal Notices\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SloggerNew;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarTeams.js",["313","314","315","316"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport styled from \"styled-components\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport TeamCard from \"../TeamCard\";\r\nimport AddingTeamModal from \"../Dialog\";\r\nimport SnackBar from \"../../snackbar/SnackBar\";\r\nimport { db } from \"../../../firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    color: \"#fff\",\r\n    background: \"rgba(0, 145, 96, 0.9)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SidebarTeams({ UrlTeamName }) {\r\n  const [make, setMake] = useState(false);\r\n  const [openMaker, setOpenMaker] = useState(false);\r\n  const [openMakeSnackBar, setOpenMakeSnackBar] = useState(false);\r\n  const [openJoinSnackBar, setOpenJoinSnackBar] = useState(false);\r\n  const [openDeleteSnackBar, setOpenDeleteSnackBar] = useState(false);\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const [currentTeamName, setCurrentTeamName] = useState(\"\");\r\n  const [teams, setTeams] = useState([]);\r\n  const [joinedTeams, setJoinedTeams] = useState([]);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const history = useHistory();\r\n  const { currentUser, logOut } = useAuth();\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickMakeTeam = () => {\r\n    setMake(true);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleClickJoinTeam = () => {\r\n    setMake(false);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleCloseMaker = () => {\r\n    setOpenMaker(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"userTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _teams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n          admin: doc.data().admin,\r\n        }));\r\n        console.log(_teams);\r\n        setTeams(_teams);\r\n      });\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _joinedTeams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n        }));\r\n        console.log(_joinedTeams);\r\n        setJoinedTeams(_joinedTeams);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addItemsTeams\" onClick={handleClickOpen}>\r\n        {UrlTeamName === undefined ? \"Select Team\" : `Team: ${UrlTeamName}`}\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            {/* <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/help\")}\r\n            >\r\n              Help\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <TeamTodoLeftContainer>\r\n          <TeamTodoLeftLeftBox>\r\n            <Button\r\n              className=\"addButton1\"\r\n              onClick={() => handleClickMakeTeam()}\r\n            >\r\n              Make a team\r\n            </Button>\r\n            {/* <h3 style={{ overflow: \"hidden\" }}>My Teams</h3> */}\r\n            <MyTeamContainer>\r\n              {teams.map((team) => (\r\n                <TeamCard\r\n                  sidebarClose={handleClose}\r\n                  key={team.id}\r\n                  id={team.id}\r\n                  teamName={team.teamName}\r\n                  UrlTeamName={UrlTeamName}\r\n                  deleteBtn={true}\r\n                  setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n                  setCurrentTeamName={setCurrentTeamName}\r\n                ></TeamCard>\r\n              ))}\r\n            </MyTeamContainer>\r\n          </TeamTodoLeftLeftBox>\r\n          <TeamTodoLeftRightBox>\r\n            <Button\r\n              className=\"addButton1\"\r\n              onClick={() => handleClickJoinTeam()}\r\n            >\r\n              Join a team\r\n            </Button>\r\n            {/* <h3 style={{ overflow: \"hidden\" }}>Joined Teams</h3> */}\r\n            <MyTeamContainer>\r\n              {joinedTeams.map((team) => (\r\n                <TeamCard\r\n                  sidebarClose={handleClose}\r\n                  key={team.id}\r\n                  id={team.id}\r\n                  teamName={team.teamName}\r\n                  UrlTeamName={UrlTeamName}\r\n                  deleteBtn={true}\r\n                  setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n                  setCurrentTeamName={setCurrentTeamName}\r\n                ></TeamCard>\r\n              ))}\r\n            </MyTeamContainer>\r\n          </TeamTodoLeftRightBox>\r\n        </TeamTodoLeftContainer>\r\n        {openMaker && (\r\n          <AddingTeamModal\r\n            open={openMaker}\r\n            handleClose={handleCloseMaker}\r\n            make={make}\r\n            setCurrentTeamName={setCurrentTeamName}\r\n            openSnackbar={make ? setOpenMakeSnackBar : setOpenJoinSnackBar}\r\n          />\r\n        )}\r\n        {openMakeSnackBar && (\r\n          <SnackBar\r\n            open={openMakeSnackBar}\r\n            handleClose={() => setOpenMakeSnackBar(false)}\r\n            text={`Team ${currentTeamName} Created`}\r\n          />\r\n        )}\r\n        {openJoinSnackBar && (\r\n          <SnackBar\r\n            open={openJoinSnackBar}\r\n            handleClose={() => setOpenJoinSnackBar(false)}\r\n            text={`Welcome to team ${currentTeamName}`}\r\n          />\r\n        )}\r\n        {openDeleteSnackBar && (\r\n          <SnackBar\r\n            open={openDeleteSnackBar}\r\n            handleClose={() => openDeleteSnackBar(false)}\r\n            text={`Team ${currentTeamName} deleted`}\r\n          />\r\n        )}\r\n        {openSnack && (\r\n          <SnackBar\r\n            open={openSnack}\r\n            handleClose={() => setOpenSnack(false)}\r\n            text={\"Uploading...\"}\r\n            material={true}\r\n          />\r\n        )}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TeamTodoLeftContainer = styled.div`\r\n  flex: 1;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst TeamTodoLeftLeftBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    margin-left: 0;\r\n    overflow: hidden;\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n  }\r\n`;\r\nconst MyTeamContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: scroll !important;\r\n`;\r\n\r\nconst TeamTodoLeftRightBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    margin-left: 0;\r\n    overflow: hidden;\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\profile\\MemberCard.js",["317","318"],"import { Avatar, Button, Paper } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"./member.css\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nfunction MemberCard({ id, name, email, profileImage }) {\r\n  const [member, setMember] = useState({});\r\n  const [skillList, setSkillList] = useState([]);\r\n  const [openEndorsement, setOpenEndorsement] = useState(false);\r\n  const [endorsementGiven, setEndorsementGiven] = useState(\"\");\r\n  const [endorsementList, setEndorsementList] = useState([]);\r\n  const { currentUser } = useAuth();\r\n\r\n  const handleSubmit = () => {\r\n    if (endorsementGiven !== \"\") {\r\n      db.collection(\"users\")\r\n        .doc(id)\r\n        .collection(\"endorsement\")\r\n        .doc(currentUser.uid)\r\n        .set({\r\n          GiverName: name,\r\n          GiverEmail: email,\r\n          GiverId: currentUser.uid,\r\n          GiverEndorsement: endorsementGiven,\r\n          GiverProfileImage: profileImage,\r\n        });\r\n      setEndorsementGiven(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    db.collection(\"users\")\r\n      .doc(id)\r\n      .collection(\"endorsement\")\r\n      .doc(currentUser.uid)\r\n      .delete();\r\n  };\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(id)\r\n      .collection(\"profile\")\r\n      .onSnapshot((snapshot) => {\r\n        const memberDetails = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n          email: doc.data().email,\r\n          profileImage: doc.data().profileImage,\r\n          skills: doc.data().skills,\r\n          contact: doc.data().contact,\r\n          facebook: doc.data().facebook,\r\n          instagram: doc.data().instagram,\r\n          linkedin: doc.data().linkedin,\r\n          github: doc.data().github,\r\n          bio: doc.data().bio,\r\n        }));\r\n        setSkillList(memberDetails[0].skills.split(\",\"));\r\n        setMember(memberDetails[0]);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(id)\r\n      .collection(\"endorsement\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          profileImage: doc.data().GiverProfileImage,\r\n          name: doc.data().GiverName,\r\n          email: doc.data().GiverEmail,\r\n          endorsement: doc.data().GiverEndorsement,\r\n          GiverId: doc.data().GiverId,\r\n        }));\r\n        console.log(list);\r\n        setEndorsementList(list);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Paper elevation={3} className=\"memberContainer\">\r\n      <div className=\"memberTopContainer\">\r\n        <div className=\"memberCircle\">\r\n          <Avatar\r\n            className=\"memberProfileImage\"\r\n            alt={member.name}\r\n            src={member.profileImage}\r\n          />\r\n        </div>\r\n        <div className=\"memberNameContainer\">\r\n          <p>\r\n            <PersonIcon className=\"memberIcon\" />\r\n            {member.name}\r\n          </p>\r\n          <p>\r\n            <EmailIcon className=\"memberIcon\" />\r\n            {member.email}\r\n          </p>\r\n          {member.contact !== \"NoContact\" && (\r\n            <p>\r\n              <CallIcon className=\"memberIcon\" />\r\n\r\n              {member.contact}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"memberLinkContainer\">\r\n          {member.facebook !== \"NoLink\" ? (\r\n            <a href={member.facebook}>\r\n              <FacebookIcon className=\"memberIcon\" />\r\n            </a>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {member.instagram !== \"NoLink\" ? (\r\n            <a href={member.instagram}>\r\n              <InstagramIcon className=\"memberIcon\" />\r\n            </a>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {member.github !== \"NoLink\" ? (\r\n            <a href={member.github}>\r\n              <GitHubIcon className=\"memberIcon\" />\r\n            </a>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {member.linkedin !== \"NoLink\" ? (\r\n            <a href={member.linkedin}>\r\n              <LinkedInIcon className=\"memberIcon\" />\r\n            </a>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      {!openEndorsement ? (\r\n        <>\r\n          {skillList[0] !== \"NoSkill\" && (\r\n            <div className=\"memberSkillContainer\">\r\n              {skillList?.map((skill) => (\r\n                <div className=\"skill\">{skill}</div>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"memberBioContainer\">\r\n            {member.bio !== \"NoBio\" && <p>{member.bio}</p>}\r\n          </div>\r\n          <div className=\"endorsementBtnContainer\">\r\n            <div className=\"endorsementBtnSpaceBox\"></div>\r\n            <CustomTooltip title=\"Endorsements\" arrow placement=\"left\">\r\n              <StarsIcon\r\n                className=\"endorsementBtn\"\r\n                onClick={() => setOpenEndorsement(true)}\r\n              />\r\n            </CustomTooltip>\r\n          </div>{\" \"}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"endorsementBtnContainer\">\r\n            <div className=\"endorsementBtnSpaceBox\"></div>\r\n            <CustomTooltip title=\"Close\" arrow placement=\"left\">\r\n              <CancelIcon\r\n                className=\"endorsementBtn\"\r\n                onClick={() => setOpenEndorsement(false)}\r\n              />\r\n            </CustomTooltip>\r\n          </div>\r\n          <div className=\"endorsementContainer\">\r\n            <div className=\"endorsementInputContainer\">\r\n              <textarea\r\n                value={endorsementGiven}\r\n                onChange={(e) => setEndorsementGiven(e.target.value)}\r\n                className=\"endorsementTextBox\"\r\n                placeholder=\"Write...\"\r\n              ></textarea>\r\n\r\n              <Button\r\n                className=\"endorsementSendBtn\"\r\n                onClick={() => handleSubmit()}\r\n              >\r\n                Send\r\n              </Button>\r\n            </div>\r\n            {endorsementList?.map((data) => (\r\n              <Paper elevation={3} className=\"EndContainer\">\r\n                <div className=\"EndTopContainer\">\r\n                  <div className=\"EndCircle\">\r\n                    <Avatar\r\n                      className=\"EndProfileImage\"\r\n                      alt={data.name}\r\n                      src={data.profileImage}\r\n                    />\r\n                  </div>\r\n                  <div className=\"EndNameContainer\">\r\n                    <p>\r\n                      <PersonIcon className=\"EndIcon\" />\r\n                      {data.name}\r\n                    </p>\r\n                    <p>\r\n                      <EmailIcon className=\"EndIcon\" />\r\n                      {data.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"EndLinkContainer\">\r\n                    {data.GiverId === currentUser.uid ? (\r\n                      <DeleteIcon\r\n                        className=\"memberIcon\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => handleDelete()}\r\n                      />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"EndEndContainer\">\r\n                  <p>{data.endorsement}</p>\r\n                </div>\r\n              </Paper>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default MemberCard;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\auth\\SignUp.js",["319","320","321","322","323","324","325"],"import { Button, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./style.css\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { db } from \"../../firebase\";\r\nimport signUpVideo from \"../../assets/videos/Gaulois.mp4\";\r\nimport signUpImage from \"../../assets/images/signUpMainLogo.png\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport signUpLoader from \"../../assets/images/signUpLoader.gif\";\r\n\r\nfunction SignUp() {\r\n  const [authToggle, setAuthToggle] = useState(false);\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [passwordVisibility, setPasswordVisibility] = useState(\"password\");\r\n  const [email, setEmail] = useState(\"\");\r\n  //const [firstName, setFirstName] = useState(\"\");\r\n  //const [lastName, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const { signUp, signIn, currentUser } = useAuth();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleChange = (set, value) => {\r\n    set(value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleSignUp = async () => {\r\n    if (\r\n      email === \"\" ||\r\n      password.length < 6 ||\r\n      // firstName === \"\" ||\r\n      confirmPassword.length < 6 ||\r\n      password !== confirmPassword\r\n    ) {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        const USER = await signUp(email, password);\r\n        db.collection(\"users\").doc(USER?.uid).collection(\"profile\").add({\r\n          email: email,\r\n          // firstName: firstName,\r\n          //lastName: lastName,\r\n        });\r\n        setLoader(false);\r\n        history.push(\"/home\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    if (email === \"\" || password === \"\") {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        await signIn(email, password);\r\n        history.push(\"/home\");\r\n        setLoader(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoader(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    const _visibility = !visibility;\r\n    setVisibility(_visibility);\r\n    setPasswordVisibility(_visibility ? \"text\" : \"password\");\r\n  };\r\n\r\n  const handleAuthToggle = () => {\r\n    setAuthToggle(!authToggle);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n    setError(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (currentUser !== null) {\r\n      history.push(\"/home\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      {loader ? (\r\n        <div className=\"loaderContainer\">\r\n          <img className=\"signUpLoader\" src={signUpLoader} />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <video autoPlay loop muted className=\"signUpVideo\">\r\n        <source src={signUpVideo} type=\"video/mp4\"></source>\r\n      </video>\r\n      <Alaric>\r\n        <h1>\r\n          HELLO, <br />I AM <span className=\"highlight\">ALARIC </span>\r\n          <br />\r\n          WELCOME TO <span className=\"highlight\">SLOGGER </span>\r\n        </h1>\r\n      </Alaric>\r\n      {authToggle ? (\r\n        <SignUpBox>\r\n          <SignUpForm>\r\n            {/* <img src={signUpImage} /> */}\r\n            <h2>SLOGGER</h2>\r\n            <div className=\"signUpFormBottom\">\r\n              <CustomTooltip\r\n                title=\"Alaric : Enter your email.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <AccountBoxIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric : Password please, Hope you remember.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    autocomplete=\"new-password\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) => handleChange(setPassword, e.target.value)}\r\n                  ></input>\r\n                  {visibility ? (\r\n                    <VisibilityIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOffIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CustomTooltip>\r\n\r\n              <Button\r\n                style={{\r\n                  width: \"60%\",\r\n                  marginTop: \"1rem\",\r\n                  color: \"#fff\",\r\n                  background: \"rgb(5, 185, 125)\",\r\n                }}\r\n                onClick={() => handleSignIn()}\r\n              >\r\n                Let's Slog\r\n              </Button>\r\n\r\n              {error ? (\r\n                <p\r\n                  style={{\r\n                    color: \"red\",\r\n                    padding: \"0.5rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Alaric: Please fill form correctly.\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </SignUpForm>\r\n          <div className=\"footer\">\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Not a Slogger?{\" \"}\r\n              <span\r\n                style={{ color: \"rgb(0, 128, 85)\", cursor: \"pointer\" }}\r\n                onClick={() => handleAuthToggle()}\r\n              >\r\n                Register\r\n              </span>\r\n            </p>\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Need Help?\r\n            </p>\r\n          </div>\r\n        </SignUpBox>\r\n      ) : (\r\n        <SignUpBox>\r\n          <SignUpForm>\r\n            {/* <img src={signUpImage} /> */}\r\n            <h2>SLOGGER</h2>\r\n            <div className=\"signUpFormBottom\">\r\n              {/* <div className=\"inputFieldSignUp\">\r\n                <CustomTooltip\r\n                  title=\"Alaric: What's your first name?\"\r\n                  arrow\r\n                  placement=\"top\"\r\n                >\r\n                  <div\r\n                    className=\"inputFieldSignUp\"\r\n                    style={{ background: \"none\" }}\r\n                  >\r\n                    <ArrowForwardIosIcon className=\"EmailAccount shortScreen\" />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={firstName}\r\n                      placeholder=\"First Name\"\r\n                      autocomplete=\"new-password\"\r\n                      className=\"firstName\"\r\n                      className=\"inputSignUp\"\r\n                      onChange={(e) =>\r\n                        handleChange(setFirstName, e.target.value)\r\n                      }\r\n                    ></input>\r\n                  </div>\r\n                </CustomTooltip>\r\n                <CustomTooltip title=\"Alaric: Last name?\" arrow placement=\"top\">\r\n                  <div\r\n                    className=\"inputFieldSignUp\"\r\n                    style={{ background: \"none\" }}\r\n                  >\r\n                    <ArrowForwardIosIcon className=\"EmailAccount shortScreen\" />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={lastName}\r\n                      placeholder=\"Last Name\"\r\n                      autocomplete=\"new-password\"\r\n                      className=\"firstName\"\r\n                      className=\"inputSignUp\"\r\n                      onChange={(e) =>\r\n                        handleChange(setLastName, e.target.value)\r\n                      }\r\n                    ></input>\r\n                  </div>\r\n                </CustomTooltip>\r\n              </div> */}\r\n              <CustomTooltip\r\n                title=\"Alaric: Enter a valid email, It's good for future.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <AccountBoxIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric: Make sure your password is at least 6 letters.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    className=\"inputSignUp\"\r\n                    autocomplete=\"new-password\"\r\n                    onChange={(e) => handleChange(setPassword, e.target.value)}\r\n                  ></input>\r\n                  {visibility ? (\r\n                    <VisibilityIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOffIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric: Make sure to write same password.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Confirm Password\"\r\n                    value={confirmPassword}\r\n                    autoComplete=\"off\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) =>\r\n                      handleChange(setConfirmPassword, e.target.value)\r\n                    }\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n\r\n              <Button\r\n                style={{\r\n                  width: \"60%\",\r\n                  marginTop: \"1rem\",\r\n                  color: \"#fff\",\r\n                  background: \"rgb(5, 185, 125)\",\r\n                }}\r\n                onClick={() => handleSignUp()}\r\n              >\r\n                Register\r\n              </Button>\r\n\r\n              {error ? (\r\n                <p\r\n                  style={{\r\n                    color: \"red\",\r\n                    padding: \"0.5rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Alaric: Please give a valid email and min 6 digit password\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </SignUpForm>\r\n          <div className=\"footer\">\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Already a Slogger?{\" \"}\r\n              <span\r\n                style={{ color: \"rgb(0, 128, 85)\", cursor: \"pointer\" }}\r\n                onClick={() => handleAuthToggle()}\r\n              >\r\n                Sign In\r\n              </span>\r\n            </p>\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Need Help?\r\n            </p>\r\n          </div>\r\n        </SignUpBox>\r\n      )}\r\n    </SignUpContainer>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst SignUpContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  .loaderContainer {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: #fefcfe;\r\n    z-index: 1000;\r\n    opacity: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .signUpLoader {\r\n    object-fit: contain;\r\n    transform: scale(0.6);\r\n  }\r\n`;\r\n\r\nconst Alaric = styled.div`\r\n  position: absolute;\r\n  left: 1rem;\r\n  top: 20%;\r\n  background: none;\r\n  height: 28rem;\r\n  width: 35vw;\r\n  min-width: 10rem;\r\n  padding-left: 2rem;\r\n  align-items: center;\r\n  font-size: 2.1vw;\r\n  color: rgba(0, 128, 85, 0.568);\r\n  font-family: \"Bebas Neue\", cursive;\r\n  letter-spacing: 0.2rem;\r\n\r\n  ${customMedia.lessThan(\"mdDesktop\")`\r\n      display:none;\r\n    `};\r\n\r\n  .highlight {\r\n    color: rgb(0, 128, 85) !important;\r\n  }\r\n`;\r\n\r\nconst SignUpBox = styled.div`\r\n  height: 100vh;\r\n  width: 43vw;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  right: 0;\r\n  top: 0;\r\n  ${customMedia.lessThan(\"lgDesktop\")`\r\n     width: 33rem;\r\n    `};\r\n  ${customMedia.lessThan(\"tablet\")`\r\n      width: 28rem;\r\n      \r\n    `};\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      width: 100%;\r\n      \r\n    `};\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .footer {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n   font-size:10px;\r\n   bottom:8rem !important;\r\n   width:100%;\r\n   flex-direction:column;\r\n   line-height:2rem;\r\n    `};\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      bottom:2rem !important;\r\n      line-height:1rem;\r\n    `};\r\n  }\r\n`;\r\n\r\nconst SignUpForm = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 35vw;\r\n  /* box-shadow: 13px 13px 20px rgba(0, 128, 85, 0.164),\r\n    inset -3px -3px 10px rgba(0, 128, 85, 0.459); */\r\n\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  ${customMedia.lessThan(\"tablet\")`\r\n  margin: 40px auto;\r\n   width:  calc(50vw + 70px);\r\n   height: 90vh;\r\n    `};\r\n\r\n  img {\r\n    position: absolute;\r\n    height: 6rem;\r\n    width: 60%;\r\n    margin: 1rem 2rem;\r\n    margin-top: 2rem;\r\n    object-fit: contain;\r\n  }\r\n  h2 {\r\n    font-size: 3rem;\r\n    margin-top: 3rem;\r\n    color: #008055;\r\n    font-family: \"Shadows Into Light\", cursive;\r\n  }\r\n\r\n  .signUpFormBottom {\r\n    position: absolute;\r\n    margin-top: 7rem;\r\n    width: 100%;\r\n    height: 75vh;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .inputFieldSignUp {\r\n    width: 90%;\r\n    height: 1.5rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      padding: 0.5rem 1rem;\r\n      height: 1.7rem;\r\n    `};\r\n  }\r\n  .inputSignUp {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem !important;\r\n    flex: 0.9;\r\n  }\r\n  .inputSignUp::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem !important;\r\n  }\r\n  .EmailAccount {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem !important;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n  }\r\n  .inputSignUp {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:12px !important;\r\n    `};\r\n  }\r\n  .inputSignUp::placeholder {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:12px !important;\r\n    `};\r\n  }\r\n  .shortScreen {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n     transform:scale(1.5);\r\n    `};\r\n  }\r\n  .password {\r\n    flex: 0.8;\r\n  }\r\n`;\r\n",["326","327"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\navBar\\NavBar.js",["328","329"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\SlogPage.js",["330","331","332","333","334","335","336","337","338","339"],"import {\r\n  Button,\r\n  useMediaQuery,\r\n  useTheme,\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport newsPhoto from \"../../assets/images/signUpMainLogo.png\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport \"./style.css\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n    color: \"rgb(2, 95, 64)\",\r\n    background: \"rgba(4, 219, 148)\",\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: green,\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: green,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={1}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"100%\",\r\n  },\r\n  AppBar: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none\",\r\n    color: \"#000\",\r\n    marginTop: \"-1rem\",\r\n    paddingTop: \"0.5rem\",\r\n  },\r\n  Tabs: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"rgb(5, 185, 125)\",\r\n    height: 3,\r\n    borderRadius: \"7px\",\r\n    width: \"10.2rem\",\r\n  },\r\n  label: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"0.8rem\",\r\n    // lineHeight: \"2.3rem\",\r\n    color: \"#565656\",\r\n    textTransform: \"uppercase\",\r\n    // padding: \"1.8rem 4.2rem\",\r\n    padding: \"0.3rem\",\r\n  },\r\n  flexContainer: {\r\n    borderBottom: \"2px solid rgba(196, 196, 196, 0.5)\",\r\n  },\r\n}));\r\n\r\nfunction SlogPage() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [newsList, setNewsList] = useState([]);\r\n  const [searchedLocation, setSearchedLocation] = useState({});\r\n  const [time, setTime] = useState(0);\r\n  const [timeOn, setTimeOn] = useState(false);\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSource = (x) => {\r\n    console.log(x);\r\n    handleClose();\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSubmitEnterWeather = async (event) => {\r\n    if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n      fetch(`\r\n      http://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&APPID=a1cefd4ba7c137e4c484e6a95d51aebe`)\r\n        .then((res) => res.json())\r\n        .then((data) => setSearchedLocation(data))\r\n        .then((data) => console.log(data));\r\n\r\n      setLocation(\"\");\r\n\r\n      db.collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"location\")\r\n        .onSnapshot((snapshot) => {\r\n          const loc = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n          }));\r\n          console.log(loc);\r\n\r\n          db.collection(\"users\")\r\n            .doc(currentUser.uid)\r\n            .collection(\"location\")\r\n            .doc(loc[0].id)\r\n            .set(\r\n              {\r\n                userLocation: location,\r\n              },\r\n              { merge: true }\r\n            );\r\n        });\r\n    }\r\n  };\r\n\r\n  const getWeather = async () => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"location\")\r\n      .onSnapshot((snapshot) => {\r\n        const loc = snapshot.docs.map((doc) => ({\r\n          l: doc.data().userLocation,\r\n        }));\r\n        console.log(loc);\r\n\r\n        fetch(`\r\n        http://api.openweathermap.org/data/2.5/weather?q=${loc[0]?.l}&units=metric&APPID=a1cefd4ba7c137e4c484e6a95d51aebe`)\r\n          .then((res) => res.json())\r\n          .then((data) => setSearchedLocation(data))\r\n          .then((data) => console.log(data));\r\n\r\n        setLocation(\"\");\r\n      });\r\n  };\r\n\r\n  const handleSubmitEnter = async (event) => {\r\n    if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (searchTerm === \"\") {\r\n      getNews();\r\n    } else {\r\n      fetch(`\r\n      https://newsapi.org/v2/everything?q=${searchTerm}&apiKey=5d28c193ee5846a3a06ba7b1ceb2f3ab`)\r\n        .then((res) => res.json())\r\n        .then((data) => setNewsList(data?.articles))\r\n        .then((data) => console.log(data?.articles));\r\n\r\n      setSearchTerm(\"\");\r\n    }\r\n  };\r\n\r\n  const getNews = async () => {\r\n    fetch(`\r\n    https://newsapi.org/v2/top-headlines?country=in&pageSize=100&apiKey=5d28c193ee5846a3a06ba7b1ceb2f3ab`)\r\n      .then((res) => res.json())\r\n      .then((data) => setNewsList(data?.articles))\r\n      .then((data) => console.log(data?.articles));\r\n\r\n    setSearchTerm(\"\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getNews();\r\n    getWeather();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    let interval = null;\r\n    if (timeOn) {\r\n      interval = setInterval(() => {\r\n        setTime((prevTime) => prevTime + 10);\r\n      }, 10);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [timeOn]);\r\n\r\n  return !isSmall ? (\r\n    <div>\r\n      <AppBar className={classes.AppBar} position=\"static\">\r\n        <Tabs\r\n          classes={{\r\n            indicator: classes.indicator,\r\n            flexContainer: classes.flexContainer,\r\n          }}\r\n          variant=\"fullWidth\"\r\n          scrollButtons=\"auto\"\r\n          className={classes.Tabs}\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <Tab\r\n            className={classes.label}\r\n            label=\"NEWS / SEARCH\"\r\n            {...a11yProps(0)}\r\n          />\r\n          <Tab\r\n            className={classes.label}\r\n            label=\"WEATHER / SW\"\r\n            {...a11yProps(1)}\r\n          />\r\n        </Tabs>\r\n        <TabPanel\r\n          value={value}\r\n          index={0}\r\n          style={{ width: \"100%\", overflow: \"hidden\", marginBottom: \"1.5rem\" }}\r\n        >\r\n          <div\r\n            style={{ width: \"100%\", height: \"65vh\", overflow: \"hidden\" }}\r\n            className=\"slogPageRes\"\r\n          >\r\n            <SearchContainer>\r\n              <input\r\n                value={searchTerm}\r\n                type=\"text\"\r\n                style={{\r\n                  flex: \"0.7\",\r\n                  border: \"none\",\r\n                  background: \"none\",\r\n                  padding: \"0 0.5rem\",\r\n                  height: \"2rem\",\r\n                  outline: \"none\",\r\n                  borderBottom: \"2px solid rgb(5, 185, 125)\",\r\n                  margin: \"0 0.5rem\",\r\n                  color: \"rgb(3, 185, 124)\",\r\n                  fontSize: \"1rem\",\r\n                }}\r\n                onKeyDown={(e) => handleSubmitEnter(e)}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                placeholder=\"Search anything...\"\r\n              />\r\n              <Button\r\n                style={{\r\n                  background: \"rgb(5, 185, 125)\",\r\n                  flex: \"0.3\",\r\n                  color: \"#fff\",\r\n                  height: \"2rem\",\r\n                  marginRight: \"0.5rem\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n                onClick={handleSearch}\r\n              >\r\n                Search\r\n              </Button>\r\n            </SearchContainer>\r\n            <NewsContainer style={{ padding: 0, margin: 0 }}>\r\n              {newsList?.map((news) => (\r\n                <NewsBox>\r\n                  <img src={news.urlToImage ? news.urlToImage : newsPhoto} />\r\n                  <p>{news.title}</p>\r\n                  <a\r\n                    href={news.url}\r\n                    target=\"_blank\"\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"rgb(5, 185, 125, 0.55)\",\r\n                        color: \"#fff\",\r\n                        width: \"100%\",\r\n                      }}\r\n                    >\r\n                      read more\r\n                    </Button>\r\n                  </a>\r\n                </NewsBox>\r\n              ))}\r\n              <div style={{ height: \"5rem\", width: \"100%\" }}></div>\r\n            </NewsContainer>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel\r\n          value={value}\r\n          index={1}\r\n          style={{ width: \"100%\", overflow: \"hidden\", marginBottom: \"1.5rem\" }}\r\n        >\r\n          <div\r\n            style={{ width: \"100%\", height: \"65vh\", overflow: \"hidden\" }}\r\n            className=\"slogPageRes\"\r\n          >\r\n            <WeatherContainer>\r\n              <SearchContainer\r\n                style={{\r\n                  width: \"70%\",\r\n                  height: \"2rem\",\r\n                  background: \"none\",\r\n                }}\r\n              >\r\n                <input\r\n                  value={location}\r\n                  type=\"text\"\r\n                  style={{\r\n                    flex: \"1\",\r\n                    border: \"none\",\r\n                    background: \"none\",\r\n                    padding: \"0 0.5rem\",\r\n                    height: \"1rem\",\r\n                    outline: \"none\",\r\n                    borderBottom: \"2px solid rgb(5, 185, 125)\",\r\n                    margin: \"0 0.5rem\",\r\n                    color: \"rgb(3, 185, 124)\",\r\n                    fontSize: \"0.7rem\",\r\n                  }}\r\n                  onKeyDown={(e) => handleSubmitEnterWeather(e)}\r\n                  onChange={(e) => setLocation(e.target.value)}\r\n                  placeholder=\"Type city and press enter...\"\r\n                />\r\n              </SearchContainer>\r\n              <h2\r\n                style={{ color: \"rgb(18, 107, 77)\", fontFamily: \"sans-serif\" }}\r\n              >\r\n                {searchedLocation.name},{searchedLocation.sys?.country}\r\n              </h2>\r\n              <div\r\n                style={{\r\n                  margin: \"1rem 0\",\r\n                  height: \"3rem\",\r\n                  width: \"7rem\",\r\n                  background: \"rgb(3, 148, 99)\",\r\n                  borderRadius: \"10px\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  borderBottom: \"3px solid rgb(18, 107, 77)\",\r\n                  borderRight: \"3px solid rgb(18, 107, 77)\",\r\n                }}\r\n              >\r\n                <h1 style={{ color: \"#fff\", fontFamily: \"sans-serif\" }}>\r\n                  {Math.round(searchedLocation.main?.temp)}\r\n                  <sup>o</sup>C\r\n                </h1>\r\n              </div>\r\n              <h4\r\n                style={{ color: \"rgb(3, 148, 99)\", fontFamily: \"sans-serif\" }}\r\n              >\r\n                {`Feels like: ${searchedLocation.main?.feels_like}`}\r\n                <sup>o</sup>C\r\n              </h4>\r\n              <h4\r\n                style={{\r\n                  color: \"rgb(3, 148, 99)\",\r\n                  fontFamily: \"sans-serif\",\r\n                  marginTop: \"1rem\",\r\n                }}\r\n              >\r\n                {searchedLocation?.weather\r\n                  ? searchedLocation?.weather[0].description?.toUpperCase()\r\n                  : \"\"}\r\n              </h4>\r\n            </WeatherContainer>\r\n            <StopWatch\r\n              style={{\r\n                marginTop: \"-7rem\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                padding: 0,\r\n              }}\r\n            >\r\n              <div className={timeOn ? \"stopWatchBoxStart\" : \"stopWatchBox\"}>\r\n                <span className=\"time\">\r\n                  {(\"0\" + Math.floor((time / 3600000) % 60)).slice(-2)}:\r\n                </span>\r\n                <span className=\"time\">\r\n                  {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:\r\n                </span>\r\n                <span className=\"time\">\r\n                  {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:\r\n                </span>\r\n                <span className=\"time\">\r\n                  {(\"0\" + ((time / 10) % 100)).slice(-2)}\r\n                </span>\r\n              </div>\r\n              <div\r\n                className=\"startStop\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  marginTop: \"1rem\",\r\n                }}\r\n              >\r\n                {!timeOn && time === 0 && (\r\n                  <Button className=\"timeBtn\" onClick={() => setTimeOn(true)}>\r\n                    Start\r\n                  </Button>\r\n                )}\r\n                {timeOn && (\r\n                  <Button className=\"timeBtn\" onClick={() => setTimeOn(false)}>\r\n                    Stop\r\n                  </Button>\r\n                )}\r\n                {!timeOn && time !== 0 && (\r\n                  <Button className=\"timeBtn\" onClick={() => setTimeOn(true)}>\r\n                    Resume\r\n                  </Button>\r\n                )}\r\n                {!timeOn && time > 0 && (\r\n                  <Button className=\"timeBtn\" onClick={() => setTime(0)}>\r\n                    Reset\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </StopWatch>\r\n          </div>\r\n        </TabPanel>\r\n      </AppBar>\r\n    </div>\r\n  ) : (\r\n    <SlogContainer>\r\n      <SlogLeftContainer>\r\n        <SearchContainer>\r\n          <input\r\n            value={searchTerm}\r\n            type=\"text\"\r\n            style={{\r\n              flex: \"0.8\",\r\n              border: \"none\",\r\n              background: \"none\",\r\n              padding: \"0 0.5rem\",\r\n              height: \"2rem\",\r\n              outline: \"none\",\r\n              borderBottom: \"2px solid rgb(5, 185, 125)\",\r\n              margin: \"0 0.5rem\",\r\n              color: \"rgb(3, 185, 124)\",\r\n              fontSize: \"1rem\",\r\n            }}\r\n            onKeyDown={(e) => handleSubmitEnter(e)}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            placeholder=\"Search anything...\"\r\n          />\r\n          <Button\r\n            style={{\r\n              background: \"rgb(5, 185, 125)\",\r\n              flex: \"0.2\",\r\n              color: \"#fff\",\r\n              height: \"2rem\",\r\n              marginRight: \"0.5rem\",\r\n              overflow: \"hidden\",\r\n            }}\r\n            onClick={handleSearch}\r\n          >\r\n            Search\r\n          </Button>\r\n        </SearchContainer>\r\n        <NewsContainer>\r\n          {newsList?.map((news) => (\r\n            <NewsBox>\r\n              <img src={news.urlToImage ? news.urlToImage : newsPhoto} />\r\n              <p>{news.title}</p>\r\n              <a\r\n                href={news.url}\r\n                target=\"_blank\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <Button\r\n                  style={{\r\n                    background: \"rgb(5, 185, 125, 0.55)\",\r\n                    color: \"#fff\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  read more\r\n                </Button>\r\n              </a>\r\n            </NewsBox>\r\n          ))}\r\n          <div style={{ height: \"3rem\", width: \"100%\" }}></div>\r\n        </NewsContainer>\r\n      </SlogLeftContainer>\r\n      <SlogRightContainer>\r\n        <WeatherContainer>\r\n          <SearchContainer\r\n            style={{\r\n              width: \"70%\",\r\n              height: \"2rem\",\r\n              background: \"none\",\r\n            }}\r\n          >\r\n            <input\r\n              value={location}\r\n              type=\"text\"\r\n              style={{\r\n                flex: \"1\",\r\n                border: \"none\",\r\n                background: \"none\",\r\n                padding: \"0 0.5rem\",\r\n                height: \"1rem\",\r\n                outline: \"none\",\r\n                borderBottom: \"2px solid rgb(5, 185, 125)\",\r\n                margin: \"0 0.5rem\",\r\n                color: \"rgb(3, 185, 124)\",\r\n                fontSize: \"0.7rem\",\r\n              }}\r\n              onKeyDown={(e) => handleSubmitEnterWeather(e)}\r\n              onChange={(e) => setLocation(e.target.value)}\r\n              placeholder=\"Type city and press enter...\"\r\n            />\r\n          </SearchContainer>\r\n          <h2\r\n            style={{\r\n              color: \"rgb(18, 107, 77)\",\r\n              fontFamily: \"sans-serif\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {searchedLocation.name},{searchedLocation.sys?.country}\r\n          </h2>\r\n          <div\r\n            style={{\r\n              margin: \"1rem 0\",\r\n              height: \"3rem\",\r\n              width: \"7rem\",\r\n              background: \"rgb(3, 148, 99)\",\r\n              borderRadius: \"10px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              borderBottom: \"3px solid rgb(18, 107, 77)\",\r\n              borderRight: \"3px solid rgb(18, 107, 77)\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <h1\r\n              style={{\r\n                color: \"#fff\",\r\n                fontFamily: \"sans-serif\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              {Math.round(searchedLocation.main?.temp)}\r\n              <sup>o</sup>C\r\n            </h1>\r\n          </div>\r\n          <h4\r\n            style={{\r\n              color: \"rgb(3, 148, 99)\",\r\n              fontFamily: \"sans-serif\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {`Feels like: ${searchedLocation.main?.feels_like}`}\r\n            <sup>o</sup>C\r\n          </h4>\r\n          <h4\r\n            style={{\r\n              color: \"rgb(3, 148, 99)\",\r\n              fontFamily: \"sans-serif\",\r\n              marginTop: \"1rem\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {searchedLocation?.weather\r\n              ? searchedLocation?.weather[0].description?.toUpperCase()\r\n              : \"\"}\r\n          </h4>\r\n        </WeatherContainer>\r\n        <StopWatch>\r\n          <div className={timeOn ? \"stopWatchBoxStart\" : \"stopWatchBox\"}>\r\n            <span className=\"time\">\r\n              {(\"0\" + Math.floor((time / 3600000) % 60)).slice(-2)}:\r\n            </span>\r\n            <span className=\"time\">\r\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:\r\n            </span>\r\n            <span className=\"time\">\r\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:\r\n            </span>\r\n            <span className=\"time\">\r\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}\r\n            </span>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              marginLeft: \"1rem\",\r\n            }}\r\n          >\r\n            {!timeOn && time === 0 && (\r\n              <Button className=\"timeBtn\" onClick={() => setTimeOn(true)}>\r\n                Start\r\n              </Button>\r\n            )}\r\n            {timeOn && (\r\n              <Button className=\"timeBtn\" onClick={() => setTimeOn(false)}>\r\n                Stop\r\n              </Button>\r\n            )}\r\n            {!timeOn && time !== 0 && (\r\n              <Button className=\"timeBtn\" onClick={() => setTimeOn(true)}>\r\n                Resume\r\n              </Button>\r\n            )}\r\n            {!timeOn && time > 0 && (\r\n              <Button className=\"timeBtn\" onClick={() => setTime(0)}>\r\n                Reset\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </StopWatch>\r\n      </SlogRightContainer>\r\n    </SlogContainer>\r\n  );\r\n}\r\n\r\nexport default SlogPage;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"740px\",\r\n});\r\n\r\nconst SlogContainer = styled.div`\r\n  width: 98.5%;\r\n  height: 87%;\r\n  position: absolute;\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\nconst SlogLeftContainer = styled.div`\r\n  flex: 0.6;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n  padding-bottom: 2rem;\r\n\r\n  ${customMedia.lessThan(\"tablet\")`\r\nflex: 0.45;\r\n       padding: 0rem;\r\n       margin:0;\r\n       border:none;\r\n  `};\r\n\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:0.7rem;\r\n    `};\r\n  }\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n  background-color: rgba(5, 185, 125, 0.281);\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  align-items: center;\r\n  height: 3.5rem;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n\r\n  .menu {\r\n    color: rgba(5, 185, 125) !important;\r\n\r\n    &:hover {\r\n      color: rgba(5, 185, 125) !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NewsContainer = styled.div`\r\n  padding: 1rem;\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  display: grid;\r\n  grid-template-columns: 6fr 6fr;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      grid-template-columns: 6fr;\r\n    `};\r\n`;\r\n\r\nconst NewsBox = styled.div`\r\n  margin: 1rem;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 3px 5px lightgreen, -0.5px -0.5px 3px lightgreen;\r\n  width: 18rem;\r\n  min-height: 19rem;\r\n  height: auto;\r\n  padding: 0.2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      width: 15rem !important;\r\n    `};\r\n\r\n  img {\r\n    object-fit: cover;\r\n    flex: 0.5;\r\n    border-radius: 5px;\r\n  }\r\n  p {\r\n    flex: 0.5;\r\n    font-weight: 600;\r\n    margin: 1rem;\r\n  }\r\n`;\r\nconst SlogRightContainer = styled.div`\r\n  flex: 0.4;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n  overflow: hidden;\r\n\r\n  ${customMedia.lessThan(\"tablet\")`\r\nflex: 0.45;\r\n       padding: 0rem;\r\n       margin:0;\r\n       border:none;\r\n  `};\r\n\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 0.7rem;\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:0.7rem;\r\n    `};\r\n  }\r\n`;\r\nconst WeatherContainer = styled.div`\r\n  flex: 0.5;\r\n  border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      margin:0rem 0 !important; \r\n    `};\r\n  }\r\n  h2 {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      margin:0rem 0 !important; \r\n    `};\r\n  }\r\n  h4 {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      margin:0rem 0 !important; \r\n    `};\r\n  }\r\n`;\r\nconst StopWatch = styled.div`\r\n  flex: 0.5;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  padding: 1rem;\r\n  overflow: hidden;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      margin-top: -6rem !important;\r\n      flex: 0.6 !important;\r\n    `};\r\n\r\n  .stopWatchBox {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      height:9.3rem !important;\r\n      width:9.3rem !important;\r\n    `};\r\n  }\r\n  .stopWatchBoxStart {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      height:9.3rem !important;\r\n      width:9.3rem !important;\r\n    `};\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamCard.js",["340","341"],"import { Button, makeStyles, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Delete from \"./Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Btn: {\r\n    minWidth: \"2.5rem\",\r\n  },\r\n}));\r\n\r\nfunction TeamCard({\r\n  id,\r\n  teamName,\r\n  UrlTeamName,\r\n  deleteBtn,\r\n  setOpenDeleteSnackBar,\r\n  setCurrentTeamName,\r\n  sidebarClose,\r\n  discussion,\r\n}) {\r\n  const [openDelete, setOpenDelete] = React.useState(false);\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const classes = useStyles();\r\n\r\n  const handleTeamChange = () => {\r\n    history.push(`/home/${teamName}`);\r\n    sidebarClose();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  return UrlTeamName === teamName ? (\r\n    <div style={{ display: \"flex\", margin: \"0.1rem\" }} className=\"TeamButtons\">\r\n      <Button\r\n        className=\"TeamButtons\"\r\n        style={{\r\n          flex: discussion ? 1 : 0.95,\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n          color: \"rgb(0, 94, 62)\",\r\n          fontWeight: 600,\r\n          backgroundColor: \"rgba(7, 190, 129, 0.534)\",\r\n          fontSize: \"0.7rem\",\r\n          padding: \"0.3rem\",\r\n          borderRadius: discussion ? \"5px\" : \"5px 0 0 5px\",\r\n          textAlign: \"center\",\r\n          wordBreak: \"break-all\",\r\n          border: \"2px solid rgb(0, 94, 62)\",\r\n          marginRight: 0,\r\n        }}\r\n        onClick={() => handleTeamChange()}\r\n      >\r\n        {teamName}\r\n      </Button>\r\n      {deleteBtn ? (\r\n        <Button\r\n          classes={{ root: classes.Btn }}\r\n          style={{\r\n            flex: 0.05,\r\n            background: \"rgb(2, 112, 75)\",\r\n            borderRadius: \"0 5px 5px 0\",\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          <DeleteIcon\r\n            style={{\r\n              fontSize: \"20px\",\r\n              color: \"#fff\",\r\n              cursor: \"pointer\",\r\n              transform: \"scale(0.8)\",\r\n            }}\r\n            onClick={() => handleDelete()}\r\n          />\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {openDelete && (\r\n        <Delete\r\n          open={openDelete}\r\n          handleClose={handleClose}\r\n          teamName={teamName}\r\n          id={id}\r\n          setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n          setCurrentTeamName={setCurrentTeamName}\r\n        />\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <div style={{ display: \"flex\", margin: \"0.1rem\" }}>\r\n      <Button\r\n        className=\"TeamButtons\"\r\n        style={{\r\n          flex: discussion ? 1 : 0.95,\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n          color: \"rgb(0, 94, 62)\",\r\n          fontWeight: 600,\r\n          backgroundColor: \"rgba(7, 190, 129, 0.534)\",\r\n          padding: \"0.3rem\",\r\n          fontSize: \"0.7rem\",\r\n          borderRadius: discussion ? \"5px\" : \"5px 0 0 5px\",\r\n          textAlign: \"center\",\r\n          wordBreak: \"break-all\",\r\n          border: \"2px solid rgba(7, 190, 129, 0.534)\",\r\n          marginRight: 0,\r\n        }}\r\n        onClick={() => handleTeamChange()}\r\n      >\r\n        {teamName}\r\n      </Button>\r\n      {deleteBtn ? (\r\n        <Button\r\n          classes={{ root: classes.Btn }}\r\n          style={{\r\n            flex: 0.05,\r\n            background: \"rgb(2, 112, 75)\",\r\n            borderRadius: \"0 5px 5px 0\",\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          <DeleteIcon\r\n            style={{\r\n              fontSize: \"20px\",\r\n              color: \"#fff\",\r\n              cursor: \"pointer\",\r\n              transform: \"scale(0.8)\",\r\n            }}\r\n            onClick={() => handleDelete()}\r\n          />\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {openDelete && (\r\n        <Delete\r\n          open={openDelete}\r\n          handleClose={handleClose}\r\n          teamName={teamName}\r\n          setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n          setCurrentTeamName={setCurrentTeamName}\r\n          id={id}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamCard;\r\n",{"ruleId":"342","severity":1,"message":"343","line":41,"column":6,"nodeType":"344","endLine":41,"endColumn":18,"suggestions":"345"},{"ruleId":"346","severity":1,"message":"347","line":44,"column":39,"nodeType":"348","messageId":"349","endLine":44,"endColumn":41},{"ruleId":"342","severity":1,"message":"350","line":67,"column":6,"nodeType":"344","endLine":67,"endColumn":8,"suggestions":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","severity":1,"message":"357","line":1,"column":27,"nodeType":"358","messageId":"359","endLine":1,"endColumn":36},{"ruleId":"356","severity":1,"message":"360","line":17,"column":3,"nodeType":"358","messageId":"359","endLine":17,"endColumn":17},{"ruleId":"356","severity":1,"message":"361","line":65,"column":10,"nodeType":"358","messageId":"359","endLine":65,"endColumn":15},{"ruleId":"356","severity":1,"message":"362","line":67,"column":10,"nodeType":"358","messageId":"359","endLine":67,"endColumn":18},{"ruleId":"356","severity":1,"message":"363","line":67,"column":20,"nodeType":"358","messageId":"359","endLine":67,"endColumn":31},{"ruleId":"356","severity":1,"message":"364","line":120,"column":9,"nodeType":"358","messageId":"359","endLine":120,"endColumn":22},{"ruleId":"342","severity":1,"message":"350","line":173,"column":6,"nodeType":"344","endLine":173,"endColumn":8,"suggestions":"365"},{"ruleId":"356","severity":1,"message":"366","line":1,"column":17,"nodeType":"358","messageId":"359","endLine":1,"endColumn":25},{"ruleId":"356","severity":1,"message":"367","line":3,"column":8,"nodeType":"358","messageId":"359","endLine":3,"endColumn":32},{"ruleId":"356","severity":1,"message":"368","line":4,"column":8,"nodeType":"358","messageId":"359","endLine":4,"endColumn":20},{"ruleId":"356","severity":1,"message":"369","line":5,"column":8,"nodeType":"358","messageId":"359","endLine":5,"endColumn":18},{"ruleId":"356","severity":1,"message":"370","line":9,"column":8,"nodeType":"358","messageId":"359","endLine":9,"endColumn":21},{"ruleId":"371","severity":1,"message":"372","line":42,"column":7,"nodeType":"358","messageId":"373","endLine":42,"endColumn":11},{"ruleId":"374","severity":1,"message":"375","line":177,"column":17,"nodeType":"376","endLine":177,"endColumn":32},{"ruleId":"377","severity":1,"message":"378","line":180,"column":17,"nodeType":"379","endLine":191,"endColumn":19},{"ruleId":"377","severity":1,"message":"378","line":201,"column":13,"nodeType":"379","endLine":209,"endColumn":15},{"ruleId":"356","severity":1,"message":"380","line":266,"column":7,"nodeType":"358","messageId":"359","endLine":266,"endColumn":18},{"ruleId":"356","severity":1,"message":"381","line":5,"column":3,"nodeType":"358","messageId":"359","endLine":5,"endColumn":9},{"ruleId":"356","severity":1,"message":"382","line":6,"column":3,"nodeType":"358","messageId":"359","endLine":6,"endColumn":6},{"ruleId":"356","severity":1,"message":"383","line":7,"column":3,"nodeType":"358","messageId":"359","endLine":7,"endColumn":7},{"ruleId":"356","severity":1,"message":"384","line":9,"column":3,"nodeType":"358","messageId":"359","endLine":9,"endColumn":13},{"ruleId":"356","severity":1,"message":"385","line":13,"column":17,"nodeType":"358","messageId":"359","endLine":13,"endColumn":23},{"ruleId":"356","severity":1,"message":"386","line":16,"column":8,"nodeType":"358","messageId":"359","endLine":16,"endColumn":23},{"ruleId":"356","severity":1,"message":"387","line":20,"column":8,"nodeType":"358","messageId":"359","endLine":20,"endColumn":17},{"ruleId":"356","severity":1,"message":"360","line":22,"column":3,"nodeType":"358","messageId":"359","endLine":22,"endColumn":17},{"ruleId":"356","severity":1,"message":"388","line":23,"column":3,"nodeType":"358","messageId":"359","endLine":23,"endColumn":26},{"ruleId":"356","severity":1,"message":"389","line":24,"column":3,"nodeType":"358","messageId":"359","endLine":24,"endColumn":13},{"ruleId":"356","severity":1,"message":"390","line":26,"column":8,"nodeType":"358","messageId":"359","endLine":26,"endColumn":15},{"ruleId":"356","severity":1,"message":"391","line":27,"column":8,"nodeType":"358","messageId":"359","endLine":27,"endColumn":19},{"ruleId":"356","severity":1,"message":"392","line":28,"column":8,"nodeType":"358","messageId":"359","endLine":28,"endColumn":18},{"ruleId":"356","severity":1,"message":"393","line":30,"column":10,"nodeType":"358","messageId":"359","endLine":30,"endColumn":23},{"ruleId":"356","severity":1,"message":"370","line":32,"column":8,"nodeType":"358","messageId":"359","endLine":32,"endColumn":21},{"ruleId":"356","severity":1,"message":"394","line":35,"column":8,"nodeType":"358","messageId":"359","endLine":35,"endColumn":26},{"ruleId":"356","severity":1,"message":"395","line":37,"column":8,"nodeType":"358","messageId":"359","endLine":37,"endColumn":16},{"ruleId":"356","severity":1,"message":"396","line":62,"column":10,"nodeType":"358","messageId":"359","endLine":62,"endColumn":19},{"ruleId":"356","severity":1,"message":"397","line":106,"column":7,"nodeType":"358","messageId":"359","endLine":106,"endColumn":27},{"ruleId":"356","severity":1,"message":"398","line":120,"column":9,"nodeType":"358","messageId":"359","endLine":120,"endColumn":16},{"ruleId":"356","severity":1,"message":"399","line":126,"column":9,"nodeType":"358","messageId":"359","endLine":126,"endColumn":26},{"ruleId":"342","severity":1,"message":"350","line":177,"column":6,"nodeType":"344","endLine":177,"endColumn":19,"suggestions":"400"},{"ruleId":"346","severity":1,"message":"401","line":207,"column":34,"nodeType":"348","messageId":"402","endLine":207,"endColumn":36},{"ruleId":"342","severity":1,"message":"403","line":227,"column":6,"nodeType":"344","endLine":227,"endColumn":19,"suggestions":"404"},{"ruleId":"356","severity":1,"message":"405","line":564,"column":7,"nodeType":"358","messageId":"359","endLine":564,"endColumn":17},{"ruleId":"356","severity":1,"message":"406","line":571,"column":7,"nodeType":"358","messageId":"359","endLine":571,"endColumn":16},{"ruleId":"356","severity":1,"message":"407","line":15,"column":8,"nodeType":"358","messageId":"359","endLine":15,"endColumn":16},{"ruleId":"356","severity":1,"message":"408","line":16,"column":8,"nodeType":"358","messageId":"359","endLine":16,"endColumn":24},{"ruleId":"356","severity":1,"message":"409","line":83,"column":13,"nodeType":"358","messageId":"359","endLine":83,"endColumn":23},{"ruleId":"342","severity":1,"message":"410","line":184,"column":6,"nodeType":"344","endLine":184,"endColumn":8,"suggestions":"411"},{"ruleId":"356","severity":1,"message":"412","line":21,"column":8,"nodeType":"358","messageId":"359","endLine":21,"endColumn":16},{"ruleId":"346","severity":1,"message":"401","line":127,"column":28,"nodeType":"348","messageId":"402","endLine":127,"endColumn":30},{"ruleId":"342","severity":1,"message":"350","line":136,"column":6,"nodeType":"344","endLine":136,"endColumn":8,"suggestions":"413"},{"ruleId":"356","severity":1,"message":"414","line":6,"column":14,"nodeType":"358","messageId":"359","endLine":6,"endColumn":21},{"ruleId":"356","severity":1,"message":"360","line":13,"column":3,"nodeType":"358","messageId":"359","endLine":13,"endColumn":17},{"ruleId":"356","severity":1,"message":"415","line":22,"column":8,"nodeType":"358","messageId":"359","endLine":22,"endColumn":13},{"ruleId":"356","severity":1,"message":"396","line":57,"column":10,"nodeType":"358","messageId":"359","endLine":57,"endColumn":19},{"ruleId":"356","severity":1,"message":"416","line":139,"column":10,"nodeType":"358","messageId":"359","endLine":139,"endColumn":14},{"ruleId":"356","severity":1,"message":"417","line":139,"column":16,"nodeType":"358","messageId":"359","endLine":139,"endColumn":23},{"ruleId":"356","severity":1,"message":"418","line":140,"column":10,"nodeType":"358","messageId":"359","endLine":140,"endColumn":15},{"ruleId":"356","severity":1,"message":"419","line":140,"column":17,"nodeType":"358","messageId":"359","endLine":140,"endColumn":25},{"ruleId":"356","severity":1,"message":"361","line":143,"column":10,"nodeType":"358","messageId":"359","endLine":143,"endColumn":15},{"ruleId":"356","severity":1,"message":"420","line":144,"column":10,"nodeType":"358","messageId":"359","endLine":144,"endColumn":22},{"ruleId":"356","severity":1,"message":"421","line":144,"column":24,"nodeType":"358","messageId":"359","endLine":144,"endColumn":39},{"ruleId":"356","severity":1,"message":"422","line":155,"column":10,"nodeType":"358","messageId":"359","endLine":155,"endColumn":15},{"ruleId":"356","severity":1,"message":"423","line":155,"column":17,"nodeType":"358","messageId":"359","endLine":155,"endColumn":25},{"ruleId":"356","severity":1,"message":"424","line":162,"column":10,"nodeType":"358","messageId":"359","endLine":162,"endColumn":21},{"ruleId":"356","severity":1,"message":"425","line":162,"column":23,"nodeType":"358","messageId":"359","endLine":162,"endColumn":37},{"ruleId":"342","severity":1,"message":"350","line":249,"column":6,"nodeType":"344","endLine":249,"endColumn":19,"suggestions":"426"},{"ruleId":"346","severity":1,"message":"401","line":259,"column":34,"nodeType":"348","messageId":"402","endLine":259,"endColumn":36},{"ruleId":"342","severity":1,"message":"350","line":268,"column":6,"nodeType":"344","endLine":268,"endColumn":19,"suggestions":"427"},{"ruleId":"346","severity":1,"message":"401","line":280,"column":28,"nodeType":"348","messageId":"402","endLine":280,"endColumn":30},{"ruleId":"342","severity":1,"message":"428","line":289,"column":6,"nodeType":"344","endLine":289,"endColumn":8,"suggestions":"429"},{"ruleId":"377","severity":1,"message":"378","line":494,"column":17,"nodeType":"379","endLine":501,"endColumn":19},{"ruleId":"377","severity":1,"message":"378","line":542,"column":17,"nodeType":"379","endLine":549,"endColumn":19},{"ruleId":"377","severity":1,"message":"378","line":583,"column":17,"nodeType":"379","endLine":590,"endColumn":19},{"ruleId":"356","severity":1,"message":"430","line":8,"column":8,"nodeType":"358","messageId":"359","endLine":8,"endColumn":14},{"ruleId":"356","severity":1,"message":"431","line":11,"column":18,"nodeType":"358","messageId":"359","endLine":11,"endColumn":28},{"ruleId":"356","severity":1,"message":"432","line":13,"column":8,"nodeType":"358","messageId":"359","endLine":13,"endColumn":24},{"ruleId":"356","severity":1,"message":"433","line":11,"column":8,"nodeType":"358","messageId":"359","endLine":11,"endColumn":16},{"ruleId":"356","severity":1,"message":"434","line":12,"column":10,"nodeType":"358","messageId":"359","endLine":12,"endColumn":20},{"ruleId":"356","severity":1,"message":"415","line":25,"column":10,"nodeType":"358","messageId":"359","endLine":25,"endColumn":15},{"ruleId":"435","severity":1,"message":"436","line":55,"column":9,"nodeType":"437","messageId":"438","endLine":57,"endColumn":10,"fix":"439"},{"ruleId":"356","severity":1,"message":"440","line":14,"column":3,"nodeType":"358","messageId":"359","endLine":14,"endColumn":13},{"ruleId":"356","severity":1,"message":"415","line":21,"column":8,"nodeType":"358","messageId":"359","endLine":21,"endColumn":13},{"ruleId":"356","severity":1,"message":"361","line":133,"column":10,"nodeType":"358","messageId":"359","endLine":133,"endColumn":15},{"ruleId":"342","severity":1,"message":"350","line":281,"column":6,"nodeType":"344","endLine":281,"endColumn":8,"suggestions":"441"},{"ruleId":"342","severity":1,"message":"442","line":298,"column":6,"nodeType":"344","endLine":298,"endColumn":23,"suggestions":"443"},{"ruleId":"346","severity":1,"message":"347","line":573,"column":30,"nodeType":"348","messageId":"349","endLine":573,"endColumn":32},{"ruleId":"346","severity":1,"message":"347","line":596,"column":30,"nodeType":"348","messageId":"349","endLine":596,"endColumn":32},{"ruleId":"377","severity":1,"message":"378","line":632,"column":15,"nodeType":"379","endLine":632,"endColumn":55},{"ruleId":"346","severity":1,"message":"347","line":661,"column":29,"nodeType":"348","messageId":"349","endLine":661,"endColumn":31},{"ruleId":"346","severity":1,"message":"347","line":666,"column":28,"nodeType":"348","messageId":"349","endLine":666,"endColumn":30},{"ruleId":"346","severity":1,"message":"347","line":688,"column":28,"nodeType":"348","messageId":"349","endLine":688,"endColumn":30},{"ruleId":"346","severity":1,"message":"347","line":729,"column":29,"nodeType":"348","messageId":"349","endLine":729,"endColumn":31},{"ruleId":"346","severity":1,"message":"347","line":734,"column":28,"nodeType":"348","messageId":"349","endLine":734,"endColumn":30},{"ruleId":"346","severity":1,"message":"347","line":756,"column":28,"nodeType":"348","messageId":"349","endLine":756,"endColumn":30},{"ruleId":"356","severity":1,"message":"357","line":1,"column":17,"nodeType":"358","messageId":"359","endLine":1,"endColumn":26},{"ruleId":"356","severity":1,"message":"430","line":8,"column":8,"nodeType":"358","messageId":"359","endLine":8,"endColumn":14},{"ruleId":"346","severity":1,"message":"444","line":17,"column":39,"nodeType":"348","messageId":"349","endLine":17,"endColumn":41},{"ruleId":"342","severity":1,"message":"445","line":69,"column":6,"nodeType":"344","endLine":69,"endColumn":8,"suggestions":"446"},{"ruleId":"352","replacedBy":"447"},{"ruleId":"354","replacedBy":"448"},{"ruleId":"356","severity":1,"message":"366","line":1,"column":17,"nodeType":"358","messageId":"359","endLine":1,"endColumn":25},{"ruleId":"356","severity":1,"message":"433","line":11,"column":8,"nodeType":"358","messageId":"359","endLine":11,"endColumn":16},{"ruleId":"346","severity":1,"message":"401","line":53,"column":34,"nodeType":"348","messageId":"402","endLine":53,"endColumn":36},{"ruleId":"342","severity":1,"message":"449","line":66,"column":6,"nodeType":"344","endLine":66,"endColumn":8,"suggestions":"450"},{"ruleId":"356","severity":1,"message":"451","line":140,"column":10,"nodeType":"358","messageId":"359","endLine":140,"endColumn":28},{"ruleId":"356","severity":1,"message":"452","line":164,"column":9,"nodeType":"358","messageId":"359","endLine":164,"endColumn":23},{"ruleId":"346","severity":1,"message":"453","line":170,"column":20,"nodeType":"348","messageId":"402","endLine":170,"endColumn":22},{"ruleId":"454","severity":1,"message":"455","line":292,"column":11,"nodeType":"376","endLine":294,"endColumn":12},{"ruleId":"352","replacedBy":"456"},{"ruleId":"354","replacedBy":"457"},{"ruleId":"356","severity":1,"message":"424","line":49,"column":10,"nodeType":"358","messageId":"359","endLine":49,"endColumn":21},{"ruleId":"356","severity":1,"message":"420","line":51,"column":10,"nodeType":"358","messageId":"359","endLine":51,"endColumn":22},{"ruleId":"356","severity":1,"message":"458","line":63,"column":10,"nodeType":"358","messageId":"359","endLine":63,"endColumn":15},{"ruleId":"356","severity":1,"message":"459","line":63,"column":17,"nodeType":"358","messageId":"359","endLine":63,"endColumn":25},{"ruleId":"356","severity":1,"message":"460","line":64,"column":10,"nodeType":"358","messageId":"359","endLine":64,"endColumn":25},{"ruleId":"356","severity":1,"message":"461","line":65,"column":10,"nodeType":"358","messageId":"359","endLine":65,"endColumn":14},{"ruleId":"356","severity":1,"message":"462","line":65,"column":16,"nodeType":"358","messageId":"359","endLine":65,"endColumn":32},{"ruleId":"356","severity":1,"message":"364","line":68,"column":9,"nodeType":"358","messageId":"359","endLine":68,"endColumn":22},{"ruleId":"356","severity":1,"message":"409","line":152,"column":13,"nodeType":"358","messageId":"359","endLine":152,"endColumn":23},{"ruleId":"356","severity":1,"message":"463","line":177,"column":9,"nodeType":"358","messageId":"359","endLine":177,"endColumn":22},{"ruleId":"342","severity":1,"message":"464","line":224,"column":6,"nodeType":"344","endLine":224,"endColumn":8,"suggestions":"465"},{"ruleId":"342","severity":1,"message":"464","line":241,"column":6,"nodeType":"344","endLine":241,"endColumn":8,"suggestions":"466"},{"ruleId":"352","replacedBy":"467"},{"ruleId":"354","replacedBy":"468"},{"ruleId":"356","severity":1,"message":"469","line":28,"column":10,"nodeType":"358","messageId":"359","endLine":28,"endColumn":18},{"ruleId":"356","severity":1,"message":"470","line":28,"column":20,"nodeType":"358","messageId":"359","endLine":28,"endColumn":31},{"ruleId":"356","severity":1,"message":"471","line":31,"column":10,"nodeType":"358","messageId":"359","endLine":31,"endColumn":17},{"ruleId":"356","severity":1,"message":"472","line":31,"column":19,"nodeType":"358","messageId":"359","endLine":31,"endColumn":29},{"ruleId":"346","severity":1,"message":"401","line":48,"column":28,"nodeType":"348","messageId":"402","endLine":48,"endColumn":30},{"ruleId":"346","severity":1,"message":"401","line":68,"column":28,"nodeType":"348","messageId":"402","endLine":68,"endColumn":30},{"ruleId":"356","severity":1,"message":"361","line":37,"column":10,"nodeType":"358","messageId":"359","endLine":37,"endColumn":15},{"ruleId":"356","severity":1,"message":"473","line":2,"column":8,"nodeType":"358","messageId":"359","endLine":2,"endColumn":14},{"ruleId":"356","severity":1,"message":"474","line":4,"column":8,"nodeType":"358","messageId":"359","endLine":4,"endColumn":21},{"ruleId":"356","severity":1,"message":"475","line":23,"column":10,"nodeType":"358","messageId":"359","endLine":23,"endColumn":21},{"ruleId":"356","severity":1,"message":"476","line":23,"column":23,"nodeType":"358","messageId":"359","endLine":23,"endColumn":37},{"ruleId":"342","severity":1,"message":"477","line":36,"column":6,"nodeType":"344","endLine":36,"endColumn":8,"suggestions":"478"},{"ruleId":"377","severity":1,"message":"378","line":73,"column":15,"nodeType":"379","endLine":90,"endColumn":17},{"ruleId":"352","replacedBy":"479"},{"ruleId":"354","replacedBy":"480"},{"ruleId":"356","severity":1,"message":"474","line":4,"column":8,"nodeType":"358","messageId":"359","endLine":4,"endColumn":21},{"ruleId":"356","severity":1,"message":"481","line":6,"column":8,"nodeType":"358","messageId":"359","endLine":6,"endColumn":25},{"ruleId":"356","severity":1,"message":"482","line":7,"column":8,"nodeType":"358","messageId":"359","endLine":7,"endColumn":19},{"ruleId":"374","severity":1,"message":"375","line":157,"column":28,"nodeType":"376","endLine":157,"endColumn":43},{"ruleId":"342","severity":1,"message":"483","line":34,"column":6,"nodeType":"344","endLine":34,"endColumn":8,"suggestions":"484"},{"ruleId":"377","severity":1,"message":"378","line":49,"column":9,"nodeType":"379","endLine":49,"endColumn":57},{"ruleId":"377","severity":1,"message":"378","line":174,"column":9,"nodeType":"379","endLine":174,"endColumn":60},{"ruleId":"377","severity":1,"message":"378","line":178,"column":22,"nodeType":"379","endLine":178,"endColumn":69},{"ruleId":"377","severity":1,"message":"378","line":190,"column":25,"nodeType":"379","endLine":190,"endColumn":72},{"ruleId":"377","severity":1,"message":"378","line":204,"column":9,"nodeType":"379","endLine":204,"endColumn":58},{"ruleId":"377","severity":1,"message":"378","line":208,"column":22,"nodeType":"379","endLine":208,"endColumn":68},{"ruleId":"377","severity":1,"message":"378","line":224,"column":25,"nodeType":"379","endLine":224,"endColumn":71},{"ruleId":"377","severity":1,"message":"378","line":237,"column":9,"nodeType":"379","endLine":237,"endColumn":52},{"ruleId":"356","severity":1,"message":"357","line":1,"column":27,"nodeType":"358","messageId":"359","endLine":1,"endColumn":36},{"ruleId":"356","severity":1,"message":"485","line":14,"column":10,"nodeType":"358","messageId":"359","endLine":14,"endColumn":23},{"ruleId":"356","severity":1,"message":"364","line":52,"column":9,"nodeType":"358","messageId":"359","endLine":52,"endColumn":22},{"ruleId":"342","severity":1,"message":"350","line":105,"column":6,"nodeType":"344","endLine":105,"endColumn":19,"suggestions":"486"},{"ruleId":"342","severity":1,"message":"487","line":72,"column":6,"nodeType":"344","endLine":72,"endColumn":8,"suggestions":"488"},{"ruleId":"342","severity":1,"message":"487","line":89,"column":6,"nodeType":"344","endLine":89,"endColumn":8,"suggestions":"489"},{"ruleId":"356","severity":1,"message":"490","line":10,"column":8,"nodeType":"358","messageId":"359","endLine":10,"endColumn":19},{"ruleId":"356","severity":1,"message":"491","line":32,"column":9,"nodeType":"358","messageId":"359","endLine":32,"endColumn":16},{"ruleId":"342","severity":1,"message":"483","line":99,"column":6,"nodeType":"344","endLine":99,"endColumn":8,"suggestions":"492"},{"ruleId":"377","severity":1,"message":"378","line":105,"column":11,"nodeType":"379","endLine":105,"endColumn":62},{"ruleId":"454","severity":1,"message":"455","line":156,"column":21,"nodeType":"376","endLine":156,"endColumn":44},{"ruleId":"454","severity":1,"message":"455","line":295,"column":21,"nodeType":"376","endLine":295,"endColumn":44},{"ruleId":"454","severity":1,"message":"455","line":325,"column":21,"nodeType":"376","endLine":325,"endColumn":44},{"ruleId":"352","replacedBy":"493"},{"ruleId":"354","replacedBy":"494"},{"ruleId":"356","severity":1,"message":"495","line":9,"column":7,"nodeType":"358","messageId":"359","endLine":9,"endColumn":16},{"ruleId":"496","severity":1,"message":"497","line":59,"column":18,"nodeType":"498","messageId":"499","endLine":59,"endColumn":20},{"ruleId":"356","severity":1,"message":"500","line":24,"column":7,"nodeType":"358","messageId":"359","endLine":24,"endColumn":17},{"ruleId":"356","severity":1,"message":"501","line":46,"column":7,"nodeType":"358","messageId":"359","endLine":46,"endColumn":21},{"ruleId":"356","severity":1,"message":"502","line":126,"column":10,"nodeType":"358","messageId":"359","endLine":126,"endColumn":18},{"ruleId":"356","severity":1,"message":"503","line":142,"column":9,"nodeType":"358","messageId":"359","endLine":142,"endColumn":21},{"ruleId":"356","severity":1,"message":"504","line":147,"column":9,"nodeType":"358","messageId":"359","endLine":147,"endColumn":20},{"ruleId":"342","severity":1,"message":"505","line":241,"column":6,"nodeType":"344","endLine":241,"endColumn":8,"suggestions":"506"},{"ruleId":"377","severity":1,"message":"378","line":329,"column":19,"nodeType":"379","endLine":329,"endColumn":78},{"ruleId":"374","severity":1,"message":"375","line":333,"column":21,"nodeType":"376","endLine":333,"endColumn":36},{"ruleId":"377","severity":1,"message":"378","line":527,"column":15,"nodeType":"379","endLine":527,"endColumn":74},{"ruleId":"374","severity":1,"message":"375","line":531,"column":17,"nodeType":"376","endLine":531,"endColumn":32},{"ruleId":"356","severity":1,"message":"507","line":4,"column":8,"nodeType":"358","messageId":"359","endLine":4,"endColumn":14},{"ruleId":"356","severity":1,"message":"491","line":27,"column":9,"nodeType":"358","messageId":"359","endLine":27,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'array' and 'colors'. Either include them or remove the dependency array.","ArrayExpression",["508"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook React.useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["509"],"no-native-reassign",["510"],"no-negated-in-lhs",["511"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'DateTimePicker' is defined but never used.","'error' is assigned a value but never used.","'todoList' is assigned a value but never used.","'setTodoList' is assigned a value but never used.","'handleSignOut' is assigned a value but never used.",["512"],"'useState' is defined but never used.","'CheckBoxOutlineBlankIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'CustomTooltip' is defined but never used.","no-redeclare","'date' is already defined.","redeclared","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TodoActions' is assigned a value but never used.","'AppBar' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Typography' is defined but never used.","'useRef' is defined but never used.","'AddingTeamModal' is defined but never used.","'AlarmIcon' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'DatePicker' is defined but never used.","'AddIcon' is defined but never used.","'MomentUtils' is defined but never used.","'CreateIcon' is defined but never used.","'ThemeProvider' is defined but never used.","'profileSetterImage' is defined but never used.","'SendIcon' is defined but never used.","'a11yProps' is defined but never used.","'defaultMaterialTheme' is assigned a value but never used.","'classes' is assigned a value but never used.","'handleSubmitEnter' is assigned a value but never used.",["513"],"Array.prototype.filter() expects a return value from arrow function.","expectedInside","React Hook React.useEffect has a missing dependency: 'deleteTeam'. Either include it or remove the dependency array.",["514"],"'ChatScreen' is assigned a value but never used.","'ChatInput' is assigned a value but never used.","'DoneIcon' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'uploadTask' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllImages'. Either include it or remove the dependency array.",["515"],"'SlogPage' is defined but never used.",["516"],"'storage' is defined but never used.","'green' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'profileError' is assigned a value but never used.","'setProfileError' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'profilePath' is assigned a value but never used.","'setProfilePath' is assigned a value but never used.",["517"],["518"],"React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'setDiscussionLock'. Either include them or remove the dependency array. If 'setDiscussionLock' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["519"],"'moment' is defined but never used.","'IconButton' is defined but never used.","'ErrorOutlineIcon' is defined but never used.","'firebase' is defined but never used.","'useHistory' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\":hover\"] found.","Property","unnecessarilyComputedProperty",{"range":"520","text":"521"},"'withStyles' is defined but never used.",["522"],"React Hook useEffect has a missing dependency: 'selectedStartDate'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'handleEndDateChange' needs the current value of 'selectedStartDate'.",["523"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'getAllEvents' and 'getChild'. Either include them or remove the dependency array.",["524"],["510"],["511"],"React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'teamName'. Either include them or remove the dependency array.",["525"],"'databaseSideDelete' is assigned a value but never used.","'databaseDelete' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","react/jsx-no-duplicate-props","No duplicate props allowed",["510"],["511"],"'teams' is assigned a value but never used.","'setTeams' is assigned a value but never used.","'allMemberIdList' is assigned a value but never used.","'team' is assigned a value but never used.","'handleChangeTeam' is assigned a value but never used.","'getAllMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["526"],["527"],["510"],["511"],"'teamList' is assigned a value but never used.","'setTeamList' is assigned a value but never used.","'already' is assigned a value but never used.","'setAlready' is assigned a value but never used.","'Button' is defined but never used.","'DialogActions' is defined but never used.","'senderEmail' is assigned a value but never used.","'setSenderEmail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'imageList'. Either include it or remove the dependency array.",["528"],["510"],["511"],"'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","React Hook React.useEffect has missing dependencies: 'currentUser' and 'history'. Either include them or remove the dependency array.",["529"],"'generateMedia' is defined but never used.",["530"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["531"],["532"],"'signUpImage' is defined but never used.","'isSmall' is assigned a value but never used.",["533"],["510"],["511"],"'useStyles' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'StyledMenu' is assigned a value but never used.","'StyledMenuItem' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleSource' is assigned a value but never used.","'handleClick' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["534"],"'styled' is defined but never used.",{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},"no-global-assign","no-unsafe-negation",{"desc":"537","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"537","fix":"546"},{"desc":"540","fix":"547"},{"desc":"540","fix":"548"},{"desc":"549","fix":"550"},[1612,1622],"\":hover\"",{"desc":"537","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"537","fix":"558"},{"desc":"537","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"540","fix":"564"},{"desc":"565","fix":"566"},{"desc":"565","fix":"567"},{"desc":"562","fix":"568"},{"desc":"569","fix":"570"},"Update the dependencies array to be: [array, colors, todoLength]",{"range":"571","text":"572"},"Update the dependencies array to be: [currentUser.uid]",{"range":"573","text":"574"},{"range":"575","text":"574"},"Update the dependencies array to be: [UrlTeamName, currentUser.uid]",{"range":"576","text":"577"},"Update the dependencies array to be: [UrlTeamName, deleteTeam]",{"range":"578","text":"579"},"Update the dependencies array to be: [getAllImages]",{"range":"580","text":"581"},{"range":"582","text":"574"},{"range":"583","text":"577"},{"range":"584","text":"577"},"Update the dependencies array to be: [currentUser.uid, setDiscussionLock]",{"range":"585","text":"586"},{"range":"587","text":"574"},"Update the dependencies array to be: [selectedEndDate, selectedStartDate]",{"range":"588","text":"589"},"Update the dependencies array to be: [getAllEvents, getChild]",{"range":"590","text":"591"},"Update the dependencies array to be: [currentUser.uid, teamName]",{"range":"592","text":"593"},{"range":"594","text":"574"},{"range":"595","text":"574"},"Update the dependencies array to be: [imageList]",{"range":"596","text":"597"},"Update the dependencies array to be: [currentUser, history]",{"range":"598","text":"599"},{"range":"600","text":"577"},"Update the dependencies array to be: [id]",{"range":"601","text":"602"},{"range":"603","text":"602"},{"range":"604","text":"599"},"Update the dependencies array to be: [getWeather]",{"range":"605","text":"606"},[1109,1121],"[array, colors, todoLength]",[1762,1764],"[currentUser.uid]",[5038,5040],[4954,4967],"[UrlTeamName, currentUser.uid]",[6475,6488],"[UrlTeamName, deleteTeam]",[5625,5627],"[getAllImages]",[3494,3496],[7428,7441],[7984,7997],[8530,8532],"[currentUser.uid, setDiscussionLock]",[7664,7666],[8062,8079],"[selectedEndDate, selectedStartDate]",[2376,2378],"[getAllEvents, getChild]",[1953,1955],"[currentUser.uid, teamName]",[7590,7592],[8118,8120],[909,911],"[imageList]",[1496,1498],"[currentUser, history]",[3300,3313],[2549,2551],"[id]",[3064,3066],[3153,3155],[6273,6275],"[getWeather]"]