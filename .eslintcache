[{"C:\\Users\\KIIT\\Desktop\\slogger\\src\\reportWebVitals.js":"1","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\HelpPage.js":"2","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamCard.js":"3","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\navBar\\NavBar.js":"4","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js":"5","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Material.js":"6","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\slogger\\Slogger.js":"7","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\SlogPage.js":"8","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Delete.js":"9","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TodoCard.js":"10","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\profile\\Profile.js":"11","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\auth\\SignUp.js":"12","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Dialog.js":"13","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js":"14","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Discussion.js":"15","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\CustomTooltip.js":"16","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarProfile.js":"17","C:\\Users\\KIIT\\Desktop\\slogger\\src\\context\\AuthContext.js":"18","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarPersonal.js":"19","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\home\\Home.js":"20","C:\\Users\\KIIT\\Desktop\\slogger\\src\\App.js":"21","C:\\Users\\KIIT\\Desktop\\slogger\\src\\index.js":"22","C:\\Users\\KIIT\\Desktop\\slogger\\src\\utils\\theme.js":"23","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js":"24","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodoCard.js":"25","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\profile\\MemberCard.js":"26","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Chat.js":"27","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\snackbar\\SnackBar.js":"28","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\EmailDialog.js":"29","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarTeams.js":"30"},{"size":375,"mtime":1616858364988,"results":"31","hashOfConfig":"32"},{"size":16973,"mtime":1616858364890,"results":"33","hashOfConfig":"32"},{"size":4271,"mtime":1617119984792,"results":"34","hashOfConfig":"32"},{"size":7849,"mtime":1617350202269,"results":"35","hashOfConfig":"32"},{"size":3314,"mtime":1616930347187,"results":"36","hashOfConfig":"32"},{"size":7317,"mtime":1616939969127,"results":"37","hashOfConfig":"32"},{"size":13304,"mtime":1617303101286,"results":"38","hashOfConfig":"32"},{"size":24438,"mtime":1616858364976,"results":"39","hashOfConfig":"32"},{"size":8779,"mtime":1616858364972,"results":"40","hashOfConfig":"32"},{"size":4462,"mtime":1616858364979,"results":"41","hashOfConfig":"32"},{"size":17843,"mtime":1616861039595,"results":"42","hashOfConfig":"32"},{"size":17035,"mtime":1617128907821,"results":"43","hashOfConfig":"32"},{"size":5765,"mtime":1616861189652,"results":"44","hashOfConfig":"32"},{"size":27759,"mtime":1617349089905,"results":"45","hashOfConfig":"32"},{"size":13867,"mtime":1617349842342,"results":"46","hashOfConfig":"32"},{"size":414,"mtime":1616858364855,"results":"47","hashOfConfig":"32"},{"size":17564,"mtime":1616858364983,"results":"48","hashOfConfig":"32"},{"size":1128,"mtime":1616858364985,"results":"49","hashOfConfig":"32"},{"size":8975,"mtime":1616858364981,"results":"50","hashOfConfig":"32"},{"size":9448,"mtime":1617303482932,"results":"51","hashOfConfig":"32"},{"size":995,"mtime":1617302785598,"results":"52","hashOfConfig":"32"},{"size":465,"mtime":1616919472036,"results":"53","hashOfConfig":"32"},{"size":295,"mtime":1617350038118,"results":"54","hashOfConfig":"32"},{"size":14934,"mtime":1617349614010,"results":"55","hashOfConfig":"32"},{"size":10412,"mtime":1617349198867,"results":"56","hashOfConfig":"32"},{"size":8028,"mtime":1617125378020,"results":"57","hashOfConfig":"32"},{"size":4253,"mtime":1617121048290,"results":"58","hashOfConfig":"32"},{"size":1135,"mtime":1617124404956,"results":"59","hashOfConfig":"32"},{"size":2282,"mtime":1616858364889,"results":"60","hashOfConfig":"32"},{"size":8748,"mtime":1617348435463,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1etrus8",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"87"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\KIIT\\Desktop\\slogger\\src\\reportWebVitals.js",[],["140","141"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\HelpPage.js",["142"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamCard.js",["143","144"],"import { Button, makeStyles, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Delete from \"./Delete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Btn: {\r\n    minWidth: \"2.5rem\",\r\n  },\r\n}));\r\n\r\nfunction TeamCard({\r\n  id,\r\n  teamName,\r\n  UrlTeamName,\r\n  deleteBtn,\r\n  setOpenDeleteSnackBar,\r\n  setCurrentTeamName,\r\n  sidebarClose,\r\n  discussion,\r\n}) {\r\n  const [openDelete, setOpenDelete] = React.useState(false);\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const classes = useStyles();\r\n\r\n  const handleTeamChange = () => {\r\n    history.push(`/home/${teamName}`);\r\n    sidebarClose();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  return UrlTeamName === teamName ? (\r\n    <div style={{ display: \"flex\", margin: \"0.1rem\" }} className=\"TeamButtons\">\r\n      <Button\r\n        className=\"TeamButtons\"\r\n        style={{\r\n          flex: discussion ? 1 : 0.95,\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n          color: \"rgb(0, 94, 62)\",\r\n          fontWeight: 600,\r\n          backgroundColor: \"rgba(7, 190, 129, 0.534)\",\r\n          fontSize: \"0.7rem\",\r\n          padding: \"0.3rem\",\r\n          borderRadius: discussion ? \"5px\" : \"5px 0 0 5px\",\r\n          textAlign: \"center\",\r\n          wordBreak: \"break-all\",\r\n          border: \"2px solid rgb(0, 94, 62)\",\r\n          marginRight: 0,\r\n        }}\r\n        onClick={() => handleTeamChange()}\r\n      >\r\n        {teamName}\r\n      </Button>\r\n      {deleteBtn ? (\r\n        <Button\r\n          classes={{ root: classes.Btn }}\r\n          style={{\r\n            flex: 0.05,\r\n            background: \"rgb(2, 112, 75)\",\r\n            borderRadius: \"0 5px 5px 0\",\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          <DeleteIcon\r\n            style={{\r\n              fontSize: \"20px\",\r\n              color: \"#fff\",\r\n              cursor: \"pointer\",\r\n              transform: \"scale(0.8)\",\r\n            }}\r\n            onClick={() => handleDelete()}\r\n          />\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {openDelete && (\r\n        <Delete\r\n          open={openDelete}\r\n          handleClose={handleClose}\r\n          teamName={teamName}\r\n          id={id}\r\n          setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n          setCurrentTeamName={setCurrentTeamName}\r\n        />\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <div style={{ display: \"flex\", margin: \"0.1rem\" }}>\r\n      <Button\r\n        className=\"TeamButtons\"\r\n        style={{\r\n          flex: discussion ? 1 : 0.95,\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n          color: \"rgb(0, 94, 62)\",\r\n          fontWeight: 600,\r\n          backgroundColor: \"rgba(7, 190, 129, 0.534)\",\r\n          padding: \"0.3rem\",\r\n          fontSize: \"0.7rem\",\r\n          borderRadius: discussion ? \"5px\" : \"5px 0 0 5px\",\r\n          textAlign: \"center\",\r\n          wordBreak: \"break-all\",\r\n          border: \"2px solid rgba(7, 190, 129, 0.534)\",\r\n          marginRight: 0,\r\n        }}\r\n        onClick={() => handleTeamChange()}\r\n      >\r\n        {teamName}\r\n      </Button>\r\n      {deleteBtn ? (\r\n        <Button\r\n          classes={{ root: classes.Btn }}\r\n          style={{\r\n            flex: 0.05,\r\n            background: \"rgb(2, 112, 75)\",\r\n            borderRadius: \"0 5px 5px 0\",\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          <DeleteIcon\r\n            style={{\r\n              fontSize: \"20px\",\r\n              color: \"#fff\",\r\n              cursor: \"pointer\",\r\n              transform: \"scale(0.8)\",\r\n            }}\r\n            onClick={() => handleDelete()}\r\n          />\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {openDelete && (\r\n        <Delete\r\n          open={openDelete}\r\n          handleClose={handleClose}\r\n          teamName={teamName}\r\n          setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n          setCurrentTeamName={setCurrentTeamName}\r\n          id={id}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamCard;\r\n",["145","146"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\navBar\\NavBar.js",["147","148"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js",["149","150","151"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Material.js",["152","153"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./style.css\";\r\nimport \"./heightMedia.css\";\r\nimport { db, storage } from \"../../firebase\";\r\nimport SnackBar from \"../snackbar/SnackBar\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport { useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Material({\r\n  open,\r\n  handleClose,\r\n  id,\r\n  todoImage,\r\n  admin,\r\n  currentUser,\r\n  comment,\r\n  urlTeamName,\r\n  checkedBy,\r\n}) {\r\n  const [editComment, setEditComment] = useState(comment);\r\n  const [done, setDone] = useState(false);\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const setText = (e) => {\r\n    setEditComment(e.target.value);\r\n    setDone(true);\r\n  };\r\n\r\n  const handleSet = () => {\r\n    setDone(true);\r\n    db.collection(\"teams\").doc(urlTeamName).collection(\"teamTodos\").doc(id).set(\r\n      {\r\n        comment: editComment,\r\n      },\r\n      { merge: true }\r\n    );\r\n    setEditComment(\"\");\r\n  };\r\n\r\n  const onSelectFile = async (event) => {\r\n    setOpenSnack(true);\r\n    try {\r\n      const image = event.target.files[0];\r\n      const uploadTask = await storage\r\n        .ref(`todoImages/${image.name}`)\r\n        .put(image);\r\n      storage\r\n        .ref(\"todoImages\")\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          console.log(url);\r\n          db.collection(\"teams\")\r\n            .doc(urlTeamName)\r\n            .collection(\"teamTodos\")\r\n            .doc(id)\r\n            .set(\r\n              {\r\n                todoImage: url,\r\n              },\r\n              { merge: true }\r\n            );\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setOpenSnack(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-slide-title\" className=\"title\">\r\n        Details\r\n        {checkedBy !== \"\" && (\r\n          <p style={{ fontSize: \"small\" }}>Completed By: {checkedBy}</p>\r\n        )}\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <DialogContentText\r\n          id=\"alert-dialog-slide-description\"\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          <div className=\"materialMainBox\">\r\n            {admin === currentUser.uid ? (\r\n              <div style={{ marginRight: \"0.5rem\" }}>\r\n                {\" \"}\r\n                <input\r\n                  hidden\r\n                  id=\"profile-image-file\"\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={(e) => onSelectFile(e, id)}\r\n                />\r\n                <Button\r\n                  className=\"uploadView\"\r\n                  style={{\r\n                    overflow: \"hidden\",\r\n                    width: \"10rem\",\r\n                    fontSize: \"0.5rem\",\r\n                    height: \"1.5rem\",\r\n                    color: \"#fff\",\r\n                    backgroundColor: \"rgb(5, 185, 125, 0.8)\",\r\n                    marginBottom: \"0.5rem\",\r\n                  }}\r\n                  onClick={() => {\r\n                    document.getElementById(\"profile-image-file\").click();\r\n                  }}\r\n                >\r\n                  {isSmall ? \"Upload Image\" : <PhotoCameraIcon />}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n              // <div style={{ flex: \"0.5\" }}>\r\n              //   {todoImage !== \"\" ? (\r\n              //     <a\r\n              //       href={todoImage}\r\n              //       download\r\n              //       target=\"_blank\"\r\n              //       style={{ textDecoration: \"none\" }}\r\n              //     >\r\n              //       <Button\r\n              //         style={{\r\n              //           width: \"95%\",\r\n              //           fontSize: \"0.7rem\",\r\n              //           height: \"1.5rem\",\r\n              //           color: \"#fff\",\r\n              //           fontWeight: 600,\r\n              //           backgroundColor: \"rgb(5, 185, 125)\",\r\n\r\n              //           marginBottom: \"0.5rem\",\r\n              //         }}\r\n              //       >\r\n              //         Download Image\r\n              //       </Button>\r\n              //     </a>\r\n              //   ) : (\r\n              //     \"\"\r\n              //   )}\r\n              // </div>\r\n            )}\r\n\r\n            <div style={{ marginLeft: \"0.5rem\" }}>\r\n              {todoImage !== \"\" ? (\r\n                <a\r\n                  href={todoImage}\r\n                  target=\"_blank\"\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <Button\r\n                    className=\"uploadView\"\r\n                    style={{\r\n                      overflow: \"hidden\",\r\n                      width: \"10rem\",\r\n                      fontSize: \"0.5rem\",\r\n                      height: \"1.5rem\",\r\n                      color: \"#fff\",\r\n                      backgroundColor: \"rgb(5, 185, 125, 0.8)\",\r\n\r\n                      marginBottom: \"0.5rem\",\r\n                    }}\r\n                  >\r\n                    {isSmall ? \"View Image\" : <ImageIcon />}\r\n                  </Button>\r\n                </a>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          <textarea\r\n            defaultValue={editComment}\r\n            className=\"commentTextBox\"\r\n            placeholder=\"Add something...\"\r\n            rows=\"5\"\r\n            cols=\"50\"\r\n            onChange={(e) => setText(e)}\r\n          />\r\n          <Button\r\n            className=\"uploadView\"\r\n            style={{\r\n              overflow: \"hidden\",\r\n              width: \"10rem\",\r\n              fontSize: \"0.7rem\",\r\n              height: \"1.5rem\",\r\n              color: \"#fff\",\r\n              fontWeight: 600,\r\n              backgroundColor: \"rgb(5, 185, 125, 0.8)\",\r\n              marginTop: \"0.5rem\",\r\n            }}\r\n            onClick={() => handleSet()}\r\n          >\r\n            {done ? \"Done\" : \"Add\"}\r\n          </Button>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      {openSnack && (\r\n        <SnackBar\r\n          open={openSnack}\r\n          handleClose={() => setOpenSnack(false)}\r\n          text={\"Uploading...\"}\r\n          material={true}\r\n        />\r\n      )}\r\n      <DialogActions>\r\n        <Button\r\n          className=\"closeMaterialModal\"\r\n          onClick={handleClose}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\slogger\\Slogger.js",["154","155","156","157","158","159","160","161","162"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\SlogPage.js",["163","164","165","166","167","168","169","170","171","172"],"import {\r\n  Button,\r\n  useMediaQuery,\r\n  useTheme,\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport newsPhoto from \"../../assets/images/signUpMainLogo.png\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport \"./style.css\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n    color: \"rgb(2, 95, 64)\",\r\n    background: \"rgba(4, 219, 148)\",\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: green,\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: green,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={1}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"100%\",\r\n  },\r\n  AppBar: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none\",\r\n    color: \"#000\",\r\n    marginTop: \"-1rem\",\r\n    paddingTop: \"0.5rem\",\r\n  },\r\n  Tabs: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"rgb(5, 185, 125)\",\r\n    height: 3,\r\n    borderRadius: \"7px\",\r\n    width: \"10.2rem\",\r\n  },\r\n  label: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"0.8rem\",\r\n    // lineHeight: \"2.3rem\",\r\n    color: \"#565656\",\r\n    textTransform: \"uppercase\",\r\n    // padding: \"1.8rem 4.2rem\",\r\n    padding: \"0.3rem\",\r\n  },\r\n  flexContainer: {\r\n    borderBottom: \"2px solid rgba(196, 196, 196, 0.5)\",\r\n  },\r\n}));\r\n\r\nfunction SlogPage() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [newsList, setNewsList] = useState([]);\r\n  const [searchedLocation, setSearchedLocation] = useState({});\r\n  const [time, setTime] = useState(0);\r\n  const [timeOn, setTimeOn] = useState(false);\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleSource = (x) => {\r\n    console.log(x);\r\n    handleClose();\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSubmitEnterWeather = async (event) => {\r\n    if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n      fetch(`\r\n      http://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&APPID=a1cefd4ba7c137e4c484e6a95d51aebe`)\r\n        .then((res) => res.json())\r\n        .then((data) => setSearchedLocation(data))\r\n        .then((data) => console.log(data));\r\n\r\n      setLocation(\"\");\r\n\r\n      db.collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"location\")\r\n        .onSnapshot((snapshot) => {\r\n          const loc = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n          }));\r\n          console.log(loc);\r\n\r\n          db.collection(\"users\")\r\n            .doc(currentUser.uid)\r\n            .collection(\"location\")\r\n            .doc(loc[0].id)\r\n            .set(\r\n              {\r\n                userLocation: location,\r\n              },\r\n              { merge: true }\r\n            );\r\n        });\r\n    }\r\n  };\r\n\r\n  const getWeather = async () => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"location\")\r\n      .onSnapshot((snapshot) => {\r\n        const loc = snapshot.docs.map((doc) => ({\r\n          l: doc.data().userLocation,\r\n        }));\r\n        console.log(loc);\r\n\r\n        fetch(`\r\n        http://api.openweathermap.org/data/2.5/weather?q=${loc[0]?.l}&units=metric&APPID=a1cefd4ba7c137e4c484e6a95d51aebe`)\r\n          .then((res) => res.json())\r\n          .then((data) => setSearchedLocation(data))\r\n          .then((data) => console.log(data));\r\n\r\n        setLocation(\"\");\r\n      });\r\n  };\r\n\r\n  const handleSubmitEnter = async (event) => {\r\n    if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (searchTerm === \"\") {\r\n      getNews();\r\n    } else {\r\n      fetch(`\r\n      https://newsapi.org/v2/everything?q=${searchTerm}&apiKey=5d28c193ee5846a3a06ba7b1ceb2f3ab`)\r\n        .then((res) => res.json())\r\n        .then((data) => setNewsList(data?.articles))\r\n        .then((data) => console.log(data?.articles));\r\n\r\n      setSearchTerm(\"\");\r\n    }\r\n  };\r\n\r\n  const getNews = async () => {\r\n    fetch(`\r\n    https://newsapi.org/v2/top-headlines?country=in&pageSize=100&apiKey=5d28c193ee5846a3a06ba7b1ceb2f3ab`)\r\n      .then((res) => res.json())\r\n      .then((data) => setNewsList(data?.articles))\r\n      .then((data) => console.log(data?.articles));\r\n\r\n    setSearchTerm(\"\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getNews();\r\n    getWeather();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    let interval = null;\r\n    if (timeOn) {\r\n      interval = setInterval(() => {\r\n        setTime((prevTime) => prevTime + 10);\r\n      }, 10);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [timeOn]);\r\n\r\n  return !isSmall ? (\r\n    <div>\r\n      <AppBar className={classes.AppBar} position=\"static\">\r\n        <Tabs\r\n          classes={{\r\n            indicator: classes.indicator,\r\n            flexContainer: classes.flexContainer,\r\n          }}\r\n          variant=\"fullWidth\"\r\n          scrollButtons=\"auto\"\r\n          className={classes.Tabs}\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n          style={{ position: \"relative\" }}\r\n        >\r\n          <Tab\r\n            className={classes.label}\r\n            label=\"NEWS / SEARCH\"\r\n            {...a11yProps(0)}\r\n          />\r\n          <Tab\r\n            className={classes.label}\r\n            label=\"WEATHER / SW\"\r\n            {...a11yProps(1)}\r\n          />\r\n        </Tabs>\r\n        <TabPanel\r\n          value={value}\r\n          index={0}\r\n          style={{ width: \"100%\", overflow: \"hidden\", marginBottom: \"1.5rem\" }}\r\n        >\r\n          <div\r\n            style={{ width: \"100%\", height: \"65vh\", overflow: \"hidden\" }}\r\n            className=\"slogPageRes\"\r\n          >\r\n            <SearchContainer>\r\n              <input\r\n                value={searchTerm}\r\n                type=\"text\"\r\n                style={{\r\n                  flex: \"0.7\",\r\n                  border: \"none\",\r\n                  background: \"none\",\r\n                  padding: \"0 0.5rem\",\r\n                  height: \"2rem\",\r\n                  outline: \"none\",\r\n                  borderBottom: \"2px solid rgb(5, 185, 125)\",\r\n                  margin: \"0 0.5rem\",\r\n                  color: \"rgb(3, 185, 124)\",\r\n                  fontSize: \"1rem\",\r\n                }}\r\n                onKeyDown={(e) => handleSubmitEnter(e)}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                placeholder=\"Search anything...\"\r\n              />\r\n              <Button\r\n                style={{\r\n                  background: \"rgb(5, 185, 125)\",\r\n                  flex: \"0.3\",\r\n                  color: \"#fff\",\r\n                  height: \"2rem\",\r\n                  marginRight: \"0.5rem\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n                onClick={handleSearch}\r\n              >\r\n                Search\r\n              </Button>\r\n            </SearchContainer>\r\n            <NewsContainer style={{ padding: 0, margin: 0 }}>\r\n              {newsList?.map((news) => (\r\n                <NewsBox>\r\n                  <img src={news.urlToImage ? news.urlToImage : newsPhoto} />\r\n                  <p>{news.title}</p>\r\n                  <a\r\n                    href={news.url}\r\n                    target=\"_blank\"\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"rgb(5, 185, 125, 0.55)\",\r\n                        color: \"#fff\",\r\n                        width: \"100%\",\r\n                      }}\r\n                    >\r\n                      read more\r\n                    </Button>\r\n                  </a>\r\n                </NewsBox>\r\n              ))}\r\n              <div style={{ height: \"5rem\", width: \"100%\" }}></div>\r\n            </NewsContainer>\r\n          </div>\r\n        </TabPanel>\r\n        <TabPanel\r\n          value={value}\r\n          index={1}\r\n          style={{ width: \"100%\", overflow: \"hidden\", marginBottom: \"1.5rem\" }}\r\n        >\r\n          <div\r\n            style={{ width: \"100%\", height: \"65vh\", overflow: \"hidden\" }}\r\n            className=\"slogPageRes\"\r\n          >\r\n            <WeatherContainer>\r\n              <SearchContainer\r\n                style={{\r\n                  width: \"70%\",\r\n                  height: \"2rem\",\r\n                  background: \"none\",\r\n                }}\r\n              >\r\n                <input\r\n                  value={location}\r\n                  type=\"text\"\r\n                  style={{\r\n                    flex: \"1\",\r\n                    border: \"none\",\r\n                    background: \"none\",\r\n                    padding: \"0 0.5rem\",\r\n                    height: \"1rem\",\r\n                    outline: \"none\",\r\n                    borderBottom: \"2px solid rgb(5, 185, 125)\",\r\n                    margin: \"0 0.5rem\",\r\n                    color: \"rgb(3, 185, 124)\",\r\n                    fontSize: \"0.7rem\",\r\n                  }}\r\n                  onKeyDown={(e) => handleSubmitEnterWeather(e)}\r\n                  onChange={(e) => setLocation(e.target.value)}\r\n                  placeholder=\"Type city and press enter...\"\r\n                />\r\n              </SearchContainer>\r\n              <h2\r\n                style={{ color: \"rgb(18, 107, 77)\", fontFamily: \"sans-serif\" }}\r\n              >\r\n                {searchedLocation.name},{searchedLocation.sys?.country}\r\n              </h2>\r\n              <div\r\n                style={{\r\n                  margin: \"1rem 0\",\r\n                  height: \"3rem\",\r\n                  width: \"7rem\",\r\n                  background: \"rgb(3, 148, 99)\",\r\n                  borderRadius: \"10px\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  borderBottom: \"3px solid rgb(18, 107, 77)\",\r\n                  borderRight: \"3px solid rgb(18, 107, 77)\",\r\n                }}\r\n              >\r\n                <h1 style={{ color: \"#fff\", fontFamily: \"sans-serif\" }}>\r\n                  {Math.round(searchedLocation.main?.temp)}\r\n                  <sup>o</sup>C\r\n                </h1>\r\n              </div>\r\n              <h4\r\n                style={{ color: \"rgb(3, 148, 99)\", fontFamily: \"sans-serif\" }}\r\n              >\r\n                {`Feels like: ${searchedLocation.main?.feels_like}`}\r\n                <sup>o</sup>C\r\n              </h4>\r\n              <h4\r\n                style={{\r\n                  color: \"rgb(3, 148, 99)\",\r\n                  fontFamily: \"sans-serif\",\r\n                  marginTop: \"1rem\",\r\n                }}\r\n              >\r\n                {searchedLocation?.weather\r\n                  ? searchedLocation?.weather[0].description?.toUpperCase()\r\n                  : \"\"}\r\n              </h4>\r\n            </WeatherContainer>\r\n            <StopWatch\r\n              style={{\r\n                marginTop: \"-7rem\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                padding: 0,\r\n              }}\r\n            >\r\n              <div className={timeOn ? \"stopWatchBoxStart\" : \"stopWatchBox\"}>\r\n                <span className=\"time\">\r\n                  {(\"0\" + Math.floor((time / 3600000) % 60)).slice(-2)}:\r\n                </span>\r\n                <span className=\"time\">\r\n                  {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:\r\n                </span>\r\n                <span className=\"time\">\r\n                  {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:\r\n                </span>\r\n                <span className=\"time\">\r\n                  {(\"0\" + ((time / 10) % 100)).slice(-2)}\r\n                </span>\r\n              </div>\r\n              <div\r\n                className=\"startStop\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  marginTop: \"1rem\",\r\n                }}\r\n              >\r\n                {!timeOn && time === 0 && (\r\n                  <Button className=\"timeBtn\" onClick={() => setTimeOn(true)}>\r\n                    Start\r\n                  </Button>\r\n                )}\r\n                {timeOn && (\r\n                  <Button className=\"timeBtn\" onClick={() => setTimeOn(false)}>\r\n                    Stop\r\n                  </Button>\r\n                )}\r\n                {!timeOn && time !== 0 && (\r\n                  <Button className=\"timeBtn\" onClick={() => setTimeOn(true)}>\r\n                    Resume\r\n                  </Button>\r\n                )}\r\n                {!timeOn && time > 0 && (\r\n                  <Button className=\"timeBtn\" onClick={() => setTime(0)}>\r\n                    Reset\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </StopWatch>\r\n          </div>\r\n        </TabPanel>\r\n      </AppBar>\r\n    </div>\r\n  ) : (\r\n    <SlogContainer>\r\n      <SlogLeftContainer>\r\n        <SearchContainer>\r\n          <input\r\n            value={searchTerm}\r\n            type=\"text\"\r\n            style={{\r\n              flex: \"0.8\",\r\n              border: \"none\",\r\n              background: \"none\",\r\n              padding: \"0 0.5rem\",\r\n              height: \"2rem\",\r\n              outline: \"none\",\r\n              borderBottom: \"2px solid rgb(5, 185, 125)\",\r\n              margin: \"0 0.5rem\",\r\n              color: \"rgb(3, 185, 124)\",\r\n              fontSize: \"1rem\",\r\n            }}\r\n            onKeyDown={(e) => handleSubmitEnter(e)}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            placeholder=\"Search anything...\"\r\n          />\r\n          <Button\r\n            style={{\r\n              background: \"rgb(5, 185, 125)\",\r\n              flex: \"0.2\",\r\n              color: \"#fff\",\r\n              height: \"2rem\",\r\n              marginRight: \"0.5rem\",\r\n              overflow: \"hidden\",\r\n            }}\r\n            onClick={handleSearch}\r\n          >\r\n            Search\r\n          </Button>\r\n        </SearchContainer>\r\n        <NewsContainer>\r\n          {newsList?.map((news) => (\r\n            <NewsBox>\r\n              <img src={news.urlToImage ? news.urlToImage : newsPhoto} />\r\n              <p>{news.title}</p>\r\n              <a\r\n                href={news.url}\r\n                target=\"_blank\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <Button\r\n                  style={{\r\n                    background: \"rgb(5, 185, 125, 0.55)\",\r\n                    color: \"#fff\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  read more\r\n                </Button>\r\n              </a>\r\n            </NewsBox>\r\n          ))}\r\n          <div style={{ height: \"3rem\", width: \"100%\" }}></div>\r\n        </NewsContainer>\r\n      </SlogLeftContainer>\r\n      <SlogRightContainer>\r\n        <WeatherContainer>\r\n          <SearchContainer\r\n            style={{\r\n              width: \"70%\",\r\n              height: \"2rem\",\r\n              background: \"none\",\r\n            }}\r\n          >\r\n            <input\r\n              value={location}\r\n              type=\"text\"\r\n              style={{\r\n                flex: \"1\",\r\n                border: \"none\",\r\n                background: \"none\",\r\n                padding: \"0 0.5rem\",\r\n                height: \"1rem\",\r\n                outline: \"none\",\r\n                borderBottom: \"2px solid rgb(5, 185, 125)\",\r\n                margin: \"0 0.5rem\",\r\n                color: \"rgb(3, 185, 124)\",\r\n                fontSize: \"0.7rem\",\r\n              }}\r\n              onKeyDown={(e) => handleSubmitEnterWeather(e)}\r\n              onChange={(e) => setLocation(e.target.value)}\r\n              placeholder=\"Type city and press enter...\"\r\n            />\r\n          </SearchContainer>\r\n          <h2\r\n            style={{\r\n              color: \"rgb(18, 107, 77)\",\r\n              fontFamily: \"sans-serif\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {searchedLocation.name},{searchedLocation.sys?.country}\r\n          </h2>\r\n          <div\r\n            style={{\r\n              margin: \"1rem 0\",\r\n              height: \"3rem\",\r\n              width: \"7rem\",\r\n              background: \"rgb(3, 148, 99)\",\r\n              borderRadius: \"10px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              borderBottom: \"3px solid rgb(18, 107, 77)\",\r\n              borderRight: \"3px solid rgb(18, 107, 77)\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <h1\r\n              style={{\r\n                color: \"#fff\",\r\n                fontFamily: \"sans-serif\",\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              {Math.round(searchedLocation.main?.temp)}\r\n              <sup>o</sup>C\r\n            </h1>\r\n          </div>\r\n          <h4\r\n            style={{\r\n              color: \"rgb(3, 148, 99)\",\r\n              fontFamily: \"sans-serif\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {`Feels like: ${searchedLocation.main?.feels_like}`}\r\n            <sup>o</sup>C\r\n          </h4>\r\n          <h4\r\n            style={{\r\n              color: \"rgb(3, 148, 99)\",\r\n              fontFamily: \"sans-serif\",\r\n              marginTop: \"1rem\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {searchedLocation?.weather\r\n              ? searchedLocation?.weather[0].description?.toUpperCase()\r\n              : \"\"}\r\n          </h4>\r\n        </WeatherContainer>\r\n        <StopWatch>\r\n          <div className={timeOn ? \"stopWatchBoxStart\" : \"stopWatchBox\"}>\r\n            <span className=\"time\">\r\n              {(\"0\" + Math.floor((time / 3600000) % 60)).slice(-2)}:\r\n            </span>\r\n            <span className=\"time\">\r\n              {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:\r\n            </span>\r\n            <span className=\"time\">\r\n              {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:\r\n            </span>\r\n            <span className=\"time\">\r\n              {(\"0\" + ((time / 10) % 100)).slice(-2)}\r\n            </span>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              marginLeft: \"1rem\",\r\n            }}\r\n          >\r\n            {!timeOn && time === 0 && (\r\n              <Button className=\"timeBtn\" onClick={() => setTimeOn(true)}>\r\n                Start\r\n              </Button>\r\n            )}\r\n            {timeOn && (\r\n              <Button className=\"timeBtn\" onClick={() => setTimeOn(false)}>\r\n                Stop\r\n              </Button>\r\n            )}\r\n            {!timeOn && time !== 0 && (\r\n              <Button className=\"timeBtn\" onClick={() => setTimeOn(true)}>\r\n                Resume\r\n              </Button>\r\n            )}\r\n            {!timeOn && time > 0 && (\r\n              <Button className=\"timeBtn\" onClick={() => setTime(0)}>\r\n                Reset\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </StopWatch>\r\n      </SlogRightContainer>\r\n    </SlogContainer>\r\n  );\r\n}\r\n\r\nexport default SlogPage;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"740px\",\r\n});\r\n\r\nconst SlogContainer = styled.div`\r\n  width: 98.5%;\r\n  height: 87%;\r\n  position: absolute;\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\nconst SlogLeftContainer = styled.div`\r\n  flex: 0.6;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n  padding-bottom: 2rem;\r\n\r\n  ${customMedia.lessThan(\"tablet\")`\r\nflex: 0.45;\r\n       padding: 0rem;\r\n       margin:0;\r\n       border:none;\r\n  `};\r\n\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:0.7rem;\r\n    `};\r\n  }\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n  background-color: rgba(5, 185, 125, 0.281);\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  align-items: center;\r\n  height: 3.5rem;\r\n  margin-bottom: 0.5rem;\r\n  overflow: hidden;\r\n\r\n  .menu {\r\n    color: rgba(5, 185, 125) !important;\r\n\r\n    &:hover {\r\n      color: rgba(5, 185, 125) !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NewsContainer = styled.div`\r\n  padding: 1rem;\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  display: grid;\r\n  grid-template-columns: 6fr 6fr;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      grid-template-columns: 6fr;\r\n    `};\r\n`;\r\n\r\nconst NewsBox = styled.div`\r\n  margin: 1rem;\r\n  border-radius: 5px;\r\n  box-shadow: 3px 3px 5px lightgreen, -0.5px -0.5px 3px lightgreen;\r\n  width: 18rem;\r\n  min-height: 19rem;\r\n  height: auto;\r\n  padding: 0.2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      width: 15rem !important;\r\n    `};\r\n\r\n  img {\r\n    object-fit: cover;\r\n    flex: 0.5;\r\n    border-radius: 5px;\r\n  }\r\n  p {\r\n    flex: 0.5;\r\n    font-weight: 600;\r\n    margin: 1rem;\r\n  }\r\n`;\r\nconst SlogRightContainer = styled.div`\r\n  flex: 0.4;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n  overflow: hidden;\r\n\r\n  ${customMedia.lessThan(\"tablet\")`\r\nflex: 0.45;\r\n       padding: 0rem;\r\n       margin:0;\r\n       border:none;\r\n  `};\r\n\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 0.7rem;\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:0.7rem;\r\n    `};\r\n  }\r\n`;\r\nconst WeatherContainer = styled.div`\r\n  flex: 0.5;\r\n  border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      margin:0rem 0 !important; \r\n    `};\r\n  }\r\n  h2 {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      margin:0rem 0 !important; \r\n    `};\r\n  }\r\n  h4 {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      margin:0rem 0 !important; \r\n    `};\r\n  }\r\n`;\r\nconst StopWatch = styled.div`\r\n  flex: 0.5;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  padding: 1rem;\r\n  overflow: hidden;\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      margin-top: -6rem !important;\r\n      flex: 0.6 !important;\r\n    `};\r\n\r\n  .stopWatchBox {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      height:9.3rem !important;\r\n      width:9.3rem !important;\r\n    `};\r\n  }\r\n  .stopWatchBoxStart {\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      height:9.3rem !important;\r\n      width:9.3rem !important;\r\n    `};\r\n  }\r\n`;\r\n",["173","174"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Delete.js",["175","176","177","178","179","180","181","182"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./style.css\";\r\nimport { db, storage } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Delete({\r\n  open,\r\n  handleClose,\r\n  teamName,\r\n  id,\r\n  setCurrentTeamName,\r\n  setOpenDeleteSnackBar,\r\n}) {\r\n  const [cannotDelete, setCannotDelete] = React.useState(false);\r\n  const [ModalOpen, setModalOpen] = React.useState(false);\r\n\r\n  const handleCloseDeleteListModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const { currentUser } = useAuth();\r\n  const handleJoinDelete = () => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .doc(id)\r\n      .delete();\r\n    handleClose();\r\n    setOpenDeleteSnackBar(true);\r\n    setCurrentTeamName(teamName);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const tempTeamList = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        admin: doc.data().admin,\r\n      }));\r\n      var count = 0;\r\n      tempTeamList.filter((team) => {\r\n        if (team.id === teamName) {\r\n          if (team.admin === currentUser.uid) {\r\n            count = count + 1;\r\n          }\r\n        }\r\n      });\r\n      if (count !== 0) {\r\n        // callDelete();\r\n      } else {\r\n        setCannotDelete(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      onClose={handleClose}\r\n      keepMounted\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        className=\"title\"\r\n      ></DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          {cannotDelete ? (\r\n            <p>\r\n              Team will be deleted on your side only,\r\n              <br /> Are you sure?{\" \"}\r\n            </p>\r\n          ) : (\r\n            <p>Are you sure?</p>\r\n          )}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button\r\n          className=\"addButtonDelete\"\r\n          onClick={handleClose}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"addButtonDelete\"\r\n          onClick={\r\n            cannotDelete ? () => handleJoinDelete() : () => setModalOpen(true)\r\n          }\r\n          color=\"primary\"\r\n        >\r\n          Delete\r\n        </Button>\r\n      </DialogActions>\r\n      {ModalOpen && (\r\n        <DeleteUserTeamModal\r\n          open={ModalOpen}\r\n          handleThisClose={handleCloseDeleteListModal}\r\n          teamName={teamName}\r\n          id={id}\r\n          closeBackModal={handleClose}\r\n          currentUser={currentUser.uid}\r\n          setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n          setCurrentTeamName={setCurrentTeamName}\r\n        />\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction DeleteUserTeamModal({\r\n  open,\r\n  handleThisClose,\r\n  teamName,\r\n  id,\r\n  closeBackModal,\r\n  currentUser,\r\n  setOpenDeleteSnackBar,\r\n  setCurrentTeamName,\r\n}) {\r\n  const [todoSideDelete, setTodoSideDelete] = React.useState(false);\r\n  const [userSideDelete, setUserSideDelete] = React.useState(false);\r\n  const [databaseSideDelete, setDatabaseSideDelete] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const userTeamDelete = () => {\r\n    db.collection(\"teams\").doc(teamName).set(\r\n      {\r\n        teamDeleted: true,\r\n      },\r\n      { merge: true }\r\n    );\r\n\r\n    db.collection(\"users\")\r\n      .doc(currentUser)\r\n      .collection(\"userTeams\")\r\n      .doc(id)\r\n      .delete();\r\n\r\n    setUserSideDelete(true);\r\n    setOpenDeleteSnackBar(true);\r\n    setCurrentTeamName(teamName);\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  const databaseDelete = () => {\r\n    db.collection(\"teams\").doc(teamName).delete();\r\n    setDatabaseSideDelete(true);\r\n  };\r\n\r\n  const deleteAllTodo = (todo) => {\r\n    todo.map((doc) => {\r\n      if (doc.todoImage !== \"\") {\r\n        var desertRef = storage.refFromURL(doc.todoImage);\r\n        desertRef\r\n          .delete()\r\n          .then(function () {\r\n            console.log(\"File deleted successfully\");\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      }\r\n\r\n      db.collection(\"teams\")\r\n        .doc(teamName)\r\n        .collection(\"teamTodos\")\r\n        .doc(doc.id)\r\n        .delete();\r\n    });\r\n  };\r\n\r\n  const todoDelete = () => {\r\n    db.collection(\"teams\")\r\n      .doc(teamName)\r\n      .collection(\"teamTodos\")\r\n      .onSnapshot((snapshot) => {\r\n        const todoDeleteList = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoImage: doc.data().todoImage,\r\n        }));\r\n\r\n        console.log(todoDeleteList);\r\n        deleteAllTodo(todoDeleteList);\r\n      });\r\n\r\n    setTodoSideDelete(true);\r\n  };\r\n\r\n  const handleCompleteClose = () => {\r\n    handleThisClose();\r\n    closeBackModal();\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      keepMounted\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        className=\"title\"\r\n      ></DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <h3 style={{ paddingBottom: \"1rem\" }}>\r\n              Help us to delete it from both place\r\n            </h3>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <p style={{ flex: 0.7 }}>Delete all todos: </p>\r\n              <Button\r\n                disabled={todoSideDelete ? true : false}\r\n                // className=\"addButton\"\r\n                className={todoSideDelete ? \"addButtonDisabled\" : \"addButton\"}\r\n                style={{ flex: 0.3 }}\r\n                onClick={() => todoDelete()}\r\n              >\r\n                {todoSideDelete ? \"deleted\" : \"delete\"}\r\n              </Button>\r\n            </div>\r\n            {/* <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <p style={{ flex: 0.7 }}>Delete from database: </p>\r\n              <Button\r\n                disabled={\r\n                  todoSideDelete ? (databaseSideDelete ? true : false) : true\r\n                }\r\n                // className=\"addButton\"\r\n                className={\r\n                  todoSideDelete\r\n                    ? databaseSideDelete\r\n                      ? \"addButtonDisabled\"\r\n                      : \"addButton\"\r\n                    : \"addButtonDisabled\"\r\n                }\r\n                style={{ flex: 0.3 }}\r\n                onClick={() => databaseDelete()}\r\n              >\r\n                {databaseSideDelete ? \"deleted\" : \"delete\"}\r\n              </Button>\r\n            </div> */}\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <p style={{ flex: 0.7 }}>Delete from your side: </p>\r\n              <Button\r\n                disabled={\r\n                  todoSideDelete ? (userSideDelete ? true : false) : true\r\n                }\r\n                // className=\"addButton\"\r\n\r\n                className={\r\n                  todoSideDelete\r\n                    ? userSideDelete\r\n                      ? \"addButtonDisabled\"\r\n                      : \"addButton\"\r\n                    : \"addButtonDisabled\"\r\n                }\r\n                style={{ flex: 0.3 }}\r\n                onClick={() => userTeamDelete()}\r\n              >\r\n                {userSideDelete ? \"deleted\" : \"delete\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button\r\n          className=\"addButton\"\r\n          onClick={() => handleCompleteClose()}\r\n          color=\"primary\"\r\n          disabled={userSideDelete && todoSideDelete ? false : true}\r\n          className={\r\n            todoSideDelete && userSideDelete ? \"addButton\" : \"addButtonDisabled\"\r\n          }\r\n        >\r\n          Done\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n",["183","184"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TodoCard.js",["185"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { db } from \"../../firebase\";\r\nimport moment from \"moment\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport { generateMedia } from \"styled-media-query\";\r\n\r\nfunction TodoCard({ id, text, date, checked }) {\r\n  const { currentUser } = useAuth();\r\n  const [localCheck, setLocalCheck] = useState(checked);\r\n\r\n  var timeDifference = new Date().getTimezoneOffset();\r\n  var date = moment(date).subtract(1, \"h\");\r\n  var dateComponent = date.utc().format(\"DD-MM-YYYY\");\r\n  var timeComponent = date.utc().utcOffset(timeDifference).format(\"HH:mm\");\r\n\r\n  const handleDelete = (todoId) => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"todos\")\r\n      .doc(todoId)\r\n      .delete();\r\n  };\r\n\r\n  const handleChecked = () => {\r\n    setLocalCheck(!localCheck);\r\n    db.collection(\"users\").doc(currentUser.uid).collection(\"todos\").doc(id).set(\r\n      {\r\n        checked: localCheck,\r\n      },\r\n      { merge: true }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TodoMainCard>\r\n      <TodoStartIcon>\r\n        <CustomTooltip title=\"Double tap\" arrow placement=\"left\">\r\n          {checked ? (\r\n            <CheckBoxIcon\r\n              className=\"todoStartIcon\"\r\n              onClick={() => handleChecked()}\r\n            />\r\n          ) : (\r\n            <CheckBoxOutlineBlankIcon\r\n              className=\"todoStartIcon\"\r\n              onClick={() => handleChecked()}\r\n            />\r\n          )}\r\n        </CustomTooltip>\r\n      </TodoStartIcon>\r\n\r\n      <TodoTextBox>\r\n        <p\r\n          className=\"todoDate\"\r\n          style={{\r\n            color: \"rgba(0, 99, 66, 0.668)\",\r\n            textAlign: \"end\",\r\n            paddingBottom: \"0.3rem\",\r\n          }}\r\n        >\r\n          {dateComponent}\r\n          {\" / \"}\r\n          {timeComponent}\r\n        </p>\r\n        <p\r\n          style={{\r\n            color: \"rgba(0, 99, 66, 0.868)\",\r\n            fontWeight: 400,\r\n            width: \"100%\",\r\n            wordBreak: \"break-all\",\r\n            verticalAlign: \"center\",\r\n            height: \"auto\",\r\n            // lineHeight: \"30px\",\r\n            marginTop: \"-5px\",\r\n            fontFamily: \"Times New Roman\",\r\n          }}\r\n        >\r\n          {text}\r\n        </p>\r\n      </TodoTextBox>\r\n      <TodoActions>\r\n        <DeleteIcon className=\"delete\" onClick={() => handleDelete(id)} />\r\n      </TodoActions>\r\n    </TodoMainCard>\r\n  );\r\n}\r\n\r\nexport default TodoCard;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst TodoMainCard = styled.div`\r\n  margin: 0.7rem 0rem;\r\n  box-shadow: 0px 1px 5px rgb(0, 129, 86);\r\n  background-color: rgb(231, 250, 243);\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 3rem;\r\n  min-height: 3rem;\r\n  display: flex;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n`;\r\nconst TodoStartIcon = styled.div`\r\n  transform: scale(0.8);\r\n  flex: 0.07;\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-right: 2px solid rgba(0, 99, 66, 0.368);\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex: 0.09;\r\n    `};\r\n\r\n  .todoStartIcon {\r\n    color: rgba(0, 99, 66, 0.568);\r\n    font-size: 1.7rem;\r\n    object-fit: contain;\r\n    cursor: pointer;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      transform:scale(0.8);\r\n      padding:0 0.3rem;\r\n    `};\r\n  }\r\n`;\r\nconst TodoTextBox = styled.div`\r\n  flex: 0.88;\r\n  width: 100%;\r\n  padding: 0.2rem 0.5rem;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n\r\n  .todoDate {\r\n    font-size: 13px;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n       font-size:9px;\r\n    `};\r\n  }\r\n`;\r\nconst TodoActions = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: #fff;\r\n  flex: 0.05;\r\n  width: 100%;\r\n  height: auto;\r\n  padding: 0.2rem 0.5rem;\r\n  background-color: rgba(0, 99, 66, 0.868);\r\n  border-radius: 30px 0px 0px 30px;\r\n  border-left: 2px solid rgba(0, 99, 66, 0.768);\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex: 0.09;\r\n    `};\r\n\r\n  .delete {\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      transform:scale(0.8);\r\n    `};\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\profile\\Profile.js",["186","187","188","189","190","191","192"],"import {\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport selectTeam from \"../../assets/images/selectTeam.svg\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { db, storage } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport SnackBar from \"../snackbar/SnackBar\";\r\nimport \"./profile.css\";\r\nimport MemberCard from \"./MemberCard\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SidebarProfile from \"../todo/sidebar/SidebarProfile\";\r\n\r\nfunction Profile() {\r\n  const [profileImage, setProfileImage] = useState(\"\");\r\n  const [profilePath, setProfilePath] = useState(\"\");\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const [profileError, setProfileError] = useState(false);\r\n  const [profileSetter, setProfileSetter] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [skills, setSkills] = useState(\"\");\r\n  const [skillList, setSkillList] = useState([]);\r\n  const [bio, setBio] = useState(\"\");\r\n  const [facebook, setFacebook] = useState(\"\");\r\n  const [instagram, setInstagram] = useState(\"\");\r\n  const [github, setGithub] = useState(\"\");\r\n  const [linkedin, setLinkedin] = useState(\"\");\r\n  const [teams, setTeams] = useState([]);\r\n  const [allMemberIdList, setAllMemberIdList] = useState([]);\r\n  const [team, handleChangeTeam] = React.useState(\"\");\r\n  const [endorsementList, setEndorsementList] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleSaveProfile = () => {\r\n    const _skillList = skills.split(\",\");\r\n    setSkillList(_skillList);\r\n\r\n    setProfileSetter(!profileSetter);\r\n\r\n    if (profileSetter) {\r\n      if (name !== \"\" && email !== \"\") {\r\n        setProfileError(false);\r\n        db.collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"profile\")\r\n          .onSnapshot((snapshot) => {\r\n            if (snapshot.docs.length === 0) {\r\n              db.collection(\"users\")\r\n                .doc(currentUser.uid)\r\n                .collection(\"profile\")\r\n                .add({\r\n                  name: name,\r\n                  email: email,\r\n                  contact: contact,\r\n                  bio: bio,\r\n                  skills: skills,\r\n                  facebook: facebook,\r\n                  instagram: instagram,\r\n                  github: github,\r\n                  linkedin: linkedin,\r\n                  profileImage: profileImage,\r\n                });\r\n            } else {\r\n              const prevProfile = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n              }));\r\n\r\n              db.collection(\"users\")\r\n                .doc(currentUser.uid)\r\n                .collection(\"profile\")\r\n                .doc(prevProfile[0].id)\r\n                .set(\r\n                  {\r\n                    name: name,\r\n                    email: email,\r\n                    bio: bio === \"\" ? \"NoBio\" : bio,\r\n                    contact: contact === \"\" ? \"NoContact\" : contact,\r\n                    skills: skills === \"\" ? \"NoSkill\" : skills,\r\n                    facebook: facebook === \"\" ? \"NoLink\" : facebook,\r\n                    instagram: instagram === \"\" ? \"NoLink\" : instagram,\r\n                    github: github === \"\" ? \"NoLink\" : github,\r\n                    linkedin: linkedin === \"\" ? \"NoLink\" : linkedin,\r\n                    profileImage: profileImage === \"\" ? \"NoLink\" : profileImage,\r\n                  },\r\n                  { merge: true }\r\n                );\r\n            }\r\n          });\r\n      } else {\r\n        setProfileError(true);\r\n      }\r\n    } else {\r\n      console.log(\"Not\");\r\n    }\r\n  };\r\n\r\n  const onSelectFile = async (event) => {\r\n    var path = (window.URL || window.webkitURL).createObjectURL(\r\n      event.target.files[0]\r\n    );\r\n    setProfilePath(path.slice(5));\r\n    setOpenSnack(true);\r\n    try {\r\n      const image = event.target.files[0];\r\n      const uploadTask = await storage\r\n        .ref(`profileImages/${image.name}`)\r\n        .put(image);\r\n      storage\r\n        .ref(\"profileImages\")\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          console.log(url);\r\n          setProfileImage(url);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setOpenSnack(false);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"endorsement\")\r\n      .doc(id)\r\n      .delete();\r\n  };\r\n\r\n  const getAllMembers = (selectedTeamName) => {\r\n    db.collection(\"teams\")\r\n      .doc(selectedTeamName)\r\n      .collection(\"members\")\r\n      .onSnapshot((snapshot) => {\r\n        const memberIdList = snapshot.docs.map((doc) => ({\r\n          id: doc.data().id,\r\n        }));\r\n\r\n        setAllMemberIdList(memberIdList);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"profile\")\r\n      .onSnapshot((snapshot) => {\r\n        if (snapshot.docs.length === 0) {\r\n          console.log(\"New User\");\r\n        } else {\r\n          const profile = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            name: doc.data().name,\r\n            email: doc.data().email,\r\n            profileImage: doc.data().profileImage,\r\n            skills: doc.data().skills,\r\n            contact: doc.data().contact,\r\n            facebook: doc.data().facebook,\r\n            instagram: doc.data().instagram,\r\n            linkedin: doc.data().linkedin,\r\n            github: doc.data().github,\r\n            bio: doc.data().bio,\r\n          }));\r\n          setProfileImage(profile[0].profileImage);\r\n          setName(profile[0].name);\r\n          setEmail(profile[0].email);\r\n          setSkills(profile[0].skills);\r\n          setContact(profile[0].contact);\r\n          setFacebook(profile[0].facebook);\r\n          setInstagram(profile[0].instagram);\r\n          setBio(profile[0].bio);\r\n          setGithub(profile[0].github);\r\n          setLinkedin(profile[0].linkedin);\r\n          setSkillList(profile[0].skills.split(\",\"));\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    var _teams = [];\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"userTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        _teams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n          admin: doc.data().admin,\r\n        }));\r\n      });\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _joinedTeams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n        }));\r\n        setTeams([..._teams, ..._joinedTeams]);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"endorsement\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          profileImage: doc.data().GiverProfileImage,\r\n          name: doc.data().GiverName,\r\n          email: doc.data().GiverEmail,\r\n          endorsement: doc.data().GiverEndorsement,\r\n          GiverId: doc.data().GiverId,\r\n        }));\r\n        console.log(list);\r\n        setEndorsementList(list);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profilePageContainer\">\r\n      {!isSmall ? (\r\n        <SidebarProfile />\r\n      ) : (\r\n        <div className=\"profilePageMyProfile\">\r\n          <div className=\"profilePageTopBar\">\r\n            <div className=\"avatarBox\">\r\n              <input\r\n                hidden\r\n                id=\"profile-image-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={(e) => onSelectFile(e)}\r\n              />\r\n              {profileSetter ? (\r\n                <IconButton\r\n                  className=\"avatarEdit\"\r\n                  onClick={() => {\r\n                    document.getElementById(\"profile-image-file\").click();\r\n                  }}\r\n                >\r\n                  <CreateIcon />\r\n                </IconButton>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Avatar className=\"avatar\" alt={name} src={profileImage} />\r\n            </div>\r\n\r\n            <Button\r\n              className=\"profilePageProfileEdit\"\r\n              onClick={() => handleSaveProfile()}\r\n            >\r\n              {profileSetter ? \"done\" : \"edit\"}\r\n            </Button>\r\n          </div>\r\n          <div className=\"profilePageInputBox\">\r\n            <label>Name:</label>\r\n            <input\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className=\"profilePageInput\"\r\n              placeholder=\"Full name...\"\r\n            />\r\n          </div>\r\n          <div className=\"profilePageInputBox\">\r\n            <label>Email:</label>\r\n            <input\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"profilePageInput\"\r\n              placeholder=\"Email given on slogger...\"\r\n            />\r\n          </div>\r\n          <div className=\"profilePageInputBox\">\r\n            <label>Contact:</label>\r\n            <input\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={contact}\r\n              onChange={(e) => setContact(e.target.value)}\r\n              className=\"profilePageInput\"\r\n              placeholder=\"Phone number...\"\r\n            />\r\n          </div>\r\n          <div className=\"profilePageInputBox\" style={{ height: \"auto\" }}>\r\n            <label>Bio:</label>\r\n            <textarea\r\n              style={{ resize: \"none\", padding: \"7px\" }}\r\n              rows=\"5\"\r\n              cols=\"5\"\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={bio}\r\n              onChange={(e) => setBio(e.target.value)}\r\n              className=\"profilePageInput\"\r\n              placeholder=\"Say something about yourself...\"\r\n            />\r\n          </div>\r\n          {profileSetter ? (\r\n            <>\r\n              <div className=\"profilePageInputBox\">\r\n                <label>Skills:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={skills}\r\n                  onChange={(e) => setSkills(e.target.value)}\r\n                  className=\"profilePageInput\"\r\n                  placeholder=\"Skills with comma separated...\"\r\n                />\r\n              </div>\r\n              <div className=\"profilePageInputBox\">\r\n                <label>Facebook Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={facebook}\r\n                  onChange={(e) => setFacebook(e.target.value)}\r\n                  className=\"profilePageInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n              <div className=\"profilePageInputBox\">\r\n                <label>Instagram Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={instagram}\r\n                  onChange={(e) => setInstagram(e.target.value)}\r\n                  className=\"profilePageInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n              <div className=\"profilePageInputBox\">\r\n                <label>Github Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={github}\r\n                  onChange={(e) => setGithub(e.target.value)}\r\n                  className=\"profilePageInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n              <div className=\"profilePageInputBox\">\r\n                <label>Linkedin Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={linkedin}\r\n                  onChange={(e) => setLinkedin(e.target.value)}\r\n                  className=\"profilePageInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"skillListAndLinkBox\">\r\n              {skillList.length !== 0 ? (\r\n                <div className=\"skillContainer\">\r\n                  <p>Skills: </p>\r\n                  <div className=\"skillBox\">\r\n                    {skillList?.map((skill) => (\r\n                      <div className=\"skill\">{skill}</div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <div className=\"linkContainer\">\r\n                {facebook === \"\" || facebook === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={facebook}>\r\n                    <FacebookIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n                {instagram === \"\" || instagram === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={instagram}>\r\n                    <InstagramIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n                {github === \"\" || github === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={github}>\r\n                    <GitHubIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n                {linkedin === \"\" || linkedin === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={linkedin}>\r\n                    <LinkedInIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n              </div>\r\n              <p className=\"endorsementHeading\">\r\n                {endorsementList?.length === 0 ? \"No\" : \"My\"} Endorsements\r\n              </p>\r\n              {endorsementList?.map((data) => (\r\n                <Paper elevation={3} className=\"EndContainer\">\r\n                  <div className=\"EndTopContainer\">\r\n                    <div className=\"EndCircle\">\r\n                      <Avatar\r\n                        className=\"EndProfileImage\"\r\n                        alt={data.name}\r\n                        src={data.profileImage}\r\n                      />\r\n                    </div>\r\n                    <div className=\"EndNameContainer\">\r\n                      <p>\r\n                        <PersonIcon className=\"EndIcon\" />\r\n                        {data.name}\r\n                      </p>\r\n                      <p>\r\n                        <EmailIcon className=\"EndIcon\" />\r\n                        {data.email}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"EndLinkContainer\">\r\n                      <DeleteIcon\r\n                        className=\"memberIcon\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => handleDelete(data.GiverId)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"EndEndContainer\" style={{ color: \"#40856e\" }}>\r\n                    <p>{data.endorsement}</p>\r\n                  </div>\r\n                </Paper>\r\n              ))}\r\n            </div>\r\n          )}\r\n          {openSnack && (\r\n            <SnackBar\r\n              open={openSnack}\r\n              handleClose={() => setOpenSnack(false)}\r\n              text={\"Uploading...\"}\r\n              material={true}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"otherProfileSection\">\r\n        <p>{teams?.length === 0 ? \"No team found\" : \"Select Team :\"}</p>\r\n        <Select\r\n          disabled={teams?.length === 0 ? true : false}\r\n          value={team}\r\n          onChange={(e) => handleChangeTeam(e.target.value)}\r\n          disableUnderline\r\n          style={{\r\n            background: \"#d1faec\",\r\n            borderRadius: 10,\r\n            width: \"100%\",\r\n            padding: \"5px 10px\",\r\n          }}\r\n        >\r\n          {teams?.map((team) => (\r\n            <MenuItem\r\n              key={team.id}\r\n              value={team.teamName}\r\n              style={{\r\n                color: \"#2ec592\",\r\n              }}\r\n              onClick={() => getAllMembers(team.teamName)}\r\n            >\r\n              {team.teamName}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        {allMemberIdList.length === 0 ? (\r\n          <img\r\n            src={selectTeam}\r\n            style={{\r\n              height: \"13rem\",\r\n              width: \"13rem\",\r\n              objectFit: \"contain\",\r\n              margin: \"5rem\",\r\n            }}\r\n          />\r\n        ) : (\r\n          allMemberIdList?.map((memberId) =>\r\n            memberId.id === currentUser.uid ? (\r\n              \"\"\r\n            ) : (\r\n              <MemberCard\r\n                id={memberId.id}\r\n                name={name}\r\n                email={email}\r\n                profileImage={profileImage}\r\n              />\r\n            )\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\auth\\SignUp.js",["193","194","195","196","197","198","199"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Dialog.js",["200","201","202","203","204","205"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./style.css\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./heightMedia.css\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AddingTeamModal({\r\n  open,\r\n  handleClose,\r\n  make,\r\n  setCurrentTeamName,\r\n  openSnackbar,\r\n}) {\r\n  const [inputTeamName, setInputTeamName] = useState(\"\");\r\n  const [teamList, setTeamList] = useState([]);\r\n  const [alreadyExist, setAlreadyExist] = useState(false);\r\n  const [doesNotExist, setDoesNotExist] = useState(false);\r\n  const [already, setAlready] = useState(1);\r\n  const { currentUser } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const handleInputChange = (value) => {\r\n    setInputTeamName(value);\r\n    setAlreadyExist(false);\r\n    setDoesNotExist(false);\r\n  };\r\n\r\n  const handleMakeSubmit = () => {\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const list = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n      }));\r\n      console.log(list);\r\n      var count = 0;\r\n      list.filter((filter) => {\r\n        if (filter.id === inputTeamName) {\r\n          count = count + 1;\r\n        }\r\n      });\r\n      if (count !== 0) {\r\n        setAlreadyExist(true);\r\n      } else {\r\n        makeSubmit();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleJoinSubmit = () => {\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const list = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n      }));\r\n      console.log(list);\r\n      var count = 0;\r\n      list.filter((filter) => {\r\n        if (filter.id === inputTeamName) {\r\n          count = count + 1;\r\n        }\r\n      });\r\n      if (count !== 0) {\r\n        joinSubmit();\r\n      } else {\r\n        setDoesNotExist(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const joinSubmit = () => {\r\n    db.collection(\"users\").doc(currentUser.uid).collection(\"joinTeams\").add({\r\n      teamName: inputTeamName,\r\n      timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    db.collection(\"teams\").doc(inputTeamName).collection(\"members\").add({\r\n      id: currentUser.uid,\r\n    });\r\n    setCurrentTeamName(inputTeamName);\r\n    history.push(`/home/${inputTeamName}`);\r\n    handleClose();\r\n    openSnackbar(true);\r\n  };\r\n\r\n  const addTeamNameToUser = () => {\r\n    db.collection(\"users\").doc(currentUser.uid).collection(\"userTeams\").add({\r\n      teamName: inputTeamName,\r\n      admin: currentUser.uid,\r\n      timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    db.collection(\"teams\").doc(inputTeamName).collection(\"members\").add({\r\n      id: currentUser.uid,\r\n    });\r\n    setCurrentTeamName(inputTeamName);\r\n    history.push(`/home/${inputTeamName}`);\r\n    handleClose();\r\n    openSnackbar(true);\r\n  };\r\n\r\n  // const makeTeamCollection = () => {\r\n  //   db.collection(\"teams\").doc(inputTeamName).collection(\"teamTodos\").add({\r\n  //     todoText: \"hello\",\r\n  //   });\r\n  //   addTeamNameToUser();\r\n  // };\r\n\r\n  const makeSubmit = () => {\r\n    db.collection(\"teams\").doc(inputTeamName).set(\r\n      {\r\n        admin: currentUser.uid,\r\n        teamDeleted: false,\r\n      },\r\n      { merge: true }\r\n    );\r\n    addTeamNameToUser();\r\n\r\n    // makeTeamCollection();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-slide-title\" className=\"title\">\r\n        {make ? \"Make your team\" : \"Join a team\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          {alreadyExist ? (\r\n            <p\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"red\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              This name already exits\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {doesNotExist ? (\r\n            <p\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"red\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              No team found\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"inputFieldModal\">\r\n            <input\r\n              className=\"inputModal\"\r\n              value={inputTeamName}\r\n              type=\"text\"\r\n              placeholder={make ? \"Give team name...\" : \"Write team name...\"}\r\n              onChange={(e) => handleInputChange(e.target.value)}\r\n            ></input>\r\n          </div>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          className=\"addButtonModal\"\r\n          onClick={handleClose}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"addButtonModal\"\r\n          onClick={make ? () => handleMakeSubmit() : () => handleJoinSubmit()}\r\n          color=\"primary\"\r\n        >\r\n          {make ? \"Make\" : \"join\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Discussion.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\CustomTooltip.js",[],["254","255"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarProfile.js",["256","257","258","259","260","261","262","263","264","265","266","267"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./sidebar.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport { db, storage } from \"../../../firebase\";\r\nimport { Avatar, Paper } from \"@material-ui/core\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SnackBar from \"../../snackbar/SnackBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    color: \"#fff\",\r\n    background: \"rgba(0, 145, 96, 0.9)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SidebarProfile() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n  const { currentUser, logOut } = useAuth();\r\n  const [profileImage, setProfileImage] = useState(\"\");\r\n  const [profilePath, setProfilePath] = useState(\"\");\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const [profileError, setProfileError] = useState(false);\r\n  const [profileSetter, setProfileSetter] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [skills, setSkills] = useState(\"\");\r\n  const [skillList, setSkillList] = useState([]);\r\n  const [bio, setBio] = useState(\"\");\r\n  const [facebook, setFacebook] = useState(\"\");\r\n  const [instagram, setInstagram] = useState(\"\");\r\n  const [github, setGithub] = useState(\"\");\r\n  const [linkedin, setLinkedin] = useState(\"\");\r\n  const [teams, setTeams] = useState([]);\r\n  const [allMemberIdList, setAllMemberIdList] = useState([]);\r\n  const [team, handleChangeTeam] = React.useState(\"\");\r\n  const [endorsementList, setEndorsementList] = useState([]);\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSaveProfile = () => {\r\n    const _skillList = skills.split(\",\");\r\n    setSkillList(_skillList);\r\n\r\n    setProfileSetter(!profileSetter);\r\n\r\n    if (profileSetter) {\r\n      if (name !== \"\" && email !== \"\") {\r\n        setProfileError(false);\r\n        db.collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"profile\")\r\n          .onSnapshot((snapshot) => {\r\n            if (snapshot.docs.length === 0) {\r\n              db.collection(\"users\")\r\n                .doc(currentUser.uid)\r\n                .collection(\"profile\")\r\n                .add({\r\n                  name: name,\r\n                  email: email,\r\n                  contact: contact,\r\n                  bio: bio,\r\n                  skills: skills,\r\n                  facebook: facebook,\r\n                  instagram: instagram,\r\n                  github: github,\r\n                  linkedin: linkedin,\r\n                  profileImage: profileImage,\r\n                });\r\n            } else {\r\n              const prevProfile = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n              }));\r\n\r\n              db.collection(\"users\")\r\n                .doc(currentUser.uid)\r\n                .collection(\"profile\")\r\n                .doc(prevProfile[0].id)\r\n                .set(\r\n                  {\r\n                    name: name,\r\n                    email: email,\r\n                    bio: bio === \"\" ? \"NoContact\" : bio,\r\n                    contact: contact === \"\" ? \"NoContact\" : contact,\r\n                    skills: skills === \"\" ? \"NoSkill\" : skills,\r\n                    facebook: facebook === \"\" ? \"NoLink\" : facebook,\r\n                    instagram: instagram === \"\" ? \"NoLink\" : instagram,\r\n                    github: github === \"\" ? \"NoLink\" : github,\r\n                    linkedin: linkedin === \"\" ? \"NoLink\" : linkedin,\r\n                    profileImage: profileImage === \"\" ? \"NoLink\" : profileImage,\r\n                  },\r\n                  { merge: true }\r\n                );\r\n            }\r\n          });\r\n      } else {\r\n        setProfileError(true);\r\n      }\r\n    } else {\r\n      console.log(\"Not\");\r\n    }\r\n  };\r\n\r\n  const onSelectFile = async (event) => {\r\n    var path = (window.URL || window.webkitURL).createObjectURL(\r\n      event.target.files[0]\r\n    );\r\n    setProfilePath(path.slice(5));\r\n    setOpenSnack(true);\r\n    try {\r\n      const image = event.target.files[0];\r\n      const uploadTask = await storage\r\n        .ref(`profileImages/${image.name}`)\r\n        .put(image);\r\n      storage\r\n        .ref(\"profileImages\")\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          console.log(url);\r\n          setProfileImage(url);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setOpenSnack(false);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"endorsement\")\r\n      .doc(id)\r\n      .delete();\r\n  };\r\n\r\n  const getAllMembers = (selectedTeamName) => {\r\n    db.collection(\"teams\")\r\n      .doc(selectedTeamName)\r\n      .collection(\"members\")\r\n      .onSnapshot((snapshot) => {\r\n        const memberIdList = snapshot.docs.map((doc) => ({\r\n          id: doc.data().id,\r\n        }));\r\n\r\n        setAllMemberIdList(memberIdList);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"profile\")\r\n      .onSnapshot((snapshot) => {\r\n        if (snapshot.docs.length === 0) {\r\n          console.log(\"New User\");\r\n        } else {\r\n          const profile = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            name: doc.data().name,\r\n            email: doc.data().email,\r\n            profileImage: doc.data().profileImage,\r\n            skills: doc.data().skills,\r\n            contact: doc.data().contact,\r\n            facebook: doc.data().facebook,\r\n            instagram: doc.data().instagram,\r\n            linkedin: doc.data().linkedin,\r\n            github: doc.data().github,\r\n            bio: doc.data().bio,\r\n          }));\r\n          setProfileImage(profile[0].profileImage);\r\n          setName(profile[0].name);\r\n          setEmail(profile[0].email);\r\n          setSkills(profile[0].skills);\r\n          setContact(profile[0].contact);\r\n          setFacebook(profile[0].facebook);\r\n          setInstagram(profile[0].instagram);\r\n          setBio(profile[0].bio);\r\n          setGithub(profile[0].github);\r\n          setLinkedin(profile[0].linkedin);\r\n          setSkillList(profile[0].skills.split(\",\"));\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"endorsement\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          profileImage: doc.data().GiverProfileImage,\r\n          name: doc.data().GiverName,\r\n          email: doc.data().GiverEmail,\r\n          endorsement: doc.data().GiverEndorsement,\r\n          GiverId: doc.data().GiverId,\r\n        }));\r\n        console.log(list);\r\n        setEndorsementList(list);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addItemsProfile\" onClick={handleClickOpen}>\r\n        My profile\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            {/* <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/help\")}\r\n            >\r\n              Help\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className=\"sidebarProfileMyProfile\">\r\n          <div className=\"sidebarProfileTopBar\">\r\n            <div className=\"avatarBox\">\r\n              <input\r\n                hidden\r\n                id=\"profile-image-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={(e) => onSelectFile(e)}\r\n              />\r\n              {profileSetter ? (\r\n                <IconButton\r\n                  className=\"avatarEdit\"\r\n                  onClick={() => {\r\n                    document.getElementById(\"profile-image-file\").click();\r\n                  }}\r\n                >\r\n                  <CreateIcon />\r\n                </IconButton>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Avatar className=\"avatar\" alt={name} src={profileImage} />\r\n            </div>\r\n\r\n            <Button\r\n              className=\"sidebarProfileProfileEdit\"\r\n              onClick={() => handleSaveProfile()}\r\n            >\r\n              {profileSetter ? \"done\" : \"edit\"}\r\n            </Button>\r\n          </div>\r\n          <div className=\"sidebarProfileInputBox\">\r\n            <label>Name:</label>\r\n            <input\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className=\"sidebarProfileInput\"\r\n              placeholder=\"Full name...\"\r\n            />\r\n          </div>\r\n          <div className=\"sidebarProfileInputBox\">\r\n            <label>Email:</label>\r\n            <input\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"sidebarProfileInput\"\r\n              placeholder=\"Email given on slogger...\"\r\n            />\r\n          </div>\r\n          <div className=\"sidebarProfileInputBox\">\r\n            <label>Contact:</label>\r\n            <input\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={contact}\r\n              onChange={(e) => setContact(e.target.value)}\r\n              className=\"sidebarProfileInput\"\r\n              placeholder=\"Phone number...\"\r\n            />\r\n          </div>\r\n          <div className=\"sidebarProfileInputBox\" style={{ height: \"auto\" }}>\r\n            <label>Bio:</label>\r\n            <textarea\r\n              style={{\r\n                resize: \"none\",\r\n                padding: \"7px\",\r\n              }}\r\n              rows=\"5\"\r\n              cols=\"5\"\r\n              disabled={!profileSetter}\r\n              type=\"text\"\r\n              value={bio}\r\n              onChange={(e) => setBio(e.target.value)}\r\n              className=\"sidebarProfileInput\"\r\n              placeholder=\"Say something about yourself...\"\r\n            />\r\n          </div>\r\n          {profileSetter ? (\r\n            <>\r\n              <div className=\"sidebarProfileInputBox\">\r\n                <label>Skills:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={skills}\r\n                  onChange={(e) => setSkills(e.target.value)}\r\n                  className=\"sidebarProfileInput\"\r\n                  placeholder=\"Skills with comma separated...\"\r\n                />\r\n              </div>\r\n              <div className=\"sidebarProfileInputBox\">\r\n                <label>Facebook Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={facebook}\r\n                  onChange={(e) => setFacebook(e.target.value)}\r\n                  className=\"sidebarProfileInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n              <div className=\"sidebarProfileInputBox\">\r\n                <label>Instagram Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={instagram}\r\n                  onChange={(e) => setInstagram(e.target.value)}\r\n                  className=\"sidebarProfileInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n              <div className=\"sidebarProfileInputBox\">\r\n                <label>Github Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={github}\r\n                  onChange={(e) => setGithub(e.target.value)}\r\n                  className=\"sidebarProfileInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n              <div className=\"sidebarProfileInputBox\">\r\n                <label>Linkedin Link:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={linkedin}\r\n                  onChange={(e) => setLinkedin(e.target.value)}\r\n                  className=\"sidebarProfileInput\"\r\n                  placeholder=\"Give your profile page URL...\"\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"skillListAndLinkBox\">\r\n              {skillList.length !== 0 ? (\r\n                <div className=\"skillContainer\">\r\n                  <p>Skills: </p>\r\n                  <div className=\"skillBox\">\r\n                    {skillList?.map((skill) => (\r\n                      <div className=\"skill\">{skill}</div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <div className=\"linkContainer\">\r\n                {facebook === \"\" || facebook === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={facebook}>\r\n                    <FacebookIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n                {instagram === \"\" || instagram === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={instagram}>\r\n                    <InstagramIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n                {github === \"\" || github === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={github}>\r\n                    <GitHubIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n                {linkedin === \"\" || linkedin === \"NoLink\" ? (\r\n                  \"\"\r\n                ) : (\r\n                  <a href={linkedin}>\r\n                    <LinkedInIcon className=\"linkIcon\" />\r\n                  </a>\r\n                )}\r\n              </div>\r\n              <p className=\"endorsementHeading\">My Endorsements</p>\r\n              {endorsementList?.map((data) => (\r\n                <Paper elevation={3} className=\"sidebarEndContainer\">\r\n                  <div className=\"sidebarEndTopContainer\">\r\n                    <div className=\"sidebarEndCircle\">\r\n                      <Avatar\r\n                        className=\"sidebarEndProfileImage\"\r\n                        alt={data.name}\r\n                        src={data.profileImage}\r\n                      />\r\n                    </div>\r\n                    <div className=\"sidebarEndNameContainer\">\r\n                      <p>\r\n                        <PersonIcon className=\"sidebarEndIcon\" />\r\n                        {data.name}\r\n                      </p>\r\n                      <p>\r\n                        <EmailIcon className=\"sidebarEndIcon\" />\r\n                        {data.email}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"sidebarEndLinkContainer\">\r\n                      <DeleteIcon\r\n                        className=\"memberIcon\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => handleDelete(data.GiverId)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"sidebarEndEndContainer\"\r\n                    style={{ color: \"#40856e\" }}\r\n                  >\r\n                    <p>{data.endorsement}</p>\r\n                  </div>\r\n                </Paper>\r\n              ))}\r\n            </div>\r\n          )}\r\n          {openSnack && (\r\n            <SnackBar\r\n              open={openSnack}\r\n              handleClose={() => setOpenSnack(false)}\r\n              text={\"Uploading...\"}\r\n              material={true}\r\n            />\r\n          )}\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\context\\AuthContext.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarPersonal.js",["268","269","270","271","272","273"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./sidebar.css\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { db } from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport DonutChart from \"../DonutChart\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport styled from \"styled-components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    color: \"#fff\",\r\n    background: \"rgba(0, 145, 96, 0.9)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SidebarPersonal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { currentUser, logOut } = useAuth();\r\n  const history = useHistory();\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const [inputTodo, setInputTodo] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [todoLength, setTodoLength] = useState(0);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n  const handleInputChange = (value) => {\r\n    setInputTodo(value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (inputTodo !== \"\") {\r\n      setLoader(true);\r\n      db.collection(\"users\").doc(currentUser.uid).collection(\"todos\").add({\r\n        todoText: inputTodo,\r\n        todoDate: selectedDate.toISOString(),\r\n        checked: false,\r\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n      setInputTodo(\"\");\r\n      setLoader(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleTodoLength = (list) => {\r\n    const l = list.length;\r\n    setTodoLength(l);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"todos\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoText: doc.data().todoText,\r\n          todoDate: doc.data().todoDate,\r\n          checked: doc.data().checked,\r\n        }));\r\n        console.log(list);\r\n        handleTodoLength(list);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addItemsPersonal\" onClick={handleClickOpen}>\r\n        Add Items +\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            {/* <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/help\")}\r\n            >\r\n              Help\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <TodoLeftContainer>\r\n          <TodoLeftUpBox>\r\n            <div className=\"inputField inputFieldPersonal\">\r\n              <CreateIcon className=\"todoIcon\" />\r\n              <input\r\n                value={inputTodo}\r\n                className=\"todoInputPersonal\"\r\n                type=\"text\"\r\n                placeholder=\"Write here...\"\r\n                onChange={(e) => handleInputChange(e.target.value)}\r\n              />\r\n            </div>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n              <div className=\"dateBox\">\r\n                <ThemeProvider theme={defaultMaterialTheme}>\r\n                  <DateTimePicker\r\n                    variant=\"inline\"\r\n                    // label=\"Add time\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      textAlign: \"center\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    InputProps={{\r\n                      endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                      disableUnderline: true,\r\n                    }}\r\n                  />\r\n                </ThemeProvider>\r\n              </div>\r\n            </MuiPickersUtilsProvider>\r\n            <Button\r\n              disabled={loader}\r\n              endIcon={<AddIcon />}\r\n              className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              ADD\r\n            </Button>\r\n          </TodoLeftUpBox>\r\n          <TodoLeftDownBox>\r\n            {todoLength !== 0 ? (\r\n              <DonutChart todoLength={todoLength} />\r\n            ) : (\r\n              <h3\r\n                style={{\r\n                  fontWeight: 600,\r\n                  padding: \"1rem\",\r\n                  color: \"rgba(0, 141, 94, 0.695)\",\r\n                }}\r\n              >\r\n                NO ITEMS\r\n              </h3>\r\n            )}\r\n          </TodoLeftDownBox>\r\n        </TodoLeftContainer>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TodoLeftContainer = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  width: 94%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst TodoLeftUpBox = styled.div`\r\n  flex: 0.4 !important;\r\n  border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-height: 400px) {\r\n    flex: 1 !important;\r\n    border: none;\r\n  }\r\n\r\n  .inputField {\r\n    width: 90%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 1rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    padding-left: 0.5rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 1rem;\r\n    flex: 0.9;\r\n    padding-left: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n    @media (max-height: 700px) {\r\n      font-size: 0.5rem;\r\n    }\r\n  }\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n  .AlarmIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n  }\r\n  .dateBox {\r\n    overflow: hidden;\r\n    width: 88%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 1rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  .AddButton {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  .AddButton:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  .AddButtonDisabled {\r\n    opacity: 0.7;\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n  }\r\n`;\r\nconst TodoLeftDownBox = styled.div`\r\n  overflow: hidden;\r\n  flex: 0.5 !important;\r\n  @media (max-height: 400px) {\r\n    display: none;\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\home\\Home.js",["274","275","276"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\App.js",["277"],"import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport SignUp from \"./components/auth/SignUp\";\r\nimport Home from \"./components/home/Home\";\r\nimport TeamTodo from \"./components/todo/TeamTodo\";\r\nimport Slogger from \"./components/slogger/Slogger\";\r\nimport { AuthProvider } from \"./context/AuthContext\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport HelpPage from \"./components/helpPage/HelpPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <AuthProvider>\r\n          <Switch>\r\n            <Route exact path=\"/signUp\" component={SignUp} />\r\n            <Route exact path=\"/\" component={Slogger} />\r\n            <Route exact path=\"/help\" component={HelpPage} />\r\n            <PrivateRoute exact path=\"/home\" component={Home} />\r\n            <PrivateRoute path=\"/home/:teamName\" component={Home} />\r\n          </Switch>\r\n        </AuthProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\index.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\utils\\theme.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js",["278","279","280","281","282","283","284","285"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodoCard.js",["286"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\profile\\MemberCard.js",["287","288"],"import { Avatar, Button, Paper } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport StarsIcon from \"@material-ui/icons/Stars\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"./member.css\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nfunction MemberCard({ id, name, email, profileImage }) {\r\n  const [member, setMember] = useState({});\r\n  const [skillList, setSkillList] = useState([]);\r\n  const [openEndorsement, setOpenEndorsement] = useState(false);\r\n  const [endorsementGiven, setEndorsementGiven] = useState(\"\");\r\n  const [endorsementList, setEndorsementList] = useState([]);\r\n  const { currentUser } = useAuth();\r\n\r\n  const handleSubmit = () => {\r\n    if (endorsementGiven !== \"\") {\r\n      db.collection(\"users\")\r\n        .doc(id)\r\n        .collection(\"endorsement\")\r\n        .doc(currentUser.uid)\r\n        .set({\r\n          GiverName: name,\r\n          GiverEmail: email,\r\n          GiverId: currentUser.uid,\r\n          GiverEndorsement: endorsementGiven,\r\n          GiverProfileImage: profileImage,\r\n        });\r\n      setEndorsementGiven(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    db.collection(\"users\")\r\n      .doc(id)\r\n      .collection(\"endorsement\")\r\n      .doc(currentUser.uid)\r\n      .delete();\r\n  };\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(id)\r\n      .collection(\"profile\")\r\n      .onSnapshot((snapshot) => {\r\n        const memberDetails = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n          email: doc.data().email,\r\n          profileImage: doc.data().profileImage,\r\n          skills: doc.data().skills,\r\n          contact: doc.data().contact,\r\n          facebook: doc.data().facebook,\r\n          instagram: doc.data().instagram,\r\n          linkedin: doc.data().linkedin,\r\n          github: doc.data().github,\r\n          bio: doc.data().bio,\r\n        }));\r\n        setSkillList(memberDetails[0].skills.split(\",\"));\r\n        setMember(memberDetails[0]);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(id)\r\n      .collection(\"endorsement\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          profileImage: doc.data().GiverProfileImage,\r\n          name: doc.data().GiverName,\r\n          email: doc.data().GiverEmail,\r\n          endorsement: doc.data().GiverEndorsement,\r\n          GiverId: doc.data().GiverId,\r\n        }));\r\n        console.log(list);\r\n        setEndorsementList(list);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Paper elevation={3} className=\"memberContainer\">\r\n      <div className=\"memberTopContainer\">\r\n        <div className=\"memberCircle\">\r\n          <Avatar\r\n            className=\"memberProfileImage\"\r\n            alt={member.name}\r\n            src={member.profileImage}\r\n          />\r\n        </div>\r\n        <div className=\"memberNameContainer\">\r\n          <p>\r\n            <PersonIcon className=\"memberIcon\" />\r\n            {member.name}\r\n          </p>\r\n          <p>\r\n            <EmailIcon className=\"memberIcon\" />\r\n            {member.email}\r\n          </p>\r\n          {member.contact !== \"NoContact\" && (\r\n            <p>\r\n              <CallIcon className=\"memberIcon\" />\r\n\r\n              {member.contact}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"memberLinkContainer\">\r\n          {member.facebook !== \"NoLink\" ? (\r\n            <a href={member.facebook}>\r\n              <FacebookIcon className=\"memberIcon\" />\r\n            </a>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {member.instagram !== \"NoLink\" ? (\r\n            <a href={member.instagram}>\r\n              <InstagramIcon className=\"memberIcon\" />\r\n            </a>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {member.github !== \"NoLink\" ? (\r\n            <a href={member.github}>\r\n              <GitHubIcon className=\"memberIcon\" />\r\n            </a>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {member.linkedin !== \"NoLink\" ? (\r\n            <a href={member.linkedin}>\r\n              <LinkedInIcon className=\"memberIcon\" />\r\n            </a>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      {!openEndorsement ? (\r\n        <>\r\n          {skillList[0] !== \"NoSkill\" && (\r\n            <div className=\"memberSkillContainer\">\r\n              {skillList?.map((skill) => (\r\n                <div className=\"skill\">{skill}</div>\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"memberBioContainer\">\r\n            {member.bio !== \"NoBio\" && <p>{member.bio}</p>}\r\n          </div>\r\n          <div className=\"endorsementBtnContainer\">\r\n            <div className=\"endorsementBtnSpaceBox\"></div>\r\n            <CustomTooltip title=\"Endorsements\" arrow placement=\"left\">\r\n              <StarsIcon\r\n                className=\"endorsementBtn\"\r\n                onClick={() => setOpenEndorsement(true)}\r\n              />\r\n            </CustomTooltip>\r\n          </div>{\" \"}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"endorsementBtnContainer\">\r\n            <div className=\"endorsementBtnSpaceBox\"></div>\r\n            <CustomTooltip title=\"Close\" arrow placement=\"left\">\r\n              <CancelIcon\r\n                className=\"endorsementBtn\"\r\n                onClick={() => setOpenEndorsement(false)}\r\n              />\r\n            </CustomTooltip>\r\n          </div>\r\n          <div className=\"endorsementContainer\">\r\n            <div className=\"endorsementInputContainer\">\r\n              <textarea\r\n                value={endorsementGiven}\r\n                onChange={(e) => setEndorsementGiven(e.target.value)}\r\n                className=\"endorsementTextBox\"\r\n                placeholder=\"Write...\"\r\n              ></textarea>\r\n\r\n              <Button\r\n                className=\"endorsementSendBtn\"\r\n                onClick={() => handleSubmit()}\r\n              >\r\n                Send\r\n              </Button>\r\n            </div>\r\n            {endorsementList?.map((data) => (\r\n              <Paper elevation={3} className=\"EndContainer\">\r\n                <div className=\"EndTopContainer\">\r\n                  <div className=\"EndCircle\">\r\n                    <Avatar\r\n                      className=\"EndProfileImage\"\r\n                      alt={data.name}\r\n                      src={data.profileImage}\r\n                    />\r\n                  </div>\r\n                  <div className=\"EndNameContainer\">\r\n                    <p>\r\n                      <PersonIcon className=\"EndIcon\" />\r\n                      {data.name}\r\n                    </p>\r\n                    <p>\r\n                      <EmailIcon className=\"EndIcon\" />\r\n                      {data.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"EndLinkContainer\">\r\n                    {data.GiverId === currentUser.uid ? (\r\n                      <DeleteIcon\r\n                        className=\"memberIcon\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => handleDelete()}\r\n                      />\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"EndEndContainer\">\r\n                  <p>{data.endorsement}</p>\r\n                </div>\r\n              </Paper>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default MemberCard;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Chat.js",["289","290","291","292","293","294","295","296"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { db } from \"../../firebase\";\r\nimport moment from \"moment\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport { generateMedia } from \"styled-media-query\";\r\n\r\nfunction Chat({ senderId, text, date, name, admin }) {\r\n  const { currentUser } = useAuth();\r\n\r\n  var timeDifference = new Date().getTimezoneOffset();\r\n  var date = moment(date).subtract(1, \"h\");\r\n  var dateComponent = date.utc().format(\"DD-MM-YYYY\");\r\n  var timeComponent = date.utc().utcOffset(timeDifference).format(\"HH:mm\");\r\n  var hours = new Date(date).getHours();\r\n  var ampm = hours >= 12 ? \"pm\" : \"am\";\r\n\r\n  return (\r\n    <TodoMainCard>\r\n      {senderId === currentUser.uid ? (\r\n        <TodoTextBox>\r\n          {currentUser.uid === senderId ? (\r\n            \"\"\r\n          ) : (\r\n            <p className=\"senderName\">\r\n              {name}\r\n              {senderId === admin ? \" (Admin)\" : \"\"}{\" \"}\r\n            </p>\r\n          )}\r\n\r\n          <p\r\n            style={{\r\n              color: \"rgba(0, 99, 66, 0.868)\",\r\n              fontWeight: 400,\r\n              width: \"100%\",\r\n              wordBreak: \"break-all\",\r\n              verticalAlign: \"center\",\r\n              height: \"auto\",\r\n              fontSize: \"small\",\r\n              margin: \"0.2rem 0\",\r\n              fontFamily: \"Times New Roman\",\r\n            }}\r\n          >\r\n            {text}\r\n          </p>\r\n          <p className=\"messageTime\">\r\n            {\" \"}\r\n            {timeComponent} {ampm} {\" - \"}\r\n            {dateComponent}\r\n          </p>\r\n        </TodoTextBox>\r\n      ) : (\r\n        <TodoTextBoxReceived>\r\n          {currentUser.uid === senderId ? (\r\n            \"\"\r\n          ) : (\r\n            <p className=\"senderName\">{name}</p>\r\n          )}\r\n\r\n          <p\r\n            style={{\r\n              color: \"rgba(0, 99, 66, 0.868)\",\r\n              fontWeight: 400,\r\n              width: \"100%\",\r\n              wordBreak: \"break-all\",\r\n              verticalAlign: \"center\",\r\n              height: \"auto\",\r\n              fontSize: \"small\",\r\n              margin: \"0.2rem 0\",\r\n              fontFamily: \"Times New Roman\",\r\n            }}\r\n          >\r\n            {text}\r\n          </p>\r\n          <p className=\"messageTime\">\r\n            {\" \"}\r\n            {timeComponent} {ampm} {\" - \"}\r\n            {dateComponent}\r\n          </p>\r\n        </TodoTextBoxReceived>\r\n      )}\r\n    </TodoMainCard>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst TodoMainCard = styled.div`\r\n  margin: 0.2rem 0rem;\r\n  width: 100%;\r\n  height: 3rem;\r\n  min-height: 3rem;\r\n  display: flex;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n`;\r\n\r\nconst TodoTextBox = styled.div`\r\n  background-color: rgb(231, 250, 243);\r\n  border-radius: 10px 0px 10px 10px;\r\n  margin: 2px 0;\r\n  margin-right: 5px;\r\n  margin-left: 35%;\r\n  width: 60%;\r\n\r\n  padding: 0.2rem 0.5rem;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\r\n`;\r\n\r\nconst TodoTextBoxReceived = styled.div`\r\n  background-color: rgb(231, 250, 243);\r\n  border-radius: 0px 10px 10px 10px;\r\n  margin: 2px;\r\n  width: 60%;\r\n  padding: 0.2rem 0.5rem;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\r\n`;\r\nconst TodoActions = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: #fff;\r\n  flex: 0.05;\r\n  width: 100%;\r\n  height: auto;\r\n  padding: 0.2rem 0.5rem;\r\n  background-color: rgba(0, 99, 66, 0.868);\r\n  border-radius: 30px 0px 0px 30px;\r\n  border-left: 2px solid rgba(0, 99, 66, 0.768);\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex: 0.09;\r\n    `};\r\n\r\n  .delete {\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      transform:scale(0.8);\r\n    `};\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\snackbar\\SnackBar.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\EmailDialog.js",["297","298","299","300"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./style.css\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AddingTeamModal({ open, handleClose, setSent }) {\r\n  const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n  const handleSend = (e) => {\r\n    console.log(e);\r\n    e.preventDefault();\r\n    emailjs\r\n      .sendForm(\r\n        \"service_ulq5i1l\",\r\n        \"template_iaftte2\",\r\n        e.target,\r\n        \"user_cY9bhdeY9bLLxIaUdplFl\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n\r\n    e.target.reset();\r\n    setSent(true);\r\n    handleClose();\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-slide-title\" className=\"title\">\r\n        Mail us\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          <form\r\n            className=\"contact-form\"\r\n            onSubmit={handleSend}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              width: \"30rem\",\r\n            }}\r\n          >\r\n            <label>Email</label>\r\n            <input type=\"email\" name=\"email\" className=\"input\" />\r\n            <label>Message</label>\r\n            <textarea name=\"message\" className=\"input\" />\r\n            <input type=\"submit\" value=\"Send\" className=\"addButton\" />\r\n          </form>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarTeams.js",["301","302","303","304"],{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","severity":1,"message":"310","line":37,"column":10,"nodeType":"311","messageId":"312","endLine":37,"endColumn":15},{"ruleId":"309","severity":1,"message":"313","line":4,"column":8,"nodeType":"311","messageId":"312","endLine":4,"endColumn":14},{"ruleId":"309","severity":1,"message":"314","line":27,"column":9,"nodeType":"311","messageId":"312","endLine":27,"endColumn":16},{"ruleId":"305","replacedBy":"315"},{"ruleId":"307","replacedBy":"316"},{"ruleId":"309","severity":1,"message":"317","line":9,"column":7,"nodeType":"311","messageId":"312","endLine":9,"endColumn":16},{"ruleId":"318","severity":1,"message":"319","line":59,"column":18,"nodeType":"320","messageId":"321","endLine":59,"endColumn":20},{"ruleId":"322","severity":1,"message":"323","line":41,"column":6,"nodeType":"324","endLine":41,"endColumn":18,"suggestions":"325"},{"ruleId":"326","severity":1,"message":"327","line":44,"column":39,"nodeType":"328","messageId":"329","endLine":44,"endColumn":41},{"ruleId":"322","severity":1,"message":"330","line":67,"column":6,"nodeType":"324","endLine":67,"endColumn":8,"suggestions":"331"},{"ruleId":"309","severity":1,"message":"332","line":58,"column":13,"nodeType":"311","messageId":"312","endLine":58,"endColumn":23},{"ruleId":"333","severity":1,"message":"334","line":170,"column":19,"nodeType":"335","endLine":170,"endColumn":34},{"ruleId":"322","severity":1,"message":"336","line":34,"column":6,"nodeType":"324","endLine":34,"endColumn":8,"suggestions":"337"},{"ruleId":"338","severity":1,"message":"339","line":43,"column":9,"nodeType":"340","endLine":43,"endColumn":57},{"ruleId":"338","severity":1,"message":"339","line":165,"column":9,"nodeType":"340","endLine":165,"endColumn":60},{"ruleId":"338","severity":1,"message":"339","line":169,"column":22,"nodeType":"340","endLine":169,"endColumn":69},{"ruleId":"338","severity":1,"message":"339","line":181,"column":25,"nodeType":"340","endLine":181,"endColumn":72},{"ruleId":"338","severity":1,"message":"339","line":195,"column":9,"nodeType":"340","endLine":195,"endColumn":58},{"ruleId":"338","severity":1,"message":"339","line":199,"column":22,"nodeType":"340","endLine":199,"endColumn":68},{"ruleId":"338","severity":1,"message":"339","line":215,"column":25,"nodeType":"340","endLine":215,"endColumn":71},{"ruleId":"338","severity":1,"message":"339","line":228,"column":9,"nodeType":"340","endLine":228,"endColumn":52},{"ruleId":"309","severity":1,"message":"341","line":24,"column":7,"nodeType":"311","messageId":"312","endLine":24,"endColumn":17},{"ruleId":"309","severity":1,"message":"342","line":46,"column":7,"nodeType":"311","messageId":"312","endLine":46,"endColumn":21},{"ruleId":"309","severity":1,"message":"343","line":126,"column":10,"nodeType":"311","messageId":"312","endLine":126,"endColumn":18},{"ruleId":"309","severity":1,"message":"344","line":142,"column":9,"nodeType":"311","messageId":"312","endLine":142,"endColumn":21},{"ruleId":"309","severity":1,"message":"345","line":147,"column":9,"nodeType":"311","messageId":"312","endLine":147,"endColumn":20},{"ruleId":"322","severity":1,"message":"346","line":241,"column":6,"nodeType":"324","endLine":241,"endColumn":8,"suggestions":"347"},{"ruleId":"338","severity":1,"message":"339","line":329,"column":19,"nodeType":"340","endLine":329,"endColumn":78},{"ruleId":"333","severity":1,"message":"334","line":333,"column":21,"nodeType":"335","endLine":333,"endColumn":36},{"ruleId":"338","severity":1,"message":"339","line":527,"column":15,"nodeType":"340","endLine":527,"endColumn":74},{"ruleId":"333","severity":1,"message":"334","line":531,"column":17,"nodeType":"335","endLine":531,"endColumn":32},{"ruleId":"305","replacedBy":"348"},{"ruleId":"307","replacedBy":"349"},{"ruleId":"309","severity":1,"message":"350","line":1,"column":17,"nodeType":"311","messageId":"312","endLine":1,"endColumn":25},{"ruleId":"309","severity":1,"message":"351","line":12,"column":8,"nodeType":"311","messageId":"312","endLine":12,"endColumn":16},{"ruleId":"326","severity":1,"message":"352","line":53,"column":34,"nodeType":"328","messageId":"353","endLine":53,"endColumn":36},{"ruleId":"322","severity":1,"message":"354","line":66,"column":6,"nodeType":"324","endLine":66,"endColumn":8,"suggestions":"355"},{"ruleId":"309","severity":1,"message":"356","line":140,"column":10,"nodeType":"311","messageId":"312","endLine":140,"endColumn":28},{"ruleId":"309","severity":1,"message":"357","line":164,"column":9,"nodeType":"311","messageId":"312","endLine":164,"endColumn":23},{"ruleId":"326","severity":1,"message":"358","line":170,"column":20,"nodeType":"328","messageId":"353","endLine":170,"endColumn":22},{"ruleId":"359","severity":1,"message":"360","line":292,"column":11,"nodeType":"335","endLine":294,"endColumn":12},{"ruleId":"305","replacedBy":"361"},{"ruleId":"307","replacedBy":"362"},{"ruleId":"363","severity":1,"message":"364","line":17,"column":7,"nodeType":"311","messageId":"365","endLine":17,"endColumn":11},{"ruleId":"309","severity":1,"message":"366","line":30,"column":10,"nodeType":"311","messageId":"312","endLine":30,"endColumn":21},{"ruleId":"309","severity":1,"message":"367","line":32,"column":10,"nodeType":"311","messageId":"312","endLine":32,"endColumn":22},{"ruleId":"309","severity":1,"message":"332","line":123,"column":13,"nodeType":"311","messageId":"312","endLine":123,"endColumn":23},{"ruleId":"322","severity":1,"message":"368","line":195,"column":6,"nodeType":"324","endLine":195,"endColumn":8,"suggestions":"369"},{"ruleId":"322","severity":1,"message":"330","line":221,"column":6,"nodeType":"324","endLine":221,"endColumn":8,"suggestions":"370"},{"ruleId":"322","severity":1,"message":"368","line":238,"column":6,"nodeType":"324","endLine":238,"endColumn":8,"suggestions":"371"},{"ruleId":"338","severity":1,"message":"339","line":500,"column":11,"nodeType":"340","endLine":508,"endColumn":13},{"ruleId":"309","severity":1,"message":"372","line":10,"column":8,"nodeType":"311","messageId":"312","endLine":10,"endColumn":19},{"ruleId":"309","severity":1,"message":"314","line":32,"column":9,"nodeType":"311","messageId":"312","endLine":32,"endColumn":16},{"ruleId":"322","severity":1,"message":"336","line":99,"column":6,"nodeType":"324","endLine":99,"endColumn":8,"suggestions":"373"},{"ruleId":"338","severity":1,"message":"339","line":105,"column":11,"nodeType":"340","endLine":105,"endColumn":62},{"ruleId":"359","severity":1,"message":"360","line":156,"column":21,"nodeType":"335","endLine":156,"endColumn":44},{"ruleId":"359","severity":1,"message":"360","line":295,"column":21,"nodeType":"335","endLine":295,"endColumn":44},{"ruleId":"359","severity":1,"message":"360","line":325,"column":21,"nodeType":"335","endLine":325,"endColumn":44},{"ruleId":"309","severity":1,"message":"374","line":28,"column":10,"nodeType":"311","messageId":"312","endLine":28,"endColumn":18},{"ruleId":"309","severity":1,"message":"375","line":28,"column":20,"nodeType":"311","messageId":"312","endLine":28,"endColumn":31},{"ruleId":"309","severity":1,"message":"376","line":31,"column":10,"nodeType":"311","messageId":"312","endLine":31,"endColumn":17},{"ruleId":"309","severity":1,"message":"377","line":31,"column":19,"nodeType":"311","messageId":"312","endLine":31,"endColumn":29},{"ruleId":"326","severity":1,"message":"352","line":48,"column":28,"nodeType":"328","messageId":"353","endLine":48,"endColumn":30},{"ruleId":"326","severity":1,"message":"352","line":68,"column":28,"nodeType":"328","messageId":"353","endLine":68,"endColumn":30},{"ruleId":"309","severity":1,"message":"378","line":6,"column":14,"nodeType":"311","messageId":"312","endLine":6,"endColumn":21},{"ruleId":"309","severity":1,"message":"379","line":13,"column":3,"nodeType":"311","messageId":"312","endLine":13,"endColumn":17},{"ruleId":"309","severity":1,"message":"380","line":57,"column":10,"nodeType":"311","messageId":"312","endLine":57,"endColumn":19},{"ruleId":"309","severity":1,"message":"381","line":120,"column":10,"nodeType":"311","messageId":"312","endLine":120,"endColumn":14},{"ruleId":"309","severity":1,"message":"382","line":120,"column":16,"nodeType":"311","messageId":"312","endLine":120,"endColumn":23},{"ruleId":"309","severity":1,"message":"383","line":121,"column":10,"nodeType":"311","messageId":"312","endLine":121,"endColumn":15},{"ruleId":"309","severity":1,"message":"384","line":121,"column":17,"nodeType":"311","messageId":"312","endLine":121,"endColumn":25},{"ruleId":"309","severity":1,"message":"310","line":124,"column":10,"nodeType":"311","messageId":"312","endLine":124,"endColumn":15},{"ruleId":"309","severity":1,"message":"367","line":125,"column":10,"nodeType":"311","messageId":"312","endLine":125,"endColumn":22},{"ruleId":"309","severity":1,"message":"385","line":125,"column":24,"nodeType":"311","messageId":"312","endLine":125,"endColumn":39},{"ruleId":"309","severity":1,"message":"386","line":136,"column":10,"nodeType":"311","messageId":"312","endLine":136,"endColumn":15},{"ruleId":"309","severity":1,"message":"387","line":136,"column":17,"nodeType":"311","messageId":"312","endLine":136,"endColumn":25},{"ruleId":"309","severity":1,"message":"388","line":142,"column":10,"nodeType":"311","messageId":"312","endLine":142,"endColumn":22},{"ruleId":"309","severity":1,"message":"389","line":142,"column":24,"nodeType":"311","messageId":"312","endLine":142,"endColumn":39},{"ruleId":"309","severity":1,"message":"366","line":143,"column":10,"nodeType":"311","messageId":"312","endLine":143,"endColumn":21},{"ruleId":"309","severity":1,"message":"390","line":143,"column":23,"nodeType":"311","messageId":"312","endLine":143,"endColumn":37},{"ruleId":"322","severity":1,"message":"330","line":230,"column":6,"nodeType":"324","endLine":230,"endColumn":19,"suggestions":"391"},{"ruleId":"326","severity":1,"message":"352","line":240,"column":34,"nodeType":"328","messageId":"353","endLine":240,"endColumn":36},{"ruleId":"322","severity":1,"message":"330","line":249,"column":6,"nodeType":"324","endLine":249,"endColumn":19,"suggestions":"392"},{"ruleId":"326","severity":1,"message":"352","line":261,"column":28,"nodeType":"328","messageId":"353","endLine":261,"endColumn":30},{"ruleId":"322","severity":1,"message":"393","line":270,"column":6,"nodeType":"324","endLine":270,"endColumn":8,"suggestions":"394"},{"ruleId":"338","severity":1,"message":"339","line":474,"column":17,"nodeType":"340","endLine":481,"endColumn":19},{"ruleId":"338","severity":1,"message":"339","line":522,"column":17,"nodeType":"340","endLine":529,"endColumn":19},{"ruleId":"338","severity":1,"message":"339","line":563,"column":17,"nodeType":"340","endLine":570,"endColumn":19},{"ruleId":"309","severity":1,"message":"395","line":5,"column":3,"nodeType":"311","messageId":"312","endLine":5,"endColumn":9},{"ruleId":"309","severity":1,"message":"396","line":6,"column":3,"nodeType":"311","messageId":"312","endLine":6,"endColumn":6},{"ruleId":"309","severity":1,"message":"397","line":7,"column":3,"nodeType":"311","messageId":"312","endLine":7,"endColumn":7},{"ruleId":"309","severity":1,"message":"398","line":9,"column":3,"nodeType":"311","messageId":"312","endLine":9,"endColumn":13},{"ruleId":"309","severity":1,"message":"399","line":16,"column":8,"nodeType":"311","messageId":"312","endLine":16,"endColumn":23},{"ruleId":"309","severity":1,"message":"400","line":20,"column":8,"nodeType":"311","messageId":"312","endLine":20,"endColumn":17},{"ruleId":"309","severity":1,"message":"379","line":22,"column":3,"nodeType":"311","messageId":"312","endLine":22,"endColumn":17},{"ruleId":"309","severity":1,"message":"401","line":23,"column":3,"nodeType":"311","messageId":"312","endLine":23,"endColumn":26},{"ruleId":"309","severity":1,"message":"402","line":24,"column":3,"nodeType":"311","messageId":"312","endLine":24,"endColumn":13},{"ruleId":"309","severity":1,"message":"403","line":26,"column":8,"nodeType":"311","messageId":"312","endLine":26,"endColumn":15},{"ruleId":"309","severity":1,"message":"404","line":27,"column":8,"nodeType":"311","messageId":"312","endLine":27,"endColumn":19},{"ruleId":"309","severity":1,"message":"405","line":28,"column":8,"nodeType":"311","messageId":"312","endLine":28,"endColumn":18},{"ruleId":"309","severity":1,"message":"406","line":30,"column":10,"nodeType":"311","messageId":"312","endLine":30,"endColumn":23},{"ruleId":"309","severity":1,"message":"407","line":32,"column":8,"nodeType":"311","messageId":"312","endLine":32,"endColumn":21},{"ruleId":"309","severity":1,"message":"408","line":35,"column":8,"nodeType":"311","messageId":"312","endLine":35,"endColumn":26},{"ruleId":"309","severity":1,"message":"409","line":37,"column":8,"nodeType":"311","messageId":"312","endLine":37,"endColumn":16},{"ruleId":"309","severity":1,"message":"380","line":62,"column":10,"nodeType":"311","messageId":"312","endLine":62,"endColumn":19},{"ruleId":"309","severity":1,"message":"410","line":106,"column":7,"nodeType":"311","messageId":"312","endLine":106,"endColumn":27},{"ruleId":"309","severity":1,"message":"411","line":120,"column":9,"nodeType":"311","messageId":"312","endLine":120,"endColumn":16},{"ruleId":"309","severity":1,"message":"412","line":126,"column":9,"nodeType":"311","messageId":"312","endLine":126,"endColumn":26},{"ruleId":"322","severity":1,"message":"330","line":172,"column":6,"nodeType":"324","endLine":172,"endColumn":19,"suggestions":"413"},{"ruleId":"326","severity":1,"message":"352","line":198,"column":34,"nodeType":"328","messageId":"353","endLine":198,"endColumn":36},{"ruleId":"309","severity":1,"message":"414","line":507,"column":7,"nodeType":"311","messageId":"312","endLine":507,"endColumn":17},{"ruleId":"309","severity":1,"message":"415","line":514,"column":7,"nodeType":"311","messageId":"312","endLine":514,"endColumn":16},{"ruleId":"305","replacedBy":"416"},{"ruleId":"307","replacedBy":"417"},{"ruleId":"309","severity":1,"message":"366","line":49,"column":10,"nodeType":"311","messageId":"312","endLine":49,"endColumn":21},{"ruleId":"309","severity":1,"message":"367","line":51,"column":10,"nodeType":"311","messageId":"312","endLine":51,"endColumn":22},{"ruleId":"309","severity":1,"message":"418","line":63,"column":10,"nodeType":"311","messageId":"312","endLine":63,"endColumn":15},{"ruleId":"309","severity":1,"message":"419","line":63,"column":17,"nodeType":"311","messageId":"312","endLine":63,"endColumn":25},{"ruleId":"309","severity":1,"message":"420","line":64,"column":10,"nodeType":"311","messageId":"312","endLine":64,"endColumn":25},{"ruleId":"309","severity":1,"message":"421","line":65,"column":10,"nodeType":"311","messageId":"312","endLine":65,"endColumn":14},{"ruleId":"309","severity":1,"message":"422","line":65,"column":16,"nodeType":"311","messageId":"312","endLine":65,"endColumn":32},{"ruleId":"309","severity":1,"message":"423","line":68,"column":9,"nodeType":"311","messageId":"312","endLine":68,"endColumn":22},{"ruleId":"309","severity":1,"message":"332","line":152,"column":13,"nodeType":"311","messageId":"312","endLine":152,"endColumn":23},{"ruleId":"309","severity":1,"message":"424","line":177,"column":9,"nodeType":"311","messageId":"312","endLine":177,"endColumn":22},{"ruleId":"322","severity":1,"message":"368","line":224,"column":6,"nodeType":"324","endLine":224,"endColumn":8,"suggestions":"425"},{"ruleId":"322","severity":1,"message":"368","line":241,"column":6,"nodeType":"324","endLine":241,"endColumn":8,"suggestions":"426"},{"ruleId":"309","severity":1,"message":"427","line":1,"column":27,"nodeType":"311","messageId":"312","endLine":1,"endColumn":36},{"ruleId":"309","severity":1,"message":"310","line":59,"column":10,"nodeType":"311","messageId":"312","endLine":59,"endColumn":15},{"ruleId":"309","severity":1,"message":"428","line":61,"column":10,"nodeType":"311","messageId":"312","endLine":61,"endColumn":18},{"ruleId":"309","severity":1,"message":"429","line":61,"column":20,"nodeType":"311","messageId":"312","endLine":61,"endColumn":31},{"ruleId":"309","severity":1,"message":"423","line":72,"column":9,"nodeType":"311","messageId":"312","endLine":72,"endColumn":22},{"ruleId":"322","severity":1,"message":"330","line":117,"column":6,"nodeType":"324","endLine":117,"endColumn":8,"suggestions":"430"},{"ruleId":"309","severity":1,"message":"431","line":21,"column":8,"nodeType":"311","messageId":"312","endLine":21,"endColumn":16},{"ruleId":"326","severity":1,"message":"352","line":125,"column":28,"nodeType":"328","messageId":"353","endLine":125,"endColumn":30},{"ruleId":"322","severity":1,"message":"330","line":133,"column":6,"nodeType":"324","endLine":133,"endColumn":8,"suggestions":"432"},{"ruleId":"309","severity":1,"message":"433","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":16},{"ruleId":"309","severity":1,"message":"433","line":24,"column":8,"nodeType":"311","messageId":"312","endLine":24,"endColumn":16},{"ruleId":"309","severity":1,"message":"434","line":25,"column":8,"nodeType":"311","messageId":"312","endLine":25,"endColumn":12},{"ruleId":"309","severity":1,"message":"435","line":28,"column":8,"nodeType":"311","messageId":"312","endLine":28,"endColumn":18},{"ruleId":"309","severity":1,"message":"310","line":112,"column":10,"nodeType":"311","messageId":"312","endLine":112,"endColumn":15},{"ruleId":"322","severity":1,"message":"330","line":190,"column":6,"nodeType":"324","endLine":190,"endColumn":8,"suggestions":"436"},{"ruleId":"338","severity":1,"message":"339","line":305,"column":15,"nodeType":"340","endLine":305,"endColumn":55},{"ruleId":"326","severity":1,"message":"327","line":334,"column":29,"nodeType":"328","messageId":"329","endLine":334,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":354,"column":29,"nodeType":"328","messageId":"329","endLine":354,"endColumn":31},{"ruleId":"309","severity":1,"message":"437","line":8,"column":8,"nodeType":"311","messageId":"312","endLine":8,"endColumn":14},{"ruleId":"322","severity":1,"message":"438","line":72,"column":6,"nodeType":"324","endLine":72,"endColumn":8,"suggestions":"439"},{"ruleId":"322","severity":1,"message":"438","line":89,"column":6,"nodeType":"324","endLine":89,"endColumn":8,"suggestions":"440"},{"ruleId":"309","severity":1,"message":"350","line":1,"column":17,"nodeType":"311","messageId":"312","endLine":1,"endColumn":25},{"ruleId":"309","severity":1,"message":"441","line":3,"column":8,"nodeType":"311","messageId":"312","endLine":3,"endColumn":32},{"ruleId":"309","severity":1,"message":"442","line":4,"column":8,"nodeType":"311","messageId":"312","endLine":4,"endColumn":20},{"ruleId":"309","severity":1,"message":"443","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":18},{"ruleId":"309","severity":1,"message":"444","line":7,"column":10,"nodeType":"311","messageId":"312","endLine":7,"endColumn":12},{"ruleId":"309","severity":1,"message":"407","line":9,"column":8,"nodeType":"311","messageId":"312","endLine":9,"endColumn":21},{"ruleId":"363","severity":1,"message":"364","line":16,"column":7,"nodeType":"311","messageId":"365","endLine":16,"endColumn":11},{"ruleId":"309","severity":1,"message":"445","line":135,"column":7,"nodeType":"311","messageId":"312","endLine":135,"endColumn":18},{"ruleId":"309","severity":1,"message":"446","line":2,"column":8,"nodeType":"311","messageId":"312","endLine":2,"endColumn":14},{"ruleId":"309","severity":1,"message":"447","line":4,"column":8,"nodeType":"311","messageId":"312","endLine":4,"endColumn":21},{"ruleId":"309","severity":1,"message":"448","line":17,"column":10,"nodeType":"311","messageId":"312","endLine":17,"endColumn":21},{"ruleId":"309","severity":1,"message":"449","line":17,"column":23,"nodeType":"311","messageId":"312","endLine":17,"endColumn":37},{"ruleId":"309","severity":1,"message":"427","line":1,"column":27,"nodeType":"311","messageId":"312","endLine":1,"endColumn":36},{"ruleId":"309","severity":1,"message":"450","line":14,"column":10,"nodeType":"311","messageId":"312","endLine":14,"endColumn":23},{"ruleId":"309","severity":1,"message":"423","line":52,"column":9,"nodeType":"311","messageId":"312","endLine":52,"endColumn":22},{"ruleId":"322","severity":1,"message":"330","line":105,"column":6,"nodeType":"324","endLine":105,"endColumn":19,"suggestions":"451"},"no-native-reassign",["452"],"no-negated-in-lhs",["453"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'styled' is defined but never used.","'isSmall' is assigned a value but never used.",["452"],["453"],"'useStyles' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'array' and 'colors'. Either include them or remove the dependency array.","ArrayExpression",["454"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook React.useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["455"],"'uploadTask' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook React.useEffect has missing dependencies: 'currentUser' and 'history'. Either include them or remove the dependency array.",["456"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'StyledMenu' is assigned a value but never used.","'StyledMenuItem' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleSource' is assigned a value but never used.","'handleClick' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["457"],["452"],["453"],"'useState' is defined but never used.","'firebase' is defined but never used.","Array.prototype.filter() expects a return value from arrow function.","expectedInside","React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'teamName'. Either include them or remove the dependency array.",["458"],"'databaseSideDelete' is assigned a value but never used.","'databaseDelete' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","react/jsx-no-duplicate-props","No duplicate props allowed",["452"],["453"],"no-redeclare","'date' is already defined.","redeclared","'profilePath' is assigned a value but never used.","'profileError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["459"],["460"],["461"],"'signUpImage' is defined but never used.",["462"],"'teamList' is assigned a value but never used.","'setTeamList' is assigned a value but never used.","'already' is assigned a value but never used.","'setAlready' is assigned a value but never used.","'storage' is defined but never used.","'DateTimePicker' is defined but never used.","'a11yProps' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setProfileError' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'profileImage' is assigned a value but never used.","'setProfileImage' is assigned a value but never used.","'setProfilePath' is assigned a value but never used.",["463"],["464"],"React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'setDiscussionLock'. Either include them or remove the dependency array. If 'setDiscussionLock' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["465"],"'AppBar' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Typography' is defined but never used.","'AddingTeamModal' is defined but never used.","'AlarmIcon' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'DatePicker' is defined but never used.","'AddIcon' is defined but never used.","'MomentUtils' is defined but never used.","'CreateIcon' is defined but never used.","'ThemeProvider' is defined but never used.","'CustomTooltip' is defined but never used.","'profileSetterImage' is defined but never used.","'SendIcon' is defined but never used.","'defaultMaterialTheme' is assigned a value but never used.","'classes' is assigned a value but never used.","'handleSubmitEnter' is assigned a value but never used.",["466"],"'ChatScreen' is assigned a value but never used.","'ChatInput' is assigned a value but never used.",["452"],["453"],"'teams' is assigned a value but never used.","'setTeams' is assigned a value but never used.","'allMemberIdList' is assigned a value but never used.","'team' is assigned a value but never used.","'handleChangeTeam' is assigned a value but never used.","'handleSignOut' is assigned a value but never used.","'getAllMembers' is assigned a value but never used.",["467"],["468"],"'useEffect' is defined but never used.","'todoList' is assigned a value but never used.","'setTodoList' is assigned a value but never used.",["469"],"'SlogPage' is defined but never used.",["470"],"'TeamTodo' is defined but never used.","'News' is defined but never used.","'HashLoader' is defined but never used.",["471"],"'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["472"],["473"],"'CheckBoxOutlineBlankIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'db' is defined but never used.","'TodoActions' is assigned a value but never used.","'Button' is defined but never used.","'DialogActions' is defined but never used.","'senderEmail' is assigned a value but never used.","'setSenderEmail' is assigned a value but never used.","'generateMedia' is defined but never used.",["474"],"no-global-assign","no-unsafe-negation",{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"477","fix":"485"},{"desc":"477","fix":"486"},{"desc":"477","fix":"487"},{"desc":"479","fix":"488"},{"desc":"489","fix":"490"},{"desc":"489","fix":"491"},{"desc":"492","fix":"493"},{"desc":"489","fix":"494"},{"desc":"477","fix":"495"},{"desc":"477","fix":"496"},{"desc":"477","fix":"497"},{"desc":"477","fix":"498"},{"desc":"477","fix":"499"},{"desc":"500","fix":"501"},{"desc":"500","fix":"502"},{"desc":"489","fix":"503"},"Update the dependencies array to be: [array, colors, todoLength]",{"range":"504","text":"505"},"Update the dependencies array to be: [currentUser.uid]",{"range":"506","text":"507"},"Update the dependencies array to be: [currentUser, history]",{"range":"508","text":"509"},"Update the dependencies array to be: [getWeather]",{"range":"510","text":"511"},"Update the dependencies array to be: [currentUser.uid, teamName]",{"range":"512","text":"513"},{"range":"514","text":"507"},{"range":"515","text":"507"},{"range":"516","text":"507"},{"range":"517","text":"509"},"Update the dependencies array to be: [UrlTeamName, currentUser.uid]",{"range":"518","text":"519"},{"range":"520","text":"519"},"Update the dependencies array to be: [currentUser.uid, setDiscussionLock]",{"range":"521","text":"522"},{"range":"523","text":"519"},{"range":"524","text":"507"},{"range":"525","text":"507"},{"range":"526","text":"507"},{"range":"527","text":"507"},{"range":"528","text":"507"},"Update the dependencies array to be: [id]",{"range":"529","text":"530"},{"range":"531","text":"530"},{"range":"532","text":"519"},[1109,1121],"[array, colors, todoLength]",[1762,1764],"[currentUser.uid]",[1496,1498],"[currentUser, history]",[6273,6275],"[getWeather]",[1957,1959],"[currentUser.uid, teamName]",[6669,6671],[7426,7428],[7954,7956],[3153,3155],[7135,7148],"[UrlTeamName, currentUser.uid]",[7691,7704],[8237,8239],"[currentUser.uid, setDiscussionLock]",[4788,4801],[7590,7592],[8118,8120],[3626,3628],[3335,3337],[5166,5168],[2549,2551],"[id]",[3064,3066],[3300,3313]]