[{"C:\\Users\\KIIT\\Desktop\\slogger\\src\\PrivateRoute.js":"1","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js":"2","C:\\Users\\KIIT\\Desktop\\slogger\\src\\utils\\theme.js":"3","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarPersonal.js":"4","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Chat.js":"5","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Discussion.js":"6","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Material.js":"7","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\home\\Home.js":"8","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js":"9","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodoCard.js":"10","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\Schedular\\CalendarModal.js":"11","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js":"12","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TodoCard.js":"13","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\Schedular\\Schedular.js":"14","C:\\Users\\KIIT\\Desktop\\slogger\\src\\index.js":"15","C:\\Users\\KIIT\\Desktop\\slogger\\src\\context\\AuthContext.js":"16","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Delete.js":"17","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarProfile.js":"18","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Dialog.js":"19","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\HelpPage.js":"20","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\EmailDialog.js":"21","C:\\Users\\KIIT\\Desktop\\slogger\\src\\firebase.js":"22","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\CustomTooltip.js":"23","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\ImagesModal.js":"24","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\snackbar\\SnackBar.js":"25","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\DownloadImageModal.js":"26"},{"size":444,"mtime":1616858364594,"results":"27","hashOfConfig":"28"},{"size":3314,"mtime":1616930347187,"results":"29","hashOfConfig":"28"},{"size":967,"mtime":1617995093098,"results":"30","hashOfConfig":"28"},{"size":12515,"mtime":1618044342168,"results":"31","hashOfConfig":"28"},{"size":8013,"mtime":1617963301033,"results":"32","hashOfConfig":"28"},{"size":15380,"mtime":1618044277327,"results":"33","hashOfConfig":"28"},{"size":15501,"mtime":1618082494716,"results":"34","hashOfConfig":"28"},{"size":9754,"mtime":1617990496434,"results":"35","hashOfConfig":"28"},{"size":28332,"mtime":1618044440093,"results":"36","hashOfConfig":"28"},{"size":12349,"mtime":1617995072083,"results":"37","hashOfConfig":"28"},{"size":7294,"mtime":1617961116650,"results":"38","hashOfConfig":"28"},{"size":20561,"mtime":1618044405484,"results":"39","hashOfConfig":"28"},{"size":7734,"mtime":1617987380047,"results":"40","hashOfConfig":"28"},{"size":4127,"mtime":1617960957038,"results":"41","hashOfConfig":"28"},{"size":465,"mtime":1617447323256,"results":"42","hashOfConfig":"28"},{"size":1128,"mtime":1616858364985,"results":"43","hashOfConfig":"28"},{"size":8775,"mtime":1617536236919,"results":"44","hashOfConfig":"28"},{"size":17564,"mtime":1616858364983,"results":"45","hashOfConfig":"28"},{"size":5761,"mtime":1617879841949,"results":"46","hashOfConfig":"28"},{"size":16981,"mtime":1617994804530,"results":"47","hashOfConfig":"28"},{"size":2812,"mtime":1617995215896,"results":"48","hashOfConfig":"28"},{"size":530,"mtime":1616858507404,"results":"49","hashOfConfig":"28"},{"size":414,"mtime":1616858364855,"results":"50","hashOfConfig":"28"},{"size":2501,"mtime":1618082056609,"results":"51","hashOfConfig":"28"},{"size":1135,"mtime":1618078545850,"results":"52","hashOfConfig":"28"},{"size":2112,"mtime":1618081860697,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1etrus8",{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\KIIT\\Desktop\\slogger\\src\\PrivateRoute.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js",["118","119","120"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport { generateMedia } from \"styled-media-query\";\r\n\r\nfunction DonutChart({ todoLength }) {\r\n  const [data, setData] = useState({});\r\n  const [checkCount, setCheckCount] = useState(0);\r\n  const { currentUser } = useAuth();\r\n  var array = [];\r\n  var colors = [];\r\n\r\n  function getRandomColor() {\r\n    var letters = \"0123456789ABCDEF\";\r\n    var color = \"#\";\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (todoLength !== 0) {\r\n      for (var i = 0; i < todoLength; i++) {\r\n        array.push(10);\r\n        const color = getRandomColor();\r\n        colors.push(color);\r\n      }\r\n    }\r\n    setData({\r\n      datasets: [\r\n        {\r\n          data: array,\r\n          backgroundColor: colors,\r\n        },\r\n      ],\r\n    });\r\n  }, [todoLength]);\r\n\r\n  const handleCheckLength = (list) => {\r\n    const check = list.filter((check) => {\r\n      if (check.checked === true) {\r\n        return check;\r\n      }\r\n    });\r\n    const c = check.length;\r\n    setCheckCount(c);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"todos\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoText: doc.data().todoText,\r\n          todoDate: doc.data().todoDate,\r\n          checked: doc.data().checked,\r\n        }));\r\n\r\n        handleCheckLength(list);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <CustomTooltip title=\"Visual representation of total work\" placement=\"top\">\r\n      <ChartContainer>\r\n        <Doughnut\r\n          data={data}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            tooltips: {\r\n              enabled: false,\r\n            },\r\n          }}\r\n          height={200}\r\n          width={200}\r\n        ></Doughnut>\r\n\r\n        <CustomTooltip\r\n          title={\r\n            Math.floor((checkCount / todoLength) * 100) === 0\r\n              ? `${Math.floor(\r\n                  (checkCount / todoLength) * 100\r\n                )}% of work is done`\r\n              : `Congrats: ${Math.floor(\r\n                  (checkCount / todoLength) * 100\r\n                )}% of work is done`\r\n          }\r\n          placement=\"top\"\r\n        >\r\n          <Percentage>\r\n            {Math.floor((checkCount / todoLength) * 100)}%\r\n          </Percentage>\r\n        </CustomTooltip>\r\n      </ChartContainer>\r\n    </CustomTooltip>\r\n  );\r\n}\r\n\r\nexport default DonutChart;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst ChartContainer = styled.div`\r\n  margin-top: 1rem;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n  margin-top:2rem;\r\n    `};\r\n`;\r\n\r\nconst Percentage = styled.p`\r\n  position: absolute;\r\n  top: 43%;\r\n  left: 43%;\r\n  font-size: 1.7rem;\r\n  font-weight: 600;\r\n  color: rgb(0, 82, 52);\r\n  cursor: pointer;\r\n`;\r\n",["121","122"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\utils\\theme.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarPersonal.js",["123","124","125","126","127","128","129"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./sidebar.css\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  DatePicker,\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { db } from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport DonutChart from \"../DonutChart\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport styled from \"styled-components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    color: \"#fff\",\r\n    background: \"rgba(0, 145, 96, 0.9)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SidebarPersonal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { currentUser, logOut } = useAuth();\r\n  const history = useHistory();\r\n  const [selectedStartDate, handleStartDateChange] = useState(new Date());\r\n  const [selectedEndDate, handleEndDateChange] = useState(new Date());\r\n  const [priority, setPriority] = useState(1);\r\n  const [inputTodo, setInputTodo] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [todoLength, setTodoLength] = useState(0);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n  const handleInputChange = (value) => {\r\n    setInputTodo(value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (inputTodo !== \"\") {\r\n      setLoader(true);\r\n      db.collection(\"users\").doc(currentUser.uid).collection(\"todos\").add({\r\n        todoText: inputTodo,\r\n        todoStartDate: selectedStartDate.toISOString(),\r\n        todoEndDate: selectedEndDate.toISOString(),\r\n        checked: false,\r\n        priority: priority,\r\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n      setInputTodo(\"\");\r\n      setLoader(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleTodoLength = (list) => {\r\n    const l = list.length;\r\n    setTodoLength(l);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"todos\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoText: doc.data().todoText,\r\n          todoDate: doc.data().todoDate,\r\n          checked: doc.data().checked,\r\n        }));\r\n        console.log(list);\r\n        handleTodoLength(list);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addItemsPersonal\" onClick={handleClickOpen}>\r\n        Add Items +\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <TodoLeftContainer>\r\n          <TodoLeftUpBox>\r\n            <div className=\"inputField\">\r\n              <CreateIcon className=\"todoIcon\" />\r\n              <input\r\n                value={inputTodo}\r\n                className=\"todoInputPersonal\"\r\n                type=\"text\"\r\n                placeholder=\"Write here...\"\r\n                onChange={(e) => handleInputChange(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"dataContainerSide\">\r\n                <h3 className=\"timeHeading\">Start date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBoxSide\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        //format=\"DD/MM/YYYY\"\r\n                        value={selectedStartDate}\r\n                        onChange={handleStartDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n              <div className=\"dataContainerSide\">\r\n                <h3 className=\"timeHeading\">End date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBoxSide\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        value={selectedEndDate}\r\n                        //  format=\"DD/MM/YYYY\"\r\n                        onChange={handleEndDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              disabled={loader}\r\n              endIcon={<AddIcon />}\r\n              className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              ADD\r\n            </Button>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n              <Button\r\n                className={priority === 3 ? \"selectedTopPriority\" : \"priority\"}\r\n                onClick={() => setPriority(3)}\r\n              >\r\n                Top\r\n              </Button>\r\n              <Button\r\n                className={\r\n                  priority === 2 ? \"selectedEarlyPriority\" : \"priority\"\r\n                }\r\n                onClick={() => setPriority(2)}\r\n              >\r\n                Early\r\n              </Button>\r\n              <Button\r\n                className={priority === 1 ? \"selectedPriority\" : \"priority\"}\r\n                onClick={() => setPriority(1)}\r\n              >\r\n                Easy\r\n              </Button>\r\n            </div>\r\n            {/* <div className=\"inputField inputFieldPersonal\">\r\n              <CreateIcon className=\"todoIcon\" />\r\n              <input\r\n                value={inputTodo}\r\n                className=\"todoInputPersonal\"\r\n                type=\"text\"\r\n                placeholder=\"Write here...\"\r\n                onChange={(e) => handleInputChange(e.target.value)}\r\n              />\r\n            </div>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n              <div className=\"dateBox\">\r\n                <ThemeProvider theme={defaultMaterialTheme}>\r\n                  <DateTimePicker\r\n                    variant=\"inline\"\r\n                    // label=\"Add time\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      textAlign: \"center\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    InputProps={{\r\n                      endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                      disableUnderline: true,\r\n                    }}\r\n                  />\r\n                </ThemeProvider>\r\n              </div>\r\n            </MuiPickersUtilsProvider>\r\n            <Button\r\n              disabled={loader}\r\n              endIcon={<AddIcon />}\r\n              className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              ADD\r\n            </Button> */}\r\n          </TodoLeftUpBox>\r\n          <TodoLeftDownBox>\r\n            {todoLength !== 0 ? (\r\n              <DonutChart todoLength={todoLength} />\r\n            ) : (\r\n              <h3\r\n                style={{\r\n                  fontWeight: 600,\r\n                  padding: \"1rem\",\r\n                  color: \"rgba(0, 141, 94, 0.695)\",\r\n                }}\r\n              >\r\n                NO ITEMS\r\n              </h3>\r\n            )}\r\n          </TodoLeftDownBox>\r\n        </TodoLeftContainer>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TodoLeftContainer = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  width: 94%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst TodoLeftUpBox = styled.div`\r\n  flex: 0.4 !important;\r\n  border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-height: 400px) {\r\n    flex: 1 !important;\r\n    border: none;\r\n  }\r\n\r\n  .inputField {\r\n    width: 90%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    padding-left: 0.5rem;\r\n    margin: 0.5rem;\r\n    margin-bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 1rem;\r\n    flex: 0.9;\r\n    padding-left: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n    @media (max-height: 700px) {\r\n      font-size: 0.5rem;\r\n    }\r\n  }\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n  .AlarmIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n  }\r\n  .dateBox {\r\n    overflow: hidden;\r\n    width: 88%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 1rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  .AddButton {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  .AddButton:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  .AddButtonDisabled {\r\n    opacity: 0.7;\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n  }\r\n`;\r\nconst TodoLeftDownBox = styled.div`\r\n  overflow: hidden;\r\n  @media (max-height: 400px) {\r\n    display: none;\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Chat.js",["130","131","132","133","134","135","136"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { db } from \"../../firebase\";\r\nimport moment from \"moment\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  makeStyles,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  timeBtnChat: {\r\n    minWidth: \"30%\",\r\n  },\r\n}));\r\n\r\nfunction Chat({\r\n  id,\r\n  senderId,\r\n  text,\r\n  date,\r\n  name,\r\n  admin,\r\n  senderProfileImage,\r\n  help,\r\n  UrlTeamName,\r\n  teamTodoText,\r\n}) {\r\n  const { currentUser } = useAuth();\r\n\r\n  var timeDifference = new Date().getTimezoneOffset();\r\n  var date = moment(date).subtract(1, \"h\");\r\n  var dateComponent = date.utc().format(\"DD-MM-YYYY\");\r\n  var timeComponent = date.utc().utcOffset(timeDifference).format(\"HH:mm\");\r\n  var hours = new Date(date).getHours();\r\n  var ampm = hours >= 12 ? \"pm\" : \"am\";\r\n\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const classes = useStyles();\r\n\r\n  const handleDeleteChat = () => {\r\n    db.collection(\"teams\")\r\n      .doc(UrlTeamName)\r\n      .collection(\"discussion\")\r\n      .doc(id)\r\n      .delete();\r\n  };\r\n\r\n  return (\r\n    <TodoMainCard>\r\n      {senderId === currentUser.uid ? (\r\n        <>\r\n          {currentUser.uid === senderId ? (\r\n            \"\"\r\n          ) : (\r\n            <p className=\"senderName\">\r\n              {name}\r\n              {senderId === admin ? \" (Admin)\" : \"\"}{\" \"}\r\n            </p>\r\n          )}\r\n          <TodoTextBox>\r\n            <p\r\n              style={{\r\n                color: \"rgba(0, 99, 66, 0.868)\",\r\n                fontWeight: 400,\r\n                width: \"100%\",\r\n                wordBreak: \"break-all\",\r\n                verticalAlign: \"center\",\r\n                height: \"auto\",\r\n                fontSize: \"small\",\r\n                margin: \"0.2rem 0\",\r\n                fontFamily: \"Times New Roman\",\r\n              }}\r\n            >\r\n              {text}\r\n            </p>\r\n            <div className=\"chatTimeBox\">\r\n              <div className=\"chatTimeSpace\">\r\n                {help && (\r\n                  <Button\r\n                    classes={{ root: classes.timeBtnChat }}\r\n                    disabled\r\n                    className=\"helpNeeded\"\r\n                  >\r\n                    {!isSmall ? \"H\" : \"Help Needed\"}\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <p className=\"messageTime\">\r\n                {\" \"}\r\n                {dateComponent}\r\n                {\" - \"}\r\n                {timeComponent} {ampm}\r\n              </p>\r\n              <DeleteSweepIcon\r\n                className=\"chatDeleteBtn\"\r\n                onClick={handleDeleteChat}\r\n              />\r\n            </div>\r\n          </TodoTextBox>\r\n        </>\r\n      ) : (\r\n        <div style={{ display: \"flex\", width: \"100%\", alignItems: \"center\" }}>\r\n          <Avatar\r\n            src={senderProfileImage}\r\n            alt={name}\r\n            className=\"senderAvatar\"\r\n          />\r\n          <div\r\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\r\n          >\r\n            {currentUser.uid === senderId ? (\r\n              \"\"\r\n            ) : (\r\n              <p className=\"senderName\">{name}</p>\r\n            )}\r\n            <TodoTextBoxReceived>\r\n              <p\r\n                style={{\r\n                  color: \"rgba(0, 99, 66, 0.868)\",\r\n                  fontWeight: 400,\r\n                  width: \"100%\",\r\n                  wordBreak: \"break-all\",\r\n                  verticalAlign: \"center\",\r\n                  height: \"auto\",\r\n                  fontSize: \"small\",\r\n                  margin: \"0.2rem 0\",\r\n                  fontFamily: \"Times New Roman\",\r\n                }}\r\n              >\r\n                {text}\r\n              </p>\r\n              <div className=\"chatTimeBox\">\r\n                <div className=\"chatTimeSpace\">\r\n                  {help && (\r\n                    <Button\r\n                      classes={{ root: classes.timeBtnChat }}\r\n                      disabled\r\n                      className=\"helpNeeded\"\r\n                    >\r\n                      {!isSmall ? \"H\" : \"Help Needed\"}\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <p className=\"messageTime\">\r\n                  {\" \"}\r\n                  {dateComponent}\r\n                  {\" - \"}\r\n                  {timeComponent} {ampm}\r\n                </p>\r\n              </div>\r\n            </TodoTextBoxReceived>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {help ? (\r\n        senderId === currentUser.uid ? (\r\n          <TeamTodoChatBox>\r\n            <p>\r\n              <span style={{ color: \"rgba(0, 99, 66, 0.7)\" }}>Task:</span>{\" \"}\r\n              {teamTodoText}\r\n            </p>\r\n          </TeamTodoChatBox>\r\n        ) : (\r\n          <TeamTodoChatReceivedBox>\r\n            <p>\r\n              <span style={{ color: \"rgba(0, 99, 66, 0.7)\" }}>Task:</span>{\" \"}\r\n              {teamTodoText}\r\n            </p>\r\n          </TeamTodoChatReceivedBox>\r\n        )\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </TodoMainCard>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst TodoMainCard = styled.div`\r\n  margin: 0.2rem 0rem;\r\n  width: 100%;\r\n  height: 3rem;\r\n  min-height: 3rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n`;\r\n\r\nconst TodoTextBox = styled.div`\r\n  background-color: rgb(231, 250, 243);\r\n  border-radius: 10px 0px 10px 10px;\r\n  margin: 2px 0;\r\n  margin-right: 5px;\r\n  margin-left: 35%;\r\n  width: 60%;\r\n  z-index: 20;\r\n  padding: 0.2rem 0.5rem;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\r\n`;\r\n\r\nconst TodoTextBoxReceived = styled.div`\r\n  background-color: rgb(231, 250, 243);\r\n  border-radius: 0px 10px 10px 10px;\r\n  margin: 2px;\r\n  width: 60%;\r\n  z-index: 20;\r\n  padding: 0.2rem 0.5rem;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\r\n`;\r\nconst TodoActions = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: #fff;\r\n  flex: 0.05;\r\n  width: 100%;\r\n  height: auto;\r\n  padding: 0.2rem 0.5rem;\r\n  background-color: rgba(0, 99, 66, 0.868);\r\n  border-radius: 30px 0px 0px 30px;\r\n  border-left: 2px solid rgba(0, 99, 66, 0.768);\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex: 0.09;\r\n    `};\r\n\r\n  .delete {\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      transform:scale(0.8);\r\n    `};\r\n  }\r\n`;\r\n\r\nconst TeamTodoChatBox = styled.div`\r\n  height: auto;\r\n  min-height: 3rem;\r\n  background-color: rgba(0, 99, 66, 0.5);\r\n  margin-right: 5px;\r\n  margin-left: 30%;\r\n  width: 60%;\r\n  margin-top: -1rem;\r\n  border-radius: 10px 0px 10px 10px;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\r\n\r\n  p {\r\n    color: #fff;\r\n    margin: 0.2rem 0.5rem;\r\n    margin-top: 1rem;\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\nconst TeamTodoChatReceivedBox = styled.div`\r\n  height: auto;\r\n  min-height: 3rem;\r\n  background-color: rgba(0, 99, 66, 0.5);\r\n  width: 60%;\r\n  margin-left: 10%;\r\n  margin-top: -1rem;\r\n  border-radius: 0px 10px 10px 10px;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\r\n\r\n  p {\r\n    color: #fff;\r\n    margin: 0.2rem 0.5rem;\r\n    margin-top: 1rem;\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\n",["137","138"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Discussion.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Material.js",["165","166","167","168"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\home\\Home.js",["169","170","171"],"import {\r\n  AppBar,\r\n  Button,\r\n  makeStyles,\r\n  Paper,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport NavBar from \"../navBar/NavBar\";\r\nimport styled from \"styled-components\";\r\nimport PersonalTodo from \"../todo/PersonalTodo\";\r\nimport TeamTodo from \"../todo/TeamTodo\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport SlogPage from \"../todo/SlogPage\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport Discussion from \"../todo/Discussion\";\r\nimport { db } from \"../../firebase\";\r\nimport SnackBar from \"../snackbar/SnackBar\";\r\nimport Profile from \"../profile/Profile\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={1}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    width: \"100%\",\r\n  },\r\n  AppBar: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none\",\r\n    color: \"#000\",\r\n    height: \"2rem\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  Tabs: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"0rem\",\r\n    minHeight: \"1rem\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"rgb(5, 185, 125)\",\r\n    height: 3,\r\n    borderRadius: \"7px\",\r\n    width: \"9rem\",\r\n  },\r\n  label: {\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"0.7rem\",\r\n    color: \"#565656\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  flexContainer: {\r\n    borderBottom: \"3px solid rgba(196, 196, 196, 0.5)\",\r\n  },\r\n}));\r\n\r\nfunction Home(props) {\r\n  const { currentUser, logOut } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [profileImage, setProfileImage] = React.useState(\"\");\r\n  const [discussionLock, setDiscussionLock] = React.useState(true);\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"profile\")\r\n      .onSnapshot((snapshot) => {\r\n        const profile = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n          profileImage: doc.data().profileImage,\r\n        }));\r\n        profile.filter((p) => {\r\n          if (p.name !== \"\") {\r\n            setUserName(p.name);\r\n            setProfileImage(p.profileImage);\r\n            setOpen(true);\r\n            setDiscussionLock(false);\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"100vh\", overflow: \"hidden\" }}>\r\n      <HomeContainer>\r\n        {!isSmall ? (\r\n          <div\r\n            style={{\r\n              width: \"92%\",\r\n              height: \"56px\",\r\n              color: \"#fff\",\r\n              background: \"rgba(0, 145, 96, 0.2)\",\r\n              paddingLeft: \"15px\",\r\n              paddingRight: \"15px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              position: \"static\",\r\n              boxShadow:\r\n                \"rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/help\")}\r\n            >\r\n              Help\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <NavBar style={{ position: \"fixed\" }} page={1} />\r\n        )}\r\n\r\n        <Paper className=\"mainPaper\" elevation={5}>\r\n          <AppBar className={classes.AppBar} position=\"static\">\r\n            <Tabs\r\n              classes={{\r\n                indicator: classes.indicator,\r\n                flexContainer: classes.flexContainer,\r\n                root: classes.Tabs,\r\n              }}\r\n              variant=\"fullWidth\"\r\n              scrollButtons=\"auto\"\r\n              className={classes.Tabs}\r\n              value={value}\r\n              onChange={handleChange}\r\n              aria-label=\"simple tabs example\"\r\n              style={{ position: \"relative\" }}\r\n            >\r\n              <Tab\r\n                className={classes.label}\r\n                label={!isSmall ? \"My\" : \"PERSONAL\"}\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab className={classes.label} label=\"TEAM\" {...a11yProps(1)} />\r\n              <Tab\r\n                disabled={discussionLock}\r\n                className={classes.label}\r\n                label={!isSmall ? \"Chat\" : \"DISCUSSION\"}\r\n                {...a11yProps(2)}\r\n              />\r\n              <Tab\r\n                className={classes.label}\r\n                label=\"Profile\"\r\n                {...a11yProps(3)}\r\n              />\r\n            </Tabs>\r\n          </AppBar>\r\n          <TabPanel style={{ width: \"100%\" }} value={value} index={0}>\r\n            <PersonalTodo />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <TeamTodo\r\n              UrlTeamName={props.match.params.teamName}\r\n              setDiscussionLock={setDiscussionLock}\r\n              profileImage={profileImage}\r\n              setTabValue={setValue}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <Discussion\r\n              UrlTeamName={props.match.params.teamName}\r\n              userName={userName}\r\n              profileImage={profileImage}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={3}>\r\n            <Profile />\r\n          </TabPanel>\r\n        </Paper>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1440 320\"\r\n          className=\"svgUp\"\r\n        >\r\n          <path\r\n            fill=\"#00cba9\"\r\n            fill-opacity=\"1\"\r\n            d=\"M0,288L40,282.7C80,277,160,267,240,250.7C320,235,400,213,480,197.3C560,181,640,171,720,154.7C800,139,880,117,960,122.7C1040,128,1120,160,1200,176C1280,192,1360,192,1400,192L1440,192L1440,0L1400,0C1360,0,1280,0,1200,0C1120,0,1040,0,960,0C880,0,800,0,720,0C640,0,560,0,480,0C400,0,320,0,240,0C160,0,80,0,40,0L0,0Z\"\r\n          ></path>\r\n        </svg>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1440 320\"\r\n          className=\"svgDown\"\r\n        >\r\n          <path\r\n            fill=\"rgb(0, 80, 53)\"\r\n            fill-opacity=\"1\"\r\n            d=\"M0,96L14.1,96C28.2,96,56,96,85,112C112.9,128,141,160,169,160C197.6,160,226,128,254,128C282.4,128,311,160,339,149.3C367.1,139,395,85,424,80C451.8,75,480,117,508,144C536.5,171,565,181,593,176C621.2,171,649,149,678,170.7C705.9,192,734,256,762,234.7C790.6,213,819,107,847,106.7C875.3,107,904,213,932,234.7C960,256,988,192,1016,138.7C1044.7,85,1073,43,1101,37.3C1129.4,32,1158,64,1186,96C1214.1,128,1242,160,1271,186.7C1298.8,213,1327,235,1355,208C1383.5,181,1412,107,1426,69.3L1440,32L1440,320L1425.9,320C1411.8,320,1384,320,1355,320C1327.1,320,1299,320,1271,320C1242.4,320,1214,320,1186,320C1157.6,320,1129,320,1101,320C1072.9,320,1045,320,1016,320C988.2,320,960,320,932,320C903.5,320,875,320,847,320C818.8,320,791,320,762,320C734.1,320,706,320,678,320C649.4,320,621,320,593,320C564.7,320,536,320,508,320C480,320,452,320,424,320C395.3,320,367,320,339,320C310.6,320,282,320,254,320C225.9,320,198,320,169,320C141.2,320,113,320,85,320C56.5,320,28,320,14,320L0,320Z\"\r\n          ></path>\r\n        </svg>\r\n        {open && (\r\n          <SnackBar\r\n            open={open}\r\n            handleClose={() => setOpen(false)}\r\n            text={`Welcome! ${userName}`}\r\n            home={true}\r\n          />\r\n        )}\r\n      </HomeContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst HomeContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: rgb(5, 185, 125, 0.835);\r\n  padding: 0rem 1rem;\r\n  padding-top: 2.7rem;\r\n  overflow: hidden !important;\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      padding: 0;\r\n    `};\r\n\r\n  .mainPaper {\r\n    overflow: hidden;\r\n    position: absolute;\r\n    width: 97.5%;\r\n    height: 91%;\r\n    border-radius: 15px;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 15px 15px 0 0;\r\n    `};\r\n  }\r\n\r\n  .svgUp {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0rem;\r\n    left: 0;\r\n    transform: scale(1);\r\n    z-index: -1;\r\n  }\r\n  .svgDown {\r\n    display: block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    transform: scale(1);\r\n    z-index: -1;\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodoCard.js",["195","196","197"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\Schedular\\CalendarModal.js",["198","199"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js",["200","201","202","203","204","205"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TodoCard.js",["206","207"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { db } from \"../../firebase\";\r\nimport moment from \"moment\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CalendarModal from \"../Schedular/CalendarModal\";\r\nimport { useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nfunction TodoCard({\r\n  id,\r\n  text,\r\n  todoStartDate,\r\n  todoEndDate,\r\n  checked,\r\n  priority,\r\n  teamTodoText,\r\n  todoTeamName,\r\n  help,\r\n}) {\r\n  const { currentUser } = useAuth();\r\n  const [localCheck, setLocalCheck] = useState(checked);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleDelete = (todoId) => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"todos\")\r\n      .doc(todoId)\r\n      .delete();\r\n  };\r\n\r\n  const handleChecked = () => {\r\n    setLocalCheck(!localCheck);\r\n    db.collection(\"users\").doc(currentUser.uid).collection(\"todos\").doc(id).set(\r\n      {\r\n        checked: localCheck,\r\n      },\r\n      { merge: true }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TodoMainCard>\r\n      <TodoStartIcon>\r\n        <CustomTooltip title=\"Completed\" arrow placement=\"left\">\r\n          {checked ? (\r\n            <CheckBoxIcon\r\n              className=\"todoStartIcon\"\r\n              onClick={() => handleChecked()}\r\n            />\r\n          ) : (\r\n            <CheckBoxOutlineBlankIcon\r\n              className=\"todoStartIcon\"\r\n              onClick={() => handleChecked()}\r\n            />\r\n          )}\r\n        </CustomTooltip>\r\n      </TodoStartIcon>\r\n\r\n      <TodoTextBox>\r\n        <div\r\n          className=\"todoDate\"\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"20px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <p className=\"startEndDate\">\r\n            Start{isSmall ? \" Date:\" : \":\"}\r\n            <span className=\"startEndDateSpan\">\r\n              {isSmall\r\n                ? new Date(todoStartDate).toString().substring(0, 15)\r\n                : new Date(todoStartDate).toString().substring(0, 11)}\r\n            </span>\r\n          </p>\r\n          <p className=\"startEndDate\">\r\n            End{isSmall ? \" Date:\" : \":\"}\r\n            <span className=\"startEndDateSpan\">\r\n              {isSmall\r\n                ? new Date(todoStartDate).toString().substring(0, 15)\r\n                : new Date(todoStartDate).toString().substring(0, 11)}\r\n            </span>\r\n          </p>\r\n          <EditIcon\r\n            className=\"editTodoIcon\"\r\n            onClick={() => setOpenEdit(true)}\r\n          />\r\n        </div>\r\n        {help && (\r\n          <p\r\n            style={{\r\n              backgroundColor: \"rgba(0, 99, 66,0.5)\",\r\n              color: \"#fff\",\r\n              fontWeight: 300,\r\n              width: \"auto\",\r\n              wordBreak: \"break-all\",\r\n              verticalAlign: \"center\",\r\n              height: \"auto\",\r\n              padding: \"5px\",\r\n              borderRadius: \"5px\",\r\n              // lineHeight: \"30px\",\r\n              fontFamily: \"Times New Roman\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              marginBottom: \"0.3rem\",\r\n              fontSize: \"13px\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                fontSize: \"10px\",\r\n                color: \"rgba(0, 99, 66)\",\r\n                marginBottom: \"2px\",\r\n              }}\r\n            >\r\n              {todoTeamName}\r\n            </span>\r\n            {teamTodoText}\r\n          </p>\r\n        )}\r\n        <p\r\n          style={{\r\n            color: \"rgba(0, 99, 66, 0.868)\",\r\n            fontWeight: 400,\r\n            width: \"100%\",\r\n            wordBreak: \"break-all\",\r\n            verticalAlign: \"center\",\r\n            height: \"auto\",\r\n            // lineHeight: \"30px\",\r\n            fontFamily: \"Times New Roman\",\r\n          }}\r\n        >\r\n          {text}\r\n        </p>\r\n      </TodoTextBox>\r\n      <TodoActions\r\n        style={{\r\n          backgroundColor:\r\n            priority === 3\r\n              ? \"rgba(185, 5, 5, 0.8)\"\r\n              : priority === 2\r\n              ? \"rgba(185, 86, 5, 0.8)\"\r\n              : \"rgba(0, 99, 66, 0.8)\",\r\n        }}\r\n      >\r\n        <DeleteIcon className=\"delete\" onClick={() => handleDelete(id)} />\r\n      </TodoActions>\r\n      {openEdit && (\r\n        <CalendarModal\r\n          open={openEdit}\r\n          handleClose={() => setOpenEdit(false)}\r\n          event={{\r\n            title: text,\r\n            backgroundColor:\r\n              priority === 3\r\n                ? \"rgba(185, 5, 5, 0.8)\"\r\n                : priority === 2\r\n                ? \"rgba(185, 86, 5, 0.8)\"\r\n                : \"rgba(0, 99, 66, 0.8)\",\r\n            start: new Date(todoStartDate),\r\n            end: new Date(todoEndDate),\r\n            _def: {\r\n              publicId: id,\r\n              extendedProps: {\r\n                teamName: todoTeamName,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </TodoMainCard>\r\n  );\r\n}\r\n\r\nexport default TodoCard;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst TodoMainCard = styled.div`\r\n  margin: 0.7rem 0rem;\r\n  box-shadow: 0px 1px 5px rgb(0, 129, 86);\r\n  background-color: rgb(231, 250, 243);\r\n  border-radius: 20px 10px 30px 10px;\r\n  width: 100%;\r\n  height: 3rem;\r\n  min-height: 3rem;\r\n  display: flex;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n`;\r\nconst TodoStartIcon = styled.div`\r\n  transform: scale(0.8);\r\n  flex: 0.07;\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-right: 2px solid rgba(0, 99, 66, 0.368);\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex: 0.09;\r\n    `};\r\n\r\n  .todoStartIcon {\r\n    color: rgba(0, 99, 66, 0.568);\r\n    font-size: 1.7rem;\r\n    object-fit: contain;\r\n    cursor: pointer;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      transform:scale(0.8);\r\n      padding:0 0.3rem;\r\n    `};\r\n  }\r\n`;\r\nconst TodoTextBox = styled.div`\r\n  flex: 0.88;\r\n  width: 100%;\r\n  padding: 0.2rem 0.5rem;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n\r\n  .todoDate {\r\n    font-size: 13px;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n       font-size:9px;\r\n    `};\r\n  }\r\n  .startEndDate {\r\n    flex: 0.5;\r\n    font-size: 9px;\r\n    color: rgba(4, 126, 85, 0.868);\r\n    font-weight: 700;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n       font-size:8px;\r\n       font-weight: 400;\r\n    `};\r\n  }\r\n  .startEndDateSpan {\r\n    font-weight: 400;\r\n    margin-left: 0.5rem;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n          margin-left:0.1rem;\r\n    `};\r\n  }\r\n  .editTodoIcon {\r\n    color: rgba(4, 126, 85, 0.568);\r\n    transform: scale(0.7);\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n  .editTodoIcon:hover {\r\n    color: rgba(4, 126, 85, 0.868);\r\n    transform: scale(0.8);\r\n  }\r\n`;\r\nconst TodoActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #fff;\r\n  flex: 0.05;\r\n  width: 100%;\r\n  height: auto;\r\n  padding: 0.2rem 0.5rem;\r\n  border-radius: 30px 10px 30px 30px;\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex: 0.09;\r\n    `};\r\n\r\n  .delete {\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      transform:scale(0.8);\r\n    `};\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\Schedular\\Schedular.js",["208","209"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Calendar as FCalendar } from \"@fullcalendar/core\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"./style.css\";\r\nimport CalendarModal from \"./CalendarModal\";\r\n\r\nfunction Schedular(props) {\r\n  const calendarRef = useRef(null);\r\n  const [event, setEvent] = useState([]);\r\n  const [openCalendarModal, setOpenCalendarModal] = useState(false);\r\n  const day = 60 * 60 * 24 * 1000;\r\n\r\n  const getAllEvents = () => {\r\n    return props.todoList?.map((todo) => {\r\n      if (todo.priority === 3) {\r\n        return {\r\n          id: todo.id,\r\n          title: todo.todoText,\r\n          start: new Date(new Date(todo.todoStartDate).getTime() + day)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          end: new Date(new Date(todo.todoEndDate).getTime() + day * 2)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          backgroundColor: \"rgba(185, 5, 5, 0.8)\",\r\n          display: \"block\",\r\n          teamName: todo.todoTeamName,\r\n        };\r\n      }\r\n      if (todo.priority === 2) {\r\n        return {\r\n          id: todo.id,\r\n          title: todo.todoText,\r\n          start: new Date(new Date(todo.todoStartDate).getTime() + day)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          end: new Date(new Date(todo.todoEndDate).getTime() + day * 2)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          backgroundColor: \"rgba(185, 86, 5, 0.8)\",\r\n          display: \"block\",\r\n          teamName: todo.todoTeamName,\r\n        };\r\n      }\r\n      if (todo.priority === 1) {\r\n        return {\r\n          id: todo.id,\r\n          title: todo.todoText,\r\n          start: new Date(new Date(todo.todoStartDate).getTime() + day)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          end: new Date(new Date(todo.todoEndDate).getTime() + day * 2)\r\n            .toISOString()\r\n            .replace(/T.*$/, \"\"),\r\n          backgroundColor: \"rgba(0, 99, 66, 0.8)\",\r\n          display: \"block\",\r\n          teamName: todo.todoTeamName,\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChild(getAllEvents());\r\n    console.log(getAllEvents());\r\n  }, []);\r\n\r\n  const getChild = (data) => {\r\n    var calendarEl = document.getElementById(\"calendar\");\r\n    var calendar = new FCalendar(calendarEl, {\r\n      aspectRatio: 1.8,\r\n      weekends: true,\r\n      contentWidth: \"100%\",\r\n      height: \"auto\",\r\n      themeSystem: \"bootstrap\",\r\n      plugins: [listPlugin, dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n\r\n      headerToolbar: {\r\n        left: \"prev,next,today\",\r\n        center: \"title\",\r\n        right: \"listYear,dayGridMonth\",\r\n        ...props.options,\r\n      },\r\n      views: {\r\n        listYear: { buttonText: \"Schedule\" },\r\n        dayGridMonth: { buttonText: \"Month\" },\r\n      },\r\n      eventClick: function (info) {\r\n        modalFunction(info.event);\r\n\r\n        console.log(info.event);\r\n      },\r\n\r\n      defaultView: \"listWeek\",\r\n      editable: false,\r\n      selectable: false,\r\n      selectMirror: false,\r\n      dayMaxEvents: false,\r\n      customButtons: \"\",\r\n      initialEvents: data,\r\n      navLinks: true,\r\n      initialView: props.initialView,\r\n    });\r\n    console.log(calendar.getOption(\"aspectRatio\"));\r\n    calendar.render();\r\n    calendarRef.current = calendar;\r\n  };\r\n  const modalFunction = (e) => {\r\n    setEvent(e);\r\n    setOpenCalendarModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedularContainer\">\r\n      <div className=\"demo-app\">\r\n        <div className=\"demo-app-main\">\r\n          <div id=\"calendar\"></div>\r\n        </div>\r\n      </div>\r\n      {openCalendarModal && (\r\n        <CalendarModal\r\n          open={CalendarModal}\r\n          handleClose={() => setOpenCalendarModal(false)}\r\n          event={event}\r\n          getAllEvents={getAllEvents}\r\n          getChild={getChild}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedular;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\index.js",[],["210","211"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\context\\AuthContext.js",[],["212","213"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Delete.js",["214","215","216","217","218","219","220","221"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarProfile.js",["222","223","224","225","226","227","228","229","230","231","232","233"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Dialog.js",["234","235","236","237","238","239"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\HelpPage.js",["240"],"import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport styled from \"styled-components\";\r\nimport NavBar from \"../navBar/NavBar\";\r\nimport videoFaq from \"../../assets/videos/faqVideo.mp4\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { Button, useMediaQuery } from \"@material-ui/core\";\r\nimport EmailDialog from \"./EmailDialog\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport SnackBar from \"../snackbar/SnackBar\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    overflow: \"scroll\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nfunction HelpPage() {\r\n  const classes = useStyles();\r\n  const { resetPassword, logOut } = useAuth();\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [openEmail, setOpenEmail] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const history = useHistory();\r\n\r\n  const handleChange = (set, value) => {\r\n    set(value);\r\n    setError(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpenEmail(false);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  const handlePasswordChange = async () => {\r\n    if (email === \"\") {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        await resetPassword(email);\r\n        setEmail(\"\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <HelpPageContainer>\r\n        {!isSmall ? (\r\n          <div\r\n            style={{\r\n              width: \"92%\",\r\n              height: \"56px\",\r\n              color: \"#fff\",\r\n              background: \"rgba(0, 145, 96, 0.9)\",\r\n              paddingLeft: \"15px\",\r\n              paddingRight: \"15px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              zIndex: 100,\r\n              boxShadow:\r\n                \"rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/home\")}\r\n            >\r\n              Home\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <NavBar page={1} home={true} />\r\n        )}\r\n\r\n        <HelpPageLeftBox>\r\n          <video autoPlay loop muted className=\"helpVideo\">\r\n            <source src={videoFaq} type=\"video/mp4\"></source>\r\n          </video>\r\n        </HelpPageLeftBox>\r\n        <HelpPageRightBox>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"80vh\",\r\n              overflowX: \"hidden\",\r\n              overflowY: \"scroll\",\r\n              padding: \"0 2rem\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <Button\r\n              className=\"mail\"\r\n              style={{\r\n                background: \"rgb(0, 180, 120)\",\r\n                color: \"#fff\",\r\n                width: \"30%\",\r\n                marginTop: \"2rem\",\r\n                marginBottom: \"1rem\",\r\n                overflow: \"hidden\",\r\n              }}\r\n              onClick={() => setOpenEmail(true)}\r\n              startIcon={<EmailIcon />}\r\n            >\r\n              Mail us\r\n            </Button>\r\n            <div className={classes.root}>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Change Password\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <Typography>Type your email:</Typography>\r\n                  <InputContainer>\r\n                    <input\r\n                      type=\"email\"\r\n                      required\r\n                      placeholder=\"Email...\"\r\n                      onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                    />\r\n                  </InputContainer>\r\n                  <Button\r\n                    disabled={loader}\r\n                    style={{\r\n                      background: \"rgb(0, 180, 120)\",\r\n                      color: \"#fff\",\r\n                      width: \"30%\",\r\n                    }}\r\n                    onClick={handlePasswordChange}\r\n                  >\r\n                    {loader ? \"Check Mail\" : \"Reset\"}\r\n                  </Button>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Personal Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Write the todo which you want to add then add a time to\r\n                    it.\r\n                    <br />\r\n                    2) You can all mark the todo completed by clicking on the\r\n                    checkbox in starting of every todo.\r\n                    <br />\r\n                    3) You can see completed todos and not completed todos in\r\n                    their respective sections.\r\n                    <br />\r\n                    4) A Donut chart is also visible at bottom left corner, It\r\n                    tell how much work is their and also show the percentage of\r\n                    work completed by you.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Team Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Create or Join a team, while creating make sure the you\r\n                    have unique team name.\r\n                    <br />\r\n                    2) Add todos to your team, the todo will get appear on every\r\n                    teammate page.\r\n                    <br />\r\n                    3) You can also assign you teammate's name to a particular\r\n                    todo.\r\n                    <br />\r\n                    4) You can also add images to any particular todo, by this\r\n                    you can explain the work more easily.\r\n                    <br />\r\n                    5) If the work is done mark it complete, this check will\r\n                    appear on every teammate page.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Discussion Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \" rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Select the team.\r\n                    <br />\r\n                    2) Start typing the message in th input box at bottom right.\r\n                    <br />\r\n                    3) Your messages can be seen by every member of that\r\n                    particular team.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    How to use: Profile Section\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \" rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) First setup your profile.\r\n                    <br />\r\n                    2) On the right side you can select a team to get its all\r\n                    members details.\r\n                    <br />\r\n                    3) You can also endorse any group member once for their good\r\n                    work.\r\n                    <br />\r\n                    4) Your endorsements can be seen at the last of your profile\r\n                    in left.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Not able to see team todos\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    1) Check your internet connection.\r\n                    <br />\r\n                    2) Talk to team leader, may be the team was deleted.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Raise an issue\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <Typography>To raise an issue please go to</Typography>\r\n\r\n                  <a href=\"https://github.com/Tushardeepak/slogger-official\">\r\n                    https://github.com/Tushardeepak\r\n                  </a>\r\n\r\n                  <Typography>\r\n                    Create issue, give details and images.\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              <Accordion>\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60, 0.2)\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  <Typography className={classes.heading}>\r\n                    Legal Rights\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails\r\n                  style={{\r\n                    background: \"rgb(0, 90, 60)\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <Typography>All rights of Slogger belong to</Typography>\r\n\r\n                  <a href=\"https://github.com/Tushardeepak\">\r\n                    https://github.com/Tushardeepak\r\n                  </a>\r\n\r\n                  <Typography>Feel free to contact/collaborate.</Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        </HelpPageRightBox>\r\n      </HelpPageContainer>\r\n      {openEmail && (\r\n        <EmailDialog\r\n          open={openEmail}\r\n          handleClose={handleClose}\r\n          setSent={setSent}\r\n        />\r\n      )}\r\n      {sent && (\r\n        <SnackBar\r\n          open={sent}\r\n          handleClose={() => setSent(false)}\r\n          text={\"Mail Sent, Thank You!\"}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HelpPage;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst HelpPageContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  overflow: hidden !important;\r\n`;\r\nconst HelpPageLeftBox = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  .helpVideo {\r\n    margin-top: 2rem;\r\n    object-fit: contain;\r\n    height: 80vh;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      display:none;\r\n  `}\r\n  }\r\n`;\r\nconst HelpPageRightBox = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden !important;\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      width: 100%;\r\n  `}\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    padding: \"1rem 0\";\r\n  }\r\n`;\r\nconst InputContainer = styled.div`\r\n  margin: 0.7rem 0;\r\n\r\n  input {\r\n    width: 90%;\r\n    background: rgb(0, 180, 120);\r\n    color: #fff;\r\n    outline: none;\r\n    border: none;\r\n    height: 2.5rem;\r\n    padding: 0 0.5rem;\r\n    font-size: 0.9rem;\r\n    border-radius: 3px;\r\n  }\r\n  input::placeholder {\r\n    color: #fff;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\helpPage\\EmailDialog.js",["241","242","243","244"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./style.css\";\r\nimport emailjs from \"emailjs-com\";\r\nimport { Fade, useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  const theme = useTheme();\r\n  return useMediaQuery(theme.breakpoints.down(\"sm\")) ? (\r\n    <Slide direction=\"left\" ref={ref} {...props} />\r\n  ) : (\r\n    <Fade direction=\"\" ref={ref} {...props} />\r\n  );\r\n});\r\n\r\nexport default function AddingTeamModal({ open, handleClose, setSent }) {\r\n  const [senderEmail, setSenderEmail] = useState(\"\");\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleSend = (e) => {\r\n    console.log(e);\r\n    e.preventDefault();\r\n    emailjs\r\n      .sendForm(\r\n        \"service_ulq5i1l\",\r\n        \"template_iaftte2\",\r\n        e.target,\r\n        \"user_cY9bhdeY9bLLxIaUdplFl\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n\r\n    e.target.reset();\r\n    setSent(true);\r\n    handleClose();\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      fullScreen={!isSmall}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-slide-title\" className=\"title\">\r\n        Mail us\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          <form\r\n            className=\"contact-form\"\r\n            onSubmit={handleSend}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              width: \"33rem\",\r\n            }}\r\n          >\r\n            <label>Email</label>\r\n            <input type=\"email\" name=\"email\" className=\"input\" />\r\n            <label>Message</label>\r\n            <textarea name=\"message\" className=\"input\" />\r\n            <div style={{ display: \"flex\" }}>\r\n              <button className=\"addButton\" onClick={() => handleClose()}>\r\n                Cancel\r\n              </button>\r\n              <input type=\"submit\" value=\"Send\" className=\"addButton\" />\r\n            </div>\r\n          </form>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\firebase.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\CustomTooltip.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\ImagesModal.js",["245","246","247"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\snackbar\\SnackBar.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\DownloadImageModal.js",["248","249","250"],{"ruleId":"251","severity":1,"message":"252","line":41,"column":6,"nodeType":"253","endLine":41,"endColumn":18,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":44,"column":39,"nodeType":"257","messageId":"258","endLine":44,"endColumn":41},{"ruleId":"251","severity":1,"message":"259","line":67,"column":6,"nodeType":"253","endLine":67,"endColumn":8,"suggestions":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":1,"column":27,"nodeType":"267","messageId":"268","endLine":1,"endColumn":36},{"ruleId":"265","severity":1,"message":"269","line":17,"column":3,"nodeType":"267","messageId":"268","endLine":17,"endColumn":17},{"ruleId":"265","severity":1,"message":"270","line":65,"column":10,"nodeType":"267","messageId":"268","endLine":65,"endColumn":15},{"ruleId":"265","severity":1,"message":"271","line":67,"column":10,"nodeType":"267","messageId":"268","endLine":67,"endColumn":18},{"ruleId":"265","severity":1,"message":"272","line":67,"column":20,"nodeType":"267","messageId":"268","endLine":67,"endColumn":31},{"ruleId":"265","severity":1,"message":"273","line":78,"column":9,"nodeType":"267","messageId":"268","endLine":78,"endColumn":22},{"ruleId":"251","severity":1,"message":"259","line":125,"column":6,"nodeType":"253","endLine":125,"endColumn":8,"suggestions":"274"},{"ruleId":"265","severity":1,"message":"275","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":25},{"ruleId":"265","severity":1,"message":"276","line":3,"column":8,"nodeType":"267","messageId":"268","endLine":3,"endColumn":32},{"ruleId":"265","severity":1,"message":"277","line":4,"column":8,"nodeType":"267","messageId":"268","endLine":4,"endColumn":20},{"ruleId":"265","severity":1,"message":"278","line":5,"column":8,"nodeType":"267","messageId":"268","endLine":5,"endColumn":18},{"ruleId":"265","severity":1,"message":"279","line":9,"column":8,"nodeType":"267","messageId":"268","endLine":9,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":41,"column":7,"nodeType":"267","messageId":"282","endLine":41,"endColumn":11},{"ruleId":"265","severity":1,"message":"283","line":236,"column":7,"nodeType":"267","messageId":"268","endLine":236,"endColumn":18},{"ruleId":"261","replacedBy":"284"},{"ruleId":"263","replacedBy":"285"},{"ruleId":"265","severity":1,"message":"286","line":5,"column":3,"nodeType":"267","messageId":"268","endLine":5,"endColumn":9},{"ruleId":"265","severity":1,"message":"287","line":6,"column":3,"nodeType":"267","messageId":"268","endLine":6,"endColumn":6},{"ruleId":"265","severity":1,"message":"288","line":7,"column":3,"nodeType":"267","messageId":"268","endLine":7,"endColumn":7},{"ruleId":"265","severity":1,"message":"289","line":9,"column":3,"nodeType":"267","messageId":"268","endLine":9,"endColumn":13},{"ruleId":"265","severity":1,"message":"290","line":13,"column":17,"nodeType":"267","messageId":"268","endLine":13,"endColumn":23},{"ruleId":"265","severity":1,"message":"291","line":16,"column":8,"nodeType":"267","messageId":"268","endLine":16,"endColumn":23},{"ruleId":"265","severity":1,"message":"292","line":20,"column":8,"nodeType":"267","messageId":"268","endLine":20,"endColumn":17},{"ruleId":"265","severity":1,"message":"269","line":22,"column":3,"nodeType":"267","messageId":"268","endLine":22,"endColumn":17},{"ruleId":"265","severity":1,"message":"293","line":23,"column":3,"nodeType":"267","messageId":"268","endLine":23,"endColumn":26},{"ruleId":"265","severity":1,"message":"294","line":24,"column":3,"nodeType":"267","messageId":"268","endLine":24,"endColumn":13},{"ruleId":"265","severity":1,"message":"295","line":26,"column":8,"nodeType":"267","messageId":"268","endLine":26,"endColumn":15},{"ruleId":"265","severity":1,"message":"296","line":27,"column":8,"nodeType":"267","messageId":"268","endLine":27,"endColumn":19},{"ruleId":"265","severity":1,"message":"297","line":28,"column":8,"nodeType":"267","messageId":"268","endLine":28,"endColumn":18},{"ruleId":"265","severity":1,"message":"298","line":30,"column":10,"nodeType":"267","messageId":"268","endLine":30,"endColumn":23},{"ruleId":"265","severity":1,"message":"279","line":32,"column":8,"nodeType":"267","messageId":"268","endLine":32,"endColumn":21},{"ruleId":"265","severity":1,"message":"299","line":35,"column":8,"nodeType":"267","messageId":"268","endLine":35,"endColumn":26},{"ruleId":"265","severity":1,"message":"300","line":37,"column":8,"nodeType":"267","messageId":"268","endLine":37,"endColumn":16},{"ruleId":"265","severity":1,"message":"301","line":62,"column":10,"nodeType":"267","messageId":"268","endLine":62,"endColumn":19},{"ruleId":"265","severity":1,"message":"302","line":106,"column":7,"nodeType":"267","messageId":"268","endLine":106,"endColumn":27},{"ruleId":"265","severity":1,"message":"303","line":120,"column":9,"nodeType":"267","messageId":"268","endLine":120,"endColumn":16},{"ruleId":"265","severity":1,"message":"304","line":126,"column":9,"nodeType":"267","messageId":"268","endLine":126,"endColumn":26},{"ruleId":"251","severity":1,"message":"259","line":176,"column":6,"nodeType":"253","endLine":176,"endColumn":19,"suggestions":"305"},{"ruleId":"255","severity":1,"message":"306","line":205,"column":34,"nodeType":"257","messageId":"307","endLine":205,"endColumn":36},{"ruleId":"251","severity":1,"message":"308","line":224,"column":6,"nodeType":"253","endLine":224,"endColumn":23,"suggestions":"309"},{"ruleId":"265","severity":1,"message":"310","line":560,"column":7,"nodeType":"267","messageId":"268","endLine":560,"endColumn":17},{"ruleId":"265","severity":1,"message":"311","line":567,"column":7,"nodeType":"267","messageId":"268","endLine":567,"endColumn":16},{"ruleId":"265","severity":1,"message":"312","line":15,"column":8,"nodeType":"267","messageId":"268","endLine":15,"endColumn":16},{"ruleId":"265","severity":1,"message":"313","line":16,"column":8,"nodeType":"267","messageId":"268","endLine":16,"endColumn":24},{"ruleId":"265","severity":1,"message":"314","line":82,"column":13,"nodeType":"267","messageId":"268","endLine":82,"endColumn":23},{"ruleId":"251","severity":1,"message":"315","line":167,"column":6,"nodeType":"253","endLine":167,"endColumn":8,"suggestions":"316"},{"ruleId":"265","severity":1,"message":"317","line":21,"column":8,"nodeType":"267","messageId":"268","endLine":21,"endColumn":16},{"ruleId":"255","severity":1,"message":"306","line":127,"column":28,"nodeType":"257","messageId":"307","endLine":127,"endColumn":30},{"ruleId":"251","severity":1,"message":"259","line":136,"column":6,"nodeType":"253","endLine":136,"endColumn":8,"suggestions":"318"},{"ruleId":"265","severity":1,"message":"319","line":6,"column":14,"nodeType":"267","messageId":"268","endLine":6,"endColumn":21},{"ruleId":"265","severity":1,"message":"269","line":13,"column":3,"nodeType":"267","messageId":"268","endLine":13,"endColumn":17},{"ruleId":"265","severity":1,"message":"320","line":22,"column":8,"nodeType":"267","messageId":"268","endLine":22,"endColumn":13},{"ruleId":"265","severity":1,"message":"301","line":57,"column":10,"nodeType":"267","messageId":"268","endLine":57,"endColumn":19},{"ruleId":"265","severity":1,"message":"321","line":139,"column":10,"nodeType":"267","messageId":"268","endLine":139,"endColumn":14},{"ruleId":"265","severity":1,"message":"322","line":139,"column":16,"nodeType":"267","messageId":"268","endLine":139,"endColumn":23},{"ruleId":"265","severity":1,"message":"323","line":140,"column":10,"nodeType":"267","messageId":"268","endLine":140,"endColumn":15},{"ruleId":"265","severity":1,"message":"324","line":140,"column":17,"nodeType":"267","messageId":"268","endLine":140,"endColumn":25},{"ruleId":"265","severity":1,"message":"270","line":143,"column":10,"nodeType":"267","messageId":"268","endLine":143,"endColumn":15},{"ruleId":"265","severity":1,"message":"325","line":144,"column":10,"nodeType":"267","messageId":"268","endLine":144,"endColumn":22},{"ruleId":"265","severity":1,"message":"326","line":144,"column":24,"nodeType":"267","messageId":"268","endLine":144,"endColumn":39},{"ruleId":"265","severity":1,"message":"327","line":155,"column":10,"nodeType":"267","messageId":"268","endLine":155,"endColumn":15},{"ruleId":"265","severity":1,"message":"328","line":155,"column":17,"nodeType":"267","messageId":"268","endLine":155,"endColumn":25},{"ruleId":"265","severity":1,"message":"329","line":162,"column":10,"nodeType":"267","messageId":"268","endLine":162,"endColumn":21},{"ruleId":"265","severity":1,"message":"330","line":162,"column":23,"nodeType":"267","messageId":"268","endLine":162,"endColumn":37},{"ruleId":"251","severity":1,"message":"259","line":249,"column":6,"nodeType":"253","endLine":249,"endColumn":19,"suggestions":"331"},{"ruleId":"255","severity":1,"message":"306","line":259,"column":34,"nodeType":"257","messageId":"307","endLine":259,"endColumn":36},{"ruleId":"251","severity":1,"message":"259","line":268,"column":6,"nodeType":"253","endLine":268,"endColumn":19,"suggestions":"332"},{"ruleId":"255","severity":1,"message":"306","line":280,"column":28,"nodeType":"257","messageId":"307","endLine":280,"endColumn":30},{"ruleId":"251","severity":1,"message":"333","line":289,"column":6,"nodeType":"253","endLine":289,"endColumn":8,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":494,"column":17,"nodeType":"337","endLine":501,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":542,"column":17,"nodeType":"337","endLine":549,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":583,"column":17,"nodeType":"337","endLine":590,"endColumn":19},{"ruleId":"265","severity":1,"message":"338","line":8,"column":8,"nodeType":"267","messageId":"268","endLine":8,"endColumn":14},{"ruleId":"265","severity":1,"message":"339","line":11,"column":18,"nodeType":"267","messageId":"268","endLine":11,"endColumn":28},{"ruleId":"265","severity":1,"message":"340","line":13,"column":8,"nodeType":"267","messageId":"268","endLine":13,"endColumn":24},{"ruleId":"265","severity":1,"message":"341","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":16},{"ruleId":"265","severity":1,"message":"342","line":12,"column":10,"nodeType":"267","messageId":"268","endLine":12,"endColumn":20},{"ruleId":"265","severity":1,"message":"320","line":18,"column":8,"nodeType":"267","messageId":"268","endLine":18,"endColumn":13},{"ruleId":"265","severity":1,"message":"270","line":127,"column":10,"nodeType":"267","messageId":"268","endLine":127,"endColumn":15},{"ruleId":"251","severity":1,"message":"259","line":227,"column":6,"nodeType":"253","endLine":227,"endColumn":8,"suggestions":"343"},{"ruleId":"335","severity":1,"message":"336","line":409,"column":15,"nodeType":"337","endLine":409,"endColumn":55},{"ruleId":"255","severity":1,"message":"256","line":438,"column":29,"nodeType":"257","messageId":"258","endLine":438,"endColumn":31},{"ruleId":"255","severity":1,"message":"256","line":464,"column":29,"nodeType":"257","messageId":"258","endLine":464,"endColumn":31},{"ruleId":"265","severity":1,"message":"266","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":26},{"ruleId":"265","severity":1,"message":"338","line":8,"column":8,"nodeType":"267","messageId":"268","endLine":8,"endColumn":14},{"ruleId":"255","severity":1,"message":"344","line":17,"column":39,"nodeType":"257","messageId":"258","endLine":17,"endColumn":41},{"ruleId":"251","severity":1,"message":"345","line":69,"column":6,"nodeType":"253","endLine":69,"endColumn":8,"suggestions":"346"},{"ruleId":"261","replacedBy":"347"},{"ruleId":"263","replacedBy":"348"},{"ruleId":"261","replacedBy":"349"},{"ruleId":"263","replacedBy":"350"},{"ruleId":"265","severity":1,"message":"275","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":25},{"ruleId":"265","severity":1,"message":"341","line":11,"column":8,"nodeType":"267","messageId":"268","endLine":11,"endColumn":16},{"ruleId":"255","severity":1,"message":"306","line":53,"column":34,"nodeType":"257","messageId":"307","endLine":53,"endColumn":36},{"ruleId":"251","severity":1,"message":"351","line":66,"column":6,"nodeType":"253","endLine":66,"endColumn":8,"suggestions":"352"},{"ruleId":"265","severity":1,"message":"353","line":140,"column":10,"nodeType":"267","messageId":"268","endLine":140,"endColumn":28},{"ruleId":"265","severity":1,"message":"354","line":164,"column":9,"nodeType":"267","messageId":"268","endLine":164,"endColumn":23},{"ruleId":"255","severity":1,"message":"355","line":170,"column":20,"nodeType":"257","messageId":"307","endLine":170,"endColumn":22},{"ruleId":"356","severity":1,"message":"357","line":292,"column":11,"nodeType":"358","endLine":294,"endColumn":12},{"ruleId":"265","severity":1,"message":"329","line":49,"column":10,"nodeType":"267","messageId":"268","endLine":49,"endColumn":21},{"ruleId":"265","severity":1,"message":"325","line":51,"column":10,"nodeType":"267","messageId":"268","endLine":51,"endColumn":22},{"ruleId":"265","severity":1,"message":"359","line":63,"column":10,"nodeType":"267","messageId":"268","endLine":63,"endColumn":15},{"ruleId":"265","severity":1,"message":"360","line":63,"column":17,"nodeType":"267","messageId":"268","endLine":63,"endColumn":25},{"ruleId":"265","severity":1,"message":"361","line":64,"column":10,"nodeType":"267","messageId":"268","endLine":64,"endColumn":25},{"ruleId":"265","severity":1,"message":"362","line":65,"column":10,"nodeType":"267","messageId":"268","endLine":65,"endColumn":14},{"ruleId":"265","severity":1,"message":"363","line":65,"column":16,"nodeType":"267","messageId":"268","endLine":65,"endColumn":32},{"ruleId":"265","severity":1,"message":"273","line":68,"column":9,"nodeType":"267","messageId":"268","endLine":68,"endColumn":22},{"ruleId":"265","severity":1,"message":"314","line":152,"column":13,"nodeType":"267","messageId":"268","endLine":152,"endColumn":23},{"ruleId":"265","severity":1,"message":"364","line":177,"column":9,"nodeType":"267","messageId":"268","endLine":177,"endColumn":22},{"ruleId":"251","severity":1,"message":"365","line":224,"column":6,"nodeType":"253","endLine":224,"endColumn":8,"suggestions":"366"},{"ruleId":"251","severity":1,"message":"365","line":241,"column":6,"nodeType":"253","endLine":241,"endColumn":8,"suggestions":"367"},{"ruleId":"265","severity":1,"message":"368","line":28,"column":10,"nodeType":"267","messageId":"268","endLine":28,"endColumn":18},{"ruleId":"265","severity":1,"message":"369","line":28,"column":20,"nodeType":"267","messageId":"268","endLine":28,"endColumn":31},{"ruleId":"265","severity":1,"message":"370","line":31,"column":10,"nodeType":"267","messageId":"268","endLine":31,"endColumn":17},{"ruleId":"265","severity":1,"message":"371","line":31,"column":19,"nodeType":"267","messageId":"268","endLine":31,"endColumn":29},{"ruleId":"255","severity":1,"message":"306","line":48,"column":28,"nodeType":"257","messageId":"307","endLine":48,"endColumn":30},{"ruleId":"255","severity":1,"message":"306","line":68,"column":28,"nodeType":"257","messageId":"307","endLine":68,"endColumn":30},{"ruleId":"265","severity":1,"message":"270","line":37,"column":10,"nodeType":"267","messageId":"268","endLine":37,"endColumn":15},{"ruleId":"265","severity":1,"message":"372","line":2,"column":8,"nodeType":"267","messageId":"268","endLine":2,"endColumn":14},{"ruleId":"265","severity":1,"message":"373","line":4,"column":8,"nodeType":"267","messageId":"268","endLine":4,"endColumn":21},{"ruleId":"265","severity":1,"message":"374","line":23,"column":10,"nodeType":"267","messageId":"268","endLine":23,"endColumn":21},{"ruleId":"265","severity":1,"message":"375","line":23,"column":23,"nodeType":"267","messageId":"268","endLine":23,"endColumn":37},{"ruleId":"265","severity":1,"message":"376","line":17,"column":16,"nodeType":"267","messageId":"268","endLine":17,"endColumn":23},{"ruleId":"251","severity":1,"message":"377","line":21,"column":6,"nodeType":"253","endLine":21,"endColumn":8,"suggestions":"378"},{"ruleId":"335","severity":1,"message":"336","line":41,"column":15,"nodeType":"337","endLine":56,"endColumn":17},{"ruleId":"265","severity":1,"message":"379","line":5,"column":8,"nodeType":"267","messageId":"268","endLine":5,"endColumn":21},{"ruleId":"265","severity":1,"message":"380","line":6,"column":8,"nodeType":"267","messageId":"268","endLine":6,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":45,"column":26,"nodeType":"358","endLine":45,"endColumn":41},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'array' and 'colors'. Either include them or remove the dependency array.","ArrayExpression",["383"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook React.useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["384"],"no-native-reassign",["385"],"no-negated-in-lhs",["386"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'DateTimePicker' is defined but never used.","'error' is assigned a value but never used.","'todoList' is assigned a value but never used.","'setTodoList' is assigned a value but never used.","'handleSignOut' is assigned a value but never used.",["387"],"'useState' is defined but never used.","'CheckBoxOutlineBlankIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'CustomTooltip' is defined but never used.","no-redeclare","'date' is already defined.","redeclared","'TodoActions' is assigned a value but never used.",["385"],["386"],"'AppBar' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Typography' is defined but never used.","'useRef' is defined but never used.","'AddingTeamModal' is defined but never used.","'AlarmIcon' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'DatePicker' is defined but never used.","'AddIcon' is defined but never used.","'MomentUtils' is defined but never used.","'CreateIcon' is defined but never used.","'ThemeProvider' is defined but never used.","'profileSetterImage' is defined but never used.","'SendIcon' is defined but never used.","'a11yProps' is defined but never used.","'defaultMaterialTheme' is assigned a value but never used.","'classes' is assigned a value but never used.","'handleSubmitEnter' is assigned a value but never used.",["388"],"Array.prototype.filter() expects a return value from arrow function.","expectedInside","React Hook React.useEffect has missing dependencies: 'UrlTeamName' and 'deleteTeam'. Either include them or remove the dependency array.",["389"],"'ChatScreen' is assigned a value but never used.","'ChatInput' is assigned a value but never used.","'DoneIcon' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'uploadTask' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'urlTeamName'. Either include them or remove the dependency array.",["390"],"'SlogPage' is defined but never used.",["391"],"'storage' is defined but never used.","'green' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'profileError' is assigned a value but never used.","'setProfileError' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'profilePath' is assigned a value but never used.","'setProfilePath' is assigned a value but never used.",["392"],["393"],"React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'setDiscussionLock'. Either include them or remove the dependency array. If 'setDiscussionLock' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["394"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'moment' is defined but never used.","'IconButton' is defined but never used.","'ErrorOutlineIcon' is defined but never used.","'firebase' is defined but never used.","'useHistory' is defined but never used.",["395"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'getAllEvents' and 'getChild'. Either include them or remove the dependency array.",["396"],["385"],["386"],["385"],["386"],"React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'teamName'. Either include them or remove the dependency array.",["397"],"'databaseSideDelete' is assigned a value but never used.","'databaseDelete' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'teams' is assigned a value but never used.","'setTeams' is assigned a value but never used.","'allMemberIdList' is assigned a value but never used.","'team' is assigned a value but never used.","'handleChangeTeam' is assigned a value but never used.","'getAllMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["398"],["399"],"'teamList' is assigned a value but never used.","'setTeamList' is assigned a value but never used.","'already' is assigned a value but never used.","'setAlready' is assigned a value but never used.","'Button' is defined but never used.","'DialogActions' is defined but never used.","'senderEmail' is assigned a value but never used.","'setSenderEmail' is assigned a value but never used.","'setLink' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'imageList'. Either include it or remove the dependency array.",["400"],"'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},"no-global-assign","no-unsafe-negation",{"desc":"403","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"403","fix":"412"},{"desc":"406","fix":"413"},{"desc":"406","fix":"414"},{"desc":"415","fix":"416"},{"desc":"403","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"403","fix":"422"},{"desc":"403","fix":"423"},{"desc":"424","fix":"425"},"Update the dependencies array to be: [array, colors, todoLength]",{"range":"426","text":"427"},"Update the dependencies array to be: [currentUser.uid]",{"range":"428","text":"429"},{"range":"430","text":"429"},"Update the dependencies array to be: [UrlTeamName, currentUser.uid]",{"range":"431","text":"432"},"Update the dependencies array to be: [UrlTeamName, chatList.length, deleteTeam]",{"range":"433","text":"434"},"Update the dependencies array to be: [id, urlTeamName]",{"range":"435","text":"436"},{"range":"437","text":"429"},{"range":"438","text":"432"},{"range":"439","text":"432"},"Update the dependencies array to be: [currentUser.uid, setDiscussionLock]",{"range":"440","text":"441"},{"range":"442","text":"429"},"Update the dependencies array to be: [getAllEvents, getChild]",{"range":"443","text":"444"},"Update the dependencies array to be: [currentUser.uid, teamName]",{"range":"445","text":"446"},{"range":"447","text":"429"},{"range":"448","text":"429"},"Update the dependencies array to be: [imageList]",{"range":"449","text":"450"},[1109,1121],"[array, colors, todoLength]",[1762,1764],"[currentUser.uid]",[3871,3873],[4926,4939],"[UrlTeamName, currentUser.uid]",[6365,6382],"[UrlTeamName, chatList.length, deleteTeam]",[5099,5101],"[id, urlTeamName]",[3494,3496],[7428,7441],[7984,7997],[8530,8532],"[currentUser.uid, setDiscussionLock]",[6292,6294],[2376,2378],"[getAllEvents, getChild]",[1953,1955],"[currentUser.uid, teamName]",[7590,7592],[8118,8120],[638,640],"[imageList]"]