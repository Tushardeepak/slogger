[{"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\auth\\SignUp.js":"1","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarPersonal.js":"2","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\Schedular\\CalendarModal.js":"3","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\members\\TeamMembers.js":"4","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarProfile.js":"5","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarTeams.js":"6","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js":"7","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Discussion.js":"8","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SIdebarTimeline.js":"9","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\Board.js":"10","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js":"11","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\notification\\Notification.js":"12","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\TimelineEdit.js":"13","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\Timeline.js":"14","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Delete.js":"15","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\index.js":"16","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\home\\Home.js":"17","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\profile\\Endo.js":"18","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Chat.js":"19","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\DownloadImageModal.js":"20","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\slogger\\Slogger.js":"21","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js":"22"},{"size":16600,"mtime":1622362119303,"results":"23","hashOfConfig":"24"},{"size":12112,"mtime":1622362119839,"results":"25","hashOfConfig":"24"},{"size":9923,"mtime":1622362119259,"results":"26","hashOfConfig":"24"},{"size":7116,"mtime":1622362119811,"results":"27","hashOfConfig":"24"},{"size":17564,"mtime":1622362119852,"results":"28","hashOfConfig":"24"},{"size":18491,"mtime":1622364036386,"results":"29","hashOfConfig":"24"},{"size":41705,"mtime":1622364120241,"results":"30","hashOfConfig":"24"},{"size":15803,"mtime":1622364361196,"results":"31","hashOfConfig":"24"},{"size":10530,"mtime":1622364825490,"results":"32","hashOfConfig":"24"},{"size":5628,"mtime":1622364912372,"results":"33","hashOfConfig":"24"},{"size":31040,"mtime":1622370620285,"results":"34","hashOfConfig":"24"},{"size":10968,"mtime":1622370707242,"results":"35","hashOfConfig":"24"},{"size":7003,"mtime":1622372167989,"results":"36","hashOfConfig":"24"},{"size":11268,"mtime":1622371826231,"results":"37","hashOfConfig":"24"},{"size":8452,"mtime":1622372445923,"results":"38","hashOfConfig":"24"},{"size":465,"mtime":1622362119925,"results":"39","hashOfConfig":"24"},{"size":11272,"mtime":1622362119467,"results":"40","hashOfConfig":"24"},{"size":1958,"mtime":1622362119516,"results":"41","hashOfConfig":"24"},{"size":8968,"mtime":1622362119604,"results":"42","hashOfConfig":"24"},{"size":6787,"mtime":1622362119766,"results":"43","hashOfConfig":"24"},{"size":16505,"mtime":1622362119575,"results":"44","hashOfConfig":"24"},{"size":3314,"mtime":1622362119650,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"v7u82j",{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70","usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\auth\\SignUp.js",["99","100","101","102","103","104","105","106"],"import { Button, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./style.css\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { db } from \"../../firebase\";\r\nimport signUpVideo from \"../../assets/videos/Gaulois.mp4\";\r\nimport signUpImage from \"../../assets/images/signUpMainLogo.png\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport signUpLoader from \"../../assets/images/signUpLoader.gif\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction SignUp() {\r\n  const [authToggle, setAuthToggle] = useState(false);\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [passwordVisibility, setPasswordVisibility] = useState(\"password\");\r\n  const [email, setEmail] = useState(\"\");\r\n  //const [firstName, setFirstName] = useState(\"\");\r\n  //const [lastName, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [userEmailVerified, setUserEmailVerified] = useState(false);\r\n  const [pleaseVerified, setPleaseVerified] = useState(false);\r\n  const { signUp, signIn, currentUser } = useAuth();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const handleChange = (set, value) => {\r\n    set(value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleSignUp = async () => {\r\n    if (\r\n      email === \"\" ||\r\n      password.length < 6 ||\r\n      // firstName === \"\" ||\r\n      confirmPassword.length < 6 ||\r\n      password !== confirmPassword\r\n    ) {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        const USER = await signUp(email, password);\r\n        if (USER.user.emailVerified) {\r\n          setUserEmailVerified(false);\r\n          db.collection(\"users\").doc(USER?.uid).collection(\"profile\").add({\r\n            email: email,\r\n            // firstName: firstName,\r\n            //lastName: lastName,\r\n          });\r\n          setLoader(false);\r\n          history.push(\"/home\");\r\n        } else {\r\n          setLoader(false);\r\n          setUserEmailVerified(true);\r\n          USER.user.sendEmailVerification();\r\n          setAuthToggle(true);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoader(false);\r\n        if (error.code === \"auth/email-already-in-use\") {\r\n          setAuthToggle(true);\r\n          setUserEmailVerified(true);\r\n          setPleaseVerified(true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    if (email === \"\" || password === \"\") {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        const USER = await signIn(email, password);\r\n        if (USER.user.emailVerified) {\r\n          history.push(\"/home\");\r\n        } else {\r\n          setPleaseVerified(true);\r\n        }\r\n        setLoader(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoader(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    const _visibility = !visibility;\r\n    setVisibility(_visibility);\r\n    setPasswordVisibility(_visibility ? \"text\" : \"password\");\r\n  };\r\n\r\n  const handleAuthToggle = () => {\r\n    setAuthToggle(!authToggle);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n    setError(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (currentUser !== null && currentUser.user !== undefined) {\r\n      if (currentUser.user.emailVerified) {\r\n        history.push(\"/home\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      {loader ? (\r\n        <div className=\"loaderContainer\">\r\n          <img className=\"signUpLoader\" src={signUpLoader} />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <video autoPlay loop muted className=\"signUpVideo\">\r\n        <source src={signUpVideo} type=\"video/mp4\"></source>\r\n      </video>\r\n      <Alaric>\r\n        <h1>\r\n          HELLO, <br />I AM <span className=\"highlight\">ALARIC </span>\r\n          <br />\r\n          WELCOME TO <span className=\"highlight\">SLOGGER </span>\r\n        </h1>\r\n      </Alaric>\r\n      {authToggle ? (\r\n        <SignUpBox>\r\n          <SignUpForm>\r\n            {/* <img src={signUpImage} /> */}\r\n            <h2 onClick={() => history.push(\"/\")}>SLOGGER</h2>\r\n            <div className=\"signUpFormBottom\">\r\n              {userEmailVerified && (\r\n                <h4\r\n                  style={{\r\n                    color: \"rgb(5, 185, 125)\",\r\n                    padding: \"0.5rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {pleaseVerified\r\n                    ? \"Please verify account before sign in\"\r\n                    : \"Check your mail for verification\"}\r\n                </h4>\r\n              )}\r\n\r\n              <CustomTooltip\r\n                title=\"Alaric : Enter your email.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <AccountBoxIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric : Password please, Hope you remember.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    autocomplete=\"new-password\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) => handleChange(setPassword, e.target.value)}\r\n                  ></input>\r\n                  {visibility ? (\r\n                    <VisibilityIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOffIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CustomTooltip>\r\n\r\n              <Button\r\n                style={{\r\n                  width: \"60%\",\r\n                  marginTop: \"1rem\",\r\n                  color: \"#fff\",\r\n                  background: \"rgb(5, 185, 125)\",\r\n                }}\r\n                onClick={() => handleSignIn()}\r\n              >\r\n                Let's Slog\r\n              </Button>\r\n\r\n              {error ? (\r\n                <p\r\n                  style={{\r\n                    color: \"red\",\r\n                    padding: \"0.5rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Alaric: Please fill form correctly.\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </SignUpForm>\r\n          <div className=\"footer\">\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Not a Slogger?{\" \"}\r\n              <span\r\n                style={{ color: \"rgb(0, 128, 85)\", cursor: \"pointer\" }}\r\n                onClick={() => handleAuthToggle()}\r\n              >\r\n                Register\r\n              </span>\r\n            </p>\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Need Help?\r\n            </p>\r\n          </div>\r\n        </SignUpBox>\r\n      ) : (\r\n        <SignUpBox>\r\n          <SignUpForm>\r\n            <h2 onClick={() => history.push(\"/\")}>SLOGGER</h2>\r\n            <div className=\"signUpFormBottom\">\r\n              <CustomTooltip\r\n                title=\"Alaric: Enter a valid email, It's good for future.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <AccountBoxIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric: Make sure your password is at least 6 letters.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    className=\"inputSignUp\"\r\n                    autocomplete=\"new-password\"\r\n                    onChange={(e) => handleChange(setPassword, e.target.value)}\r\n                  ></input>\r\n                  {visibility ? (\r\n                    <VisibilityIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOffIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric: Make sure to write same password.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputFieldSignUp\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Confirm Password\"\r\n                    value={confirmPassword}\r\n                    autoComplete=\"off\"\r\n                    className=\"inputSignUp\"\r\n                    onChange={(e) =>\r\n                      handleChange(setConfirmPassword, e.target.value)\r\n                    }\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n\r\n              <Button\r\n                style={{\r\n                  width: \"60%\",\r\n                  marginTop: \"1rem\",\r\n                  color: \"#fff\",\r\n                  background: \"rgb(5, 185, 125)\",\r\n                }}\r\n                onClick={() => handleSignUp()}\r\n              >\r\n                Register\r\n              </Button>\r\n\r\n              {error ? (\r\n                <p\r\n                  style={{\r\n                    color: \"red\",\r\n                    padding: \"0.5rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Alaric: Please give a valid email and min 6 digit password\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </SignUpForm>\r\n          <div className=\"footer\">\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Already a Slogger?{\" \"}\r\n              <span\r\n                style={{ color: \"rgb(0, 128, 85)\", cursor: \"pointer\" }}\r\n                onClick={() => handleAuthToggle()}\r\n              >\r\n                Sign In\r\n              </span>\r\n            </p>\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Need Help?\r\n            </p>\r\n          </div>\r\n        </SignUpBox>\r\n      )}\r\n    </SignUpContainer>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"600px\",\r\n});\r\n\r\nconst SignUpContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  .loaderContainer {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: #fefcfe;\r\n    z-index: 1000;\r\n    opacity: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .signUpLoader {\r\n    object-fit: contain;\r\n    transform: scale(0.3);\r\n  }\r\n`;\r\n\r\nconst Alaric = styled.div`\r\n  position: absolute;\r\n  left: 1rem;\r\n  top: 20%;\r\n  background: none;\r\n  height: 28rem;\r\n  width: 35vw;\r\n  min-width: 10rem;\r\n  padding-left: 2rem;\r\n  align-items: center;\r\n  font-size: 2.1vw;\r\n  color: rgba(0, 128, 85, 0.568);\r\n  font-family: \"Bebas Neue\", cursive;\r\n  letter-spacing: 0.2rem;\r\n\r\n  ${customMedia.lessThan(\"mdDesktop\")`\r\n      display:none;\r\n    `};\r\n\r\n  .highlight {\r\n    color: rgb(0, 128, 85) !important;\r\n  }\r\n`;\r\n\r\nconst SignUpBox = styled.div`\r\n  height: 100vh;\r\n  width: 43vw;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  right: 0;\r\n  top: 0;\r\n  ${customMedia.lessThan(\"lgDesktop\")`\r\n     width: 33rem;\r\n    `};\r\n  ${customMedia.lessThan(\"tablet\")`\r\n      width: 28rem;\r\n      \r\n    `};\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      width: 100%;\r\n      \r\n    `};\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .footer {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n   font-size:10px;\r\n   bottom:8rem !important;\r\n   width:100%;\r\n   flex-direction:column;\r\n   line-height:2rem;\r\n    `};\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      bottom:2rem !important;\r\n      line-height:1rem;\r\n    `};\r\n  }\r\n`;\r\n\r\nconst SignUpForm = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 35vw;\r\n  /* box-shadow: 13px 13px 20px rgba(0, 128, 85, 0.164),\r\n    inset -3px -3px 10px rgba(0, 128, 85, 0.459); */\r\n\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  ${customMedia.lessThan(\"tablet\")`\r\n  margin: 40px auto;\r\n   width:  calc(50vw + 70px);\r\n   height: 90vh;\r\n    `};\r\n\r\n  img {\r\n    position: absolute;\r\n    height: 6rem;\r\n    width: 60%;\r\n    margin: 1rem 2rem;\r\n    margin-top: 2rem;\r\n    object-fit: contain;\r\n  }\r\n  h2 {\r\n    font-size: 3rem;\r\n    margin-top: 3rem;\r\n    color: #008055;\r\n    font-family: \"Shadows Into Light\", cursive;\r\n  }\r\n\r\n  .signUpFormBottom {\r\n    position: absolute;\r\n    margin-top: 7rem;\r\n    width: 100%;\r\n    height: 75vh;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .inputFieldSignUp {\r\n    width: 90%;\r\n    height: 1.5rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      padding: 0.5rem 1rem;\r\n      height: 1.7rem;\r\n    `};\r\n  }\r\n  .inputSignUp {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem !important;\r\n    flex: 0.9;\r\n  }\r\n  .inputSignUp::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem !important;\r\n  }\r\n  .EmailAccount {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem !important;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n  }\r\n  .inputSignUp {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:12px !important;\r\n    `};\r\n  }\r\n  .inputSignUp::placeholder {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:12px !important;\r\n    `};\r\n  }\r\n  .shortScreen {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n     transform:scale(1.5);\r\n    `};\r\n  }\r\n  .password {\r\n    flex: 0.8;\r\n  }\r\n`;\r\n",["107","108"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarPersonal.js",["109","110","111","112","113","114","115"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./sidebar.css\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  DatePicker,\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { createMuiTheme, Slider } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { db } from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport DonutChart from \"../DonutChart\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport styled from \"styled-components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    color: \"#fff\",\r\n    background: \"rgba(0, 145, 96, 0.9)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SidebarPersonal() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { currentUser, logOut } = useAuth();\r\n  const history = useHistory();\r\n  const [selectedStartDate, handleStartDateChange] = useState(new Date());\r\n  const [selectedEndDate, handleEndDateChange] = useState(new Date());\r\n  const [priority, setPriority] = useState(0);\r\n  const [inputTodo, setInputTodo] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [todoLength, setTodoLength] = useState(0);\r\n\r\n  const PrettoSlider = createMuiTheme({\r\n    overrides: {\r\n      MuiSlider: {\r\n        root: {\r\n          color:\r\n            priority < 33\r\n              ? \"rgb(1, 112, 75)\"\r\n              : priority > 66\r\n              ? \"rgba(185, 5, 5)\"\r\n              : \"rgba(185, 86, 5)\",\r\n          height: 8,\r\n          transition: \"all 0.5s ease-in-out\",\r\n          transform: \"scale(0.6)\",\r\n        },\r\n\r\n        thumb: {\r\n          height: 24,\r\n          width: 24,\r\n          backgroundColor: \"#fff\",\r\n          border: \"2px solid currentColor\",\r\n          marginTop: -8,\r\n          marginLeft: -12,\r\n          \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"inherit\",\r\n          },\r\n        },\r\n        active: {},\r\n        valueLabel: {\r\n          left: \"calc(-50% + 4px)\",\r\n        },\r\n        track: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n        rail: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n  const handleInputChange = (value) => {\r\n    setInputTodo(value);\r\n    setError(false);\r\n  };\r\n  function labelText(value) {\r\n    return priority < 33 ? \"Low\" : priority > 66 ? \"Top\" : \"Med\";\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    if (inputTodo !== \"\") {\r\n      setLoader(true);\r\n      db.collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"todos\")\r\n        .add({\r\n          todoText: inputTodo,\r\n          todoStartDate: selectedStartDate.toISOString(),\r\n          todoEndDate: selectedEndDate.toISOString(),\r\n          checked: false,\r\n          priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n      setInputTodo(\"\");\r\n      setLoader(false);\r\n      handleClose();\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleTodoLength = (list) => {\r\n    const l = list.length;\r\n    setTodoLength(l);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"todos\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoText: doc.data().todoText,\r\n          todoDate: doc.data().todoDate,\r\n          checked: doc.data().checked,\r\n        }));\r\n        console.log(list);\r\n        handleTodoLength(list);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addItemsPersonal\" onClick={handleClickOpen}>\r\n        Add Items +\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <TodoLeftContainer>\r\n          <TodoLeftUpBox>\r\n            <div className=\"inputField\">\r\n              <CreateIcon className=\"todoIcon\" />\r\n              <input\r\n                value={inputTodo}\r\n                className=\"todoInputPersonal\"\r\n                type=\"text\"\r\n                placeholder=\"Write here...\"\r\n                onChange={(e) => handleInputChange(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"dataContainerSide\">\r\n                <h3 className=\"timeHeading\">Start date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBoxSide\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        //format=\"DD/MM/YYYY\"\r\n                        value={selectedStartDate}\r\n                        onChange={handleStartDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n              <div className=\"dataContainerSide\">\r\n                <h3 className=\"timeHeading\">End date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBoxSide\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        value={selectedEndDate}\r\n                        //  format=\"DD/MM/YYYY\"\r\n                        onChange={handleEndDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              disabled={loader}\r\n              endIcon={<AddIcon />}\r\n              className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              ADD\r\n            </Button>\r\n            <p\r\n              style={{\r\n                color: \"rgb(0, 90, 60)\",\r\n                fontSize: \"0.6rem\",\r\n                marginTop: \"0.5rem\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Set priority\r\n            </p>\r\n            <ThemeProvider theme={PrettoSlider}>\r\n              <Slider\r\n                getAriaValueText={labelText}\r\n                defaultValue={priority}\r\n                value={priority}\r\n                valueLabelFormat={labelText}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(e, data) => {\r\n                  setPriority(data);\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n          </TodoLeftUpBox>\r\n          <TodoLeftDownBox>\r\n            {todoLength !== 0 ? (\r\n              <DonutChart todoLength={todoLength} />\r\n            ) : (\r\n              <h3\r\n                style={{\r\n                  fontWeight: 600,\r\n                  padding: \"1rem\",\r\n                  color: \"rgba(0, 141, 94, 0.695)\",\r\n                }}\r\n              >\r\n                NO ITEMS\r\n              </h3>\r\n            )}\r\n          </TodoLeftDownBox>\r\n        </TodoLeftContainer>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TodoLeftContainer = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  width: 94%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst TodoLeftUpBox = styled.div`\r\n  flex: 0.4 !important;\r\n  border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-height: 400px) {\r\n    flex: 1 !important;\r\n    border: none;\r\n  }\r\n\r\n  .inputField {\r\n    width: 90%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    padding-left: 0.5rem;\r\n    margin: 0.5rem;\r\n    margin-bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 1rem;\r\n    flex: 0.9;\r\n    padding-left: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n    @media (max-height: 700px) {\r\n      font-size: 0.5rem;\r\n    }\r\n  }\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n  .AlarmIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n  }\r\n  .dateBox {\r\n    overflow: hidden;\r\n    width: 88%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 1rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  .AddButton {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  .AddButton:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  .AddButtonDisabled {\r\n    opacity: 0.7;\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n  }\r\n`;\r\nconst TodoLeftDownBox = styled.div`\r\n  overflow: hidden;\r\n  @media (max-height: 400px) {\r\n    display: none;\r\n  }\r\n`;\r\n",["116","117"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\Schedular\\CalendarModal.js",["118","119","120","121","122"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  createMuiTheme,\r\n  Fade,\r\n  useMediaQuery,\r\n  useTheme,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport \"./style.css\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(2, 88, 60)\",\r\n    },\r\n  },\r\n  width: \"100%\",\r\n\r\n  overrides: {\r\n    MuiInputBase: {\r\n      root: {\r\n        overflow: \"hidden\",\r\n      },\r\n      input: {\r\n        color: \"rgb(0, 90, 60)\",\r\n        fontSize: \"1.2rem\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paperWidthSm: {\r\n        width: \"300px\",\r\n      },\r\n    },\r\n    MuiPickersDay: {\r\n      daySelected: {\r\n        backgroundColor: \"rgb(2, 88, 60)\",\r\n        [\":hover\"]: {\r\n          backgroundColor: \"rgb(2, 88, 60)\",\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      textPrimary: {\r\n        color: \"rgb(2, 88, 60)\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  const theme = useTheme();\r\n  return useMediaQuery(theme.breakpoints.down(\"sm\")) ? (\r\n    <Slide direction=\"left\" ref={ref} {...props} />\r\n  ) : (\r\n    <Fade direction=\"\" ref={ref} {...props} />\r\n  );\r\n});\r\n\r\nexport default function CalendarModal({\r\n  open,\r\n  handleClose,\r\n  event,\r\n  getAllEvents,\r\n  getChild,\r\n  setPersonalTabValue,\r\n  team,\r\n  urlTeamName,\r\n  setOpenSchedular,\r\n  board,\r\n}) {\r\n  const [todoText, setTodoText] = useState(event.title);\r\n  const [selectedStartDate, handleStartDateChange] = useState(event.start);\r\n  const [selectedEndDate, handleEndDateChange] = useState(event.end);\r\n  const [priority, setPriority] = useState(\r\n    event.backgroundColor === \"rgba(185, 5, 5, 0.8)\"\r\n      ? 100\r\n      : event.backgroundColor === \"rgba(185, 86, 5, 0.8)\"\r\n      ? 50\r\n      : 0\r\n  );\r\n  const { currentUser } = useAuth();\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const PrettoSlider = withStyles({\r\n    root: {\r\n      color:\r\n        priority < 33\r\n          ? \"rgb(1, 112, 75)\"\r\n          : priority > 66\r\n          ? \"rgba(185, 5, 5)\"\r\n          : \"rgba(185, 86, 5)\",\r\n      height: 8,\r\n      transition: \"all 0.5s ease-in-out\",\r\n      transform: \"scale(0.6)\",\r\n      marginLeft: \"1rem\",\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: \"#fff\",\r\n      border: \"2px solid currentColor\",\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      \"&:focus, &:hover, &$active\": {\r\n        boxShadow: \"inherit\",\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: \"calc(-50% + 4px)\",\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n\r\n  const handleSubmit = () => {\r\n    if (\r\n      todoText !== \"\" &&\r\n      new Date(selectedStartDate).getTime() <=\r\n        new Date(selectedEndDate).getTime()\r\n    ) {\r\n      console.log(event._def.publicId);\r\n      if (team) {\r\n        db.collection(\"teams\")\r\n          .doc(urlTeamName)\r\n          .collection(\"teamTodos\")\r\n          .doc(event._def.publicId)\r\n          .set(\r\n            {\r\n              todoText: todoText,\r\n              todoStartTime: selectedStartDate.toISOString(),\r\n              todoEndTime: selectedEndDate.toISOString(),\r\n              priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n            },\r\n            { merge: true }\r\n          );\r\n        setOpenSchedular(false);\r\n      } else {\r\n        db.collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"todos\")\r\n          .doc(event._def.publicId)\r\n          .set(\r\n            {\r\n              todoText: todoText,\r\n              todoStartDate: selectedStartDate.toISOString(),\r\n              todoEndDate: selectedEndDate.toISOString(),\r\n              priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n            },\r\n            { merge: true }\r\n          );\r\n        setPersonalTabValue(0);\r\n      }\r\n\r\n      // getChild(getAllEvents());\r\n      setPriority(0);\r\n      handleClose();\r\n    }\r\n  };\r\n  function labelText(value) {\r\n    return priority < 33 ? \"Low\" : priority > 66 ? \"Top\" : \"Med\";\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      new Date(selectedEndDate).getTime() <\r\n      new Date(selectedStartDate).getTime()\r\n    ) {\r\n      handleEndDateChange(selectedStartDate);\r\n    }\r\n    // if (new Date(selectedStartDate).getTime() < new Date().getTime()) {\r\n    //   handleStartDateChange(new Date());\r\n    // }\r\n  }, [selectedEndDate]);\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      fullScreen={!isSmall}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        className=\"modalTitle\"\r\n        style={{ paddingLeft: \"30px\" }}\r\n      >\r\n        Edit\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          <p\r\n            style={{\r\n              marginLeft: \"0.5rem\",\r\n              fontSize: \"15px\",\r\n              color: \"rgb(0, 90, 60)\",\r\n              marginBottom: \"0.5rem\",\r\n            }}\r\n          >\r\n            {event._def.extendedProps.teamName}\r\n          </p>\r\n          <textarea\r\n            className=\"todoTextarea\"\r\n            value={todoText}\r\n            onChange={(e) => setTodoText(e.target.value)}\r\n          />\r\n          <div style={{ display: isSmall && \"flex\" }}>\r\n            <div className=\"dataContainer\">\r\n              <h3 className=\"timeHeading\">Start date</h3>\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <div className=\"dateBox\">\r\n                  <ThemeProvider theme={defaultMaterialTheme}>\r\n                    <DatePicker\r\n                      variant=\"dialog\"\r\n                      // format=\"DD/MM/YYYY\"\r\n                      value={selectedStartDate}\r\n                      orientation=\"portrait\"\r\n                      onChange={handleStartDateChange}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        textAlign: \"center\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      InputProps={{\r\n                        endAdornment: <AlarmIcon className=\"alarmModalIcon\" />,\r\n                        disableUnderline: true,\r\n                      }}\r\n                    />\r\n                  </ThemeProvider>\r\n                </div>\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n            <div className=\"dataContainer\" style={{ marginLeft: isSmall && 0 }}>\r\n              <h3 className=\"timeHeading\">End date</h3>\r\n              <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                <div className=\"dateBox\">\r\n                  <ThemeProvider theme={defaultMaterialTheme}>\r\n                    <DatePicker\r\n                      variant=\"dialog\"\r\n                      orientation=\"portrait\"\r\n                      value={selectedEndDate}\r\n                      //  format=\"DD/MM/YYYY\"\r\n                      onChange={handleEndDateChange}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        textAlign: \"center\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      InputProps={{\r\n                        endAdornment: <AlarmIcon className=\"alarmModalIcon\" />,\r\n                        disableUnderline: true,\r\n                      }}\r\n                    />\r\n                  </ThemeProvider>\r\n                </div>\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          </div>\r\n\r\n          {!board && (\r\n            <>\r\n              <p\r\n                style={{\r\n                  color: \"rgb(0, 90, 60)\",\r\n                  fontSize: \"0.6rem\",\r\n                  marginTop: \"0.7rem\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Set priority\r\n              </p>\r\n              <div style={{ width: \"90%\" }}>\r\n                <PrettoSlider\r\n                  getAriaValueText={labelText}\r\n                  defaultValue={priority}\r\n                  value={priority}\r\n                  valueLabelFormat={labelText}\r\n                  valueLabelDisplay=\"auto\"\r\n                  onChange={(e, data) => {\r\n                    setPriority(data);\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions style={{ paddingRight: \"22px\" }}>\r\n        <Button\r\n          className=\"addButtonModal\"\r\n          onClick={handleClose}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"addButtonModal\"\r\n          color=\"primary\"\r\n          onClick={handleSubmit}\r\n        >\r\n          save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\members\\TeamMembers.js",["123","124","125","126"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarProfile.js",["127","128","129","130","131","132","133","134","135","136","137","138"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SidebarTeams.js",["139","140","141","142"],"import React, { useState, useEffect } from \"react\";\r\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport TeamCard from \"../TeamCard\";\r\nimport AddingTeamModal from \"../Dialog\";\r\nimport SnackBar from \"../../snackbar/SnackBar\";\r\nimport { db } from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { Slider } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    color: \"#fff\",\r\n    background: \"rgba(0, 145, 96, 0.9)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nconst TransitionTodo = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nexport default function SidebarTeams({ UrlTeamName, userName, discussion }) {\r\n  const [make, setMake] = useState(false);\r\n  const [openMaker, setOpenMaker] = useState(false);\r\n  const [openMakeSnackBar, setOpenMakeSnackBar] = useState(false);\r\n  const [openJoinSnackBar, setOpenJoinSnackBar] = useState(false);\r\n  const [openDeleteSnackBar, setOpenDeleteSnackBar] = useState(false);\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const [currentTeamName, setCurrentTeamName] = useState(\"\");\r\n  const [teams, setTeams] = useState([]);\r\n  const [joinedTeams, setJoinedTeams] = useState([]);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [openAddTodo, setOpenAddTodo] = useState(false);\r\n  const [selectedStartDate, handleStartDateChange] = useState(new Date());\r\n  const [selectedEndDate, handleEndDateChange] = useState(new Date());\r\n  const [priority, setPriority] = useState(0);\r\n  const [inputTodo, setInputTodo] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const history = useHistory();\r\n  const { currentUser, logOut } = useAuth();\r\n\r\n  const handleSignOut = async () => {\r\n    await logOut();\r\n    history.push(\"/signUp\");\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickMakeTeam = () => {\r\n    setMake(true);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleClickJoinTeam = () => {\r\n    setMake(false);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleCloseMaker = () => {\r\n    setOpenMaker(false);\r\n  };\r\n\r\n  const handleInputChange = (value) => {\r\n    setInputTodo(value);\r\n  };\r\n\r\n  const handleCloseAddTodo = () => {\r\n    setOpenAddTodo(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (inputTodo !== \"\") {\r\n      db.collection(\"teams\")\r\n        .doc(UrlTeamName)\r\n        .collection(\"teamTodos\")\r\n        .add({\r\n          todoText: inputTodo,\r\n          todoEndTime: selectedEndDate.toISOString(),\r\n          todoStartTime: selectedStartDate.toISOString(),\r\n          timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          admin: currentUser.uid,\r\n          checked: false,\r\n          assignedTo: [],\r\n          todoImage: \"\",\r\n          comment: \"\",\r\n          checkedBy: \"\",\r\n          assignedBy: userName,\r\n          priority: priority < 33 ? 1 : priority > 66 ? 3 : 2,\r\n        });\r\n      setInputTodo(\"\");\r\n      setPriority(0);\r\n      setLoader(false);\r\n      handleCloseAddTodo();\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"userTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _teams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n          admin: doc.data().admin,\r\n        }));\r\n        console.log(_teams);\r\n        setTeams(_teams);\r\n      });\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _joinedTeams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n        }));\r\n        console.log(_joinedTeams);\r\n        setJoinedTeams(_joinedTeams);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  const PrettoSlider = createMuiTheme({\r\n    overrides: {\r\n      MuiSlider: {\r\n        root: {\r\n          color:\r\n            priority < 33\r\n              ? \"rgb(1, 112, 75)\"\r\n              : priority > 66\r\n              ? \"rgba(185, 5, 5)\"\r\n              : \"rgba(185, 86, 5)\",\r\n          height: 8,\r\n          transition: \"all 0.5s ease-in-out\",\r\n          transform: \"scale(0.6)\",\r\n        },\r\n\r\n        thumb: {\r\n          height: 24,\r\n          width: 24,\r\n          backgroundColor: \"#fff\",\r\n          border: \"2px solid currentColor\",\r\n          marginTop: -8,\r\n          marginLeft: -12,\r\n          \"&:focus, &:hover, &$active\": {\r\n            boxShadow: \"inherit\",\r\n          },\r\n        },\r\n        active: {},\r\n        valueLabel: {\r\n          left: \"calc(-50% + 4px)\",\r\n        },\r\n        track: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n        rail: {\r\n          height: 8,\r\n          borderRadius: 4,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  function labelText(value) {\r\n    return priority < 33 ? \"Low\" : priority > 66 ? \"Top\" : \"Med\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\", width: \"98%\" }}>\r\n        <Button className=\"addItemsTeams\" onClick={handleClickOpen}>\r\n          <p>{UrlTeamName === undefined ? \"Select Team\" : UrlTeamName}</p>\r\n        </Button>\r\n        {!discussion && UrlTeamName !== undefined && (\r\n          <Button\r\n            className=\"addItemsTeams\"\r\n            onClick={() => setOpenAddTodo(true)}\r\n          >\r\n            Add task\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n            {/* <Button\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={() => history.push(\"/help\")}\r\n            >\r\n              Help\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={() => handleSignOut()}>\r\n              Log out\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <TeamTodoLeftContainer>\r\n          <TeamTodoLeftLeftBox>\r\n            <Button\r\n              className=\"addButton1\"\r\n              onClick={() => handleClickMakeTeam()}\r\n            >\r\n              Make a team\r\n            </Button>\r\n            {/* <h3 style={{ overflow: \"hidden\" }}>My Teams</h3> */}\r\n            <MyTeamContainer>\r\n              {teams.map((team) => (\r\n                <TeamCard\r\n                  sidebarClose={handleClose}\r\n                  key={team.id}\r\n                  id={team.id}\r\n                  teamName={team.teamName}\r\n                  UrlTeamName={UrlTeamName}\r\n                  deleteBtn={true}\r\n                  setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n                  setCurrentTeamName={setCurrentTeamName}\r\n                ></TeamCard>\r\n              ))}\r\n            </MyTeamContainer>\r\n          </TeamTodoLeftLeftBox>\r\n          <TeamTodoLeftRightBox>\r\n            <Button\r\n              className=\"addButton1\"\r\n              onClick={() => handleClickJoinTeam()}\r\n            >\r\n              Join a team\r\n            </Button>\r\n            {/* <h3 style={{ overflow: \"hidden\" }}>Joined Teams</h3> */}\r\n            <MyTeamContainer>\r\n              {joinedTeams.map((team) => (\r\n                <TeamCard\r\n                  sidebarClose={handleClose}\r\n                  key={team.id}\r\n                  id={team.id}\r\n                  teamName={team.teamName}\r\n                  UrlTeamName={UrlTeamName}\r\n                  deleteBtn={true}\r\n                  setOpenDeleteSnackBar={setOpenDeleteSnackBar}\r\n                  setCurrentTeamName={setCurrentTeamName}\r\n                ></TeamCard>\r\n              ))}\r\n            </MyTeamContainer>\r\n          </TeamTodoLeftRightBox>\r\n        </TeamTodoLeftContainer>\r\n        {openMaker && (\r\n          <AddingTeamModal\r\n            open={openMaker}\r\n            handleClose={handleCloseMaker}\r\n            make={make}\r\n            setCurrentTeamName={setCurrentTeamName}\r\n            openSnackbar={make ? setOpenMakeSnackBar : setOpenJoinSnackBar}\r\n          />\r\n        )}\r\n        {openMakeSnackBar && (\r\n          <SnackBar\r\n            open={openMakeSnackBar}\r\n            handleClose={() => setOpenMakeSnackBar(false)}\r\n            text={`Team ${currentTeamName} Created`}\r\n          />\r\n        )}\r\n        {openJoinSnackBar && (\r\n          <SnackBar\r\n            open={openJoinSnackBar}\r\n            handleClose={() => setOpenJoinSnackBar(false)}\r\n            text={`Welcome to team ${currentTeamName}`}\r\n          />\r\n        )}\r\n        {openDeleteSnackBar && (\r\n          <SnackBar\r\n            open={openDeleteSnackBar}\r\n            handleClose={() => openDeleteSnackBar(false)}\r\n            text={`Team ${currentTeamName} deleted`}\r\n          />\r\n        )}\r\n        {openSnack && (\r\n          <SnackBar\r\n            open={openSnack}\r\n            handleClose={() => setOpenSnack(false)}\r\n            text={\"Uploading...\"}\r\n            material={true}\r\n          />\r\n        )}\r\n      </Dialog>\r\n      <Dialog\r\n        fullScreen\r\n        open={openAddTodo}\r\n        onClose={handleCloseAddTodo}\r\n        TransitionComponent={TransitionTodo}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleCloseAddTodo}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Slogger\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <TodoLeftContainer>\r\n          <TodoLeftUpBox>\r\n            <div className=\"inputField\">\r\n              <CreateIcon className=\"todoIcon\" />\r\n              <input\r\n                value={inputTodo}\r\n                className=\"todoInputPersonal\"\r\n                type=\"text\"\r\n                placeholder=\"Write here...\"\r\n                onChange={(e) => handleInputChange(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"dataContainerSide\">\r\n                <h3 className=\"timeHeading\">Start date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBoxSide\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        //format=\"DD/MM/YYYY\"\r\n                        value={selectedStartDate}\r\n                        onChange={handleStartDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n              <div className=\"dataContainerSide\">\r\n                <h3 className=\"timeHeading\">End date</h3>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <div className=\"dateBoxSide\">\r\n                    <ThemeProvider theme={defaultMaterialTheme}>\r\n                      <DatePicker\r\n                        variant=\"dialog\"\r\n                        value={selectedEndDate}\r\n                        //  format=\"DD/MM/YYYY\"\r\n                        onChange={handleEndDateChange}\r\n                        style={{\r\n                          width: \"100%\",\r\n                          textAlign: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        InputProps={{\r\n                          endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                          disableUnderline: true,\r\n                        }}\r\n                      />\r\n                    </ThemeProvider>\r\n                  </div>\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              disabled={loader}\r\n              endIcon={<AddIcon />}\r\n              className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n              onClick={() => handleSubmit()}\r\n            >\r\n              ADD\r\n            </Button>\r\n            <p\r\n              style={{\r\n                color: \"rgb(0, 90, 60)\",\r\n                fontSize: \"0.6rem\",\r\n                marginTop: \"0.5rem\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Set priority\r\n            </p>\r\n            <ThemeProvider theme={PrettoSlider}>\r\n              <Slider\r\n                getAriaValueText={labelText}\r\n                defaultValue={priority}\r\n                value={priority}\r\n                valueLabelFormat={labelText}\r\n                valueLabelDisplay=\"auto\"\r\n                onChange={(e, data) => {\r\n                  setPriority(data);\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n          </TodoLeftUpBox>\r\n        </TodoLeftContainer>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TeamTodoLeftContainer = styled.div`\r\n  flex: 1;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst TeamTodoLeftLeftBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    margin-left: 0;\r\n    overflow: hidden;\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n  }\r\n`;\r\nconst MyTeamContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: scroll !important;\r\n`;\r\n\r\nconst TeamTodoLeftRightBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton1 {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    margin-left: 0;\r\n    overflow: hidden;\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n  }\r\n`;\r\nconst TodoLeftContainer = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  width: 94%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst TodoLeftUpBox = styled.div`\r\n  flex: 1 !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (max-height: 400px) {\r\n    flex: 1 !important;\r\n    border: none;\r\n  }\r\n\r\n  .inputField {\r\n    width: 90%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    padding-left: 0.5rem;\r\n    margin: 0.5rem;\r\n    margin-bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 1rem;\r\n    flex: 0.9;\r\n    padding-left: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n    @media (max-height: 700px) {\r\n      font-size: 0.5rem;\r\n    }\r\n  }\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n  .AlarmIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n  }\r\n  .dateBox {\r\n    overflow: hidden;\r\n    width: 88%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 1rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  .AddButton {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n    overflow: hidden;\r\n  }\r\n  .AddButton:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  .AddButtonDisabled {\r\n    opacity: 0.7;\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n  }\r\n`;\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js",["143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Discussion.js",["164","165","166","167","168","169","170","171","172"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\sidebar\\SIdebarTimeline.js",["173","174","175"],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./sidebar.css\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { createMuiTheme, DialogActions } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport styled from \"styled-components\";\r\nimport TimelineEdit from \"../../board/TimelineEdit\";\r\nimport { db } from \"../../../firebase\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"right\" ref={ref} {...props} />;\r\n});\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(2, 88, 60)\",\r\n    },\r\n  },\r\n  width: \"100%\",\r\n\r\n  overrides: {\r\n    MuiInputBase: {\r\n      root: {\r\n        overflow: \"hidden\",\r\n      },\r\n      input: {\r\n        color: \"rgb(0, 90, 60)\",\r\n        fontSize: \"1.2rem\",\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      paperWidthSm: {\r\n        width: \"300px !important\",\r\n      },\r\n    },\r\n    MuiPickersDay: {\r\n      daySelected: {\r\n        backgroundColor: \"rgb(2, 88, 60)\",\r\n        [\":hover\"]: {\r\n          backgroundColor: \"rgb(2, 88, 60)\",\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      textPrimary: {\r\n        color: \"rgb(2, 88, 60)\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default function SidebarTimeline({ urlTeamName }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [timelineText, setTimelineText] = useState(\"\");\r\n  const [selectedStartDate, handleStartDateChange] = useState(new Date());\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [currId, setCurrId] = useState(\"\");\r\n  const [currCardDetailedText, setCurrCardDetailedText] = useState(\"\");\r\n  const [currTimeStamp, setCurrTimeStamp] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  const [items2, setItems2] = useState([]);\r\n  const [sort, setSort] = useState(true);\r\n  const [transitionIn, setTransitionIn] = useState(true);\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const handleSubmit = () => {\r\n    if (timelineText !== \"\") {\r\n      const date = selectedStartDate.toISOString();\r\n      let m = new Date(date).getMonth();\r\n      let x = new Date(date).getDate();\r\n      if (x < 10) {\r\n        x = \"0\" + x;\r\n      }\r\n      const year = new Date(date).getFullYear();\r\n\r\n      db.collection(\"teams\")\r\n        .doc(urlTeamName)\r\n        .collection(\"timeline\")\r\n        .add({\r\n          cardDetailedText: timelineText,\r\n          title: monthNames[m] + \" \" + x + \",\" + \" \" + year,\r\n          timeStamp: selectedStartDate.toISOString(),\r\n        });\r\n      setTransitionIn(true);\r\n      setTimelineText(\"\");\r\n      handleStartDateChange(new Date());\r\n    }\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sort) {\r\n      db.collection(\"teams\")\r\n        .doc(urlTeamName)\r\n        .collection(\"timeline\")\r\n        .orderBy(\"timeStamp\", \"asc\")\r\n        .onSnapshot((snapshot) => {\r\n          const list = snapshot.docs.map((doc) => ({\r\n            cardDetailedText: doc.data().cardDetailedText,\r\n            title: doc.data().title,\r\n            timeStamp: doc.data().timeStamp,\r\n            id: doc.id,\r\n          }));\r\n          setItems(list);\r\n        });\r\n    } else {\r\n      db.collection(\"teams\")\r\n        .doc(urlTeamName)\r\n        .collection(\"timeline\")\r\n        .orderBy(\"timeStamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          const list = snapshot.docs.map((doc) => ({\r\n            cardDetailedText: doc.data().cardDetailedText,\r\n            title: doc.data().title,\r\n            id: doc.id,\r\n            timeStamp: doc.data().timeStamp,\r\n          }));\r\n          setItems2(list);\r\n        });\r\n    }\r\n  }, [sort]);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"addItemsTimeline\" onClick={handleClickOpen}>\r\n        Add Card\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <TimelineLeft>\r\n          <textarea\r\n            placeholder=\"Write...\"\r\n            className=\"timelineTextarea\"\r\n            value={timelineText}\r\n            onChange={(e) => setTimelineText(e.target.value)}\r\n          />\r\n          <div className=\"dataContainerTimeline\">\r\n            <h3 className=\"timeHeading\">Date</h3>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n              <div className=\"dateBox\">\r\n                <ThemeProvider theme={defaultMaterialTheme}>\r\n                  <DatePicker\r\n                    variant=\"dialog\"\r\n                    format=\"MMMM DD, YYYY\"\r\n                    value={selectedStartDate}\r\n                    orientation=\"portrait\"\r\n                    onChange={handleStartDateChange}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      textAlign: \"center\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <DateRangeIcon\r\n                          className=\"alarmModalIcon\"\r\n                          style={{ marginBottom: \"0.5rem\" }}\r\n                        />\r\n                      ),\r\n                      disableUnderline: true,\r\n                    }}\r\n                  />\r\n                </ThemeProvider>\r\n              </div>\r\n            </MuiPickersUtilsProvider>\r\n          </div>\r\n          <div style={{ display: \"flex\", width: \"96%\", marginTop: \"0.3rem\" }}>\r\n            <Button\r\n              style={{ marginRight: \"0.3rem\", flex: 0.7 }}\r\n              className=\"addButtonTimeline\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit}\r\n            >\r\n              add\r\n            </Button>\r\n            <Button\r\n              style={{ flex: 0.3 }}\r\n              className=\"addButtonTimeline\"\r\n              color=\"primary\"\r\n              onClick={() => setSort(!sort)}\r\n            >\r\n              {sort ? \"Reverse\" : \"undo\"}\r\n            </Button>\r\n          </div>\r\n          <div className=\"editTimelineContainer\">\r\n            {sort\r\n              ? items?.map((item) => (\r\n                  <Slide\r\n                    in={transitionIn}\r\n                    timeout={400}\r\n                    key={item.id}\r\n                    direction=\"down\"\r\n                  >\r\n                    <div key={item.id} className=\"timelineContentBox\">\r\n                      <p className=\"timelineText\">{item.title}</p>\r\n                      <EditIcon\r\n                        className=\"timelineEditIcons\"\r\n                        onClick={() => {\r\n                          setCurrId(item.id);\r\n                          setCurrTimeStamp(item.timeStamp);\r\n                          setCurrCardDetailedText(item.cardDetailedText);\r\n                          setOpenEdit(true);\r\n                        }}\r\n                      />\r\n                      <DeleteIcon\r\n                        className=\"timelineEditIcons\"\r\n                        onClick={() => {\r\n                          setCurrId(item.id);\r\n                          setCurrTimeStamp(item.timeStamp);\r\n                          setCurrCardDetailedText(item.cardDetailedText);\r\n                          setOpenDelete(true);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Slide>\r\n                ))\r\n              : items2?.map((item) => (\r\n                  <Slide\r\n                    in={transitionIn}\r\n                    timeout={400}\r\n                    key={item.id}\r\n                    direction=\"down\"\r\n                  >\r\n                    <div className=\"timelineContentBox\">\r\n                      <p className=\"timelineText\">{item.title}</p>\r\n                      <EditIcon\r\n                        className=\"timelineEditIcons\"\r\n                        onClick={() => {\r\n                          setCurrId(item.id);\r\n                          setCurrTimeStamp(item.timeStamp);\r\n                          setCurrCardDetailedText(item.cardDetailedText);\r\n                          setOpenEdit(true);\r\n                        }}\r\n                      />\r\n                      <DeleteIcon\r\n                        className=\"timelineEditIcons\"\r\n                        onClick={() => {\r\n                          setCurrId(item.id);\r\n                          setCurrTimeStamp(item.timeStamp);\r\n                          setCurrCardDetailedText(item.cardDetailedText);\r\n                          setOpenDelete(true);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Slide>\r\n                ))}\r\n          </div>\r\n        </TimelineLeft>\r\n        <DialogActions>\r\n          <Button\r\n            className=\"addButtonModal\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n        {openEdit && (\r\n          <TimelineEdit\r\n            open={openEdit}\r\n            handleClose={() => setOpenEdit(false)}\r\n            del={false}\r\n            urlTeamName={urlTeamName}\r\n            id={currId}\r\n            date={currTimeStamp}\r\n            content={currCardDetailedText}\r\n            setTransitionIn={setTransitionIn}\r\n          />\r\n        )}\r\n        {openDelete && (\r\n          <TimelineEdit\r\n            open={openDelete}\r\n            handleClose={() => setOpenDelete(false)}\r\n            del={true}\r\n            urlTeamName={urlTeamName}\r\n            id={currId}\r\n            date={currTimeStamp}\r\n            content={currCardDetailedText}\r\n            setTransitionIn={setTransitionIn}\r\n          />\r\n        )}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TimelineLeft = styled.div`\r\n  width: 95.5%;\r\n  height: 100%;\r\n  flex: 1;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  padding: 1rem;\r\n  @media (max-height: 400px) {\r\n  }\r\n`;\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\Board.js",["176","177"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js",["178","179","180","181","182","183","184","185","186","187","188","189","190","191"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\notification\\Notification.js",["192","193","194","195"],"import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { Badge, IconButton, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport \"./notification.css\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport moment from \"moment\";\r\nimport FeedbackModal from \"./FeedbackModal\";\r\nimport { useHistory } from \"react-router\";\r\nimport MemberProfile from \"../profile/MemberProfile\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 350,\r\n    \"@media (max-width:600px)\": {\r\n      width: \"100vw\",\r\n    },\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  drawerBackground: {\r\n    background: \"rgba(8, 121, 83, 0.542)\",\r\n    backdropFilter: \"blur(3px) !important\",\r\n  },\r\n});\r\n\r\nexport default function Notification({ setTabValue }) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const theme = useTheme();\r\n  const isSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const { currentUser } = useAuth();\r\n  const [notiList, setNotiList] = useState([]);\r\n  const [openFeedback, setOpenFeedback] = useState(false);\r\n  const [openMemberModal, setOpenMemberModal] = useState(false);\r\n  const [currMemberId, setCurrMemberId] = useState(\"\");\r\n  const [currCompletedById, setCurrCompletedById] = useState(\"\");\r\n  const [currCompletedByName, setCurrCompletedByName] = useState(\"\");\r\n  const [currTodo, setCurrTodo] = useState(\"\");\r\n  const [currTeam, setCurrTeam] = useState(\"\");\r\n  const [readList, setReadList] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const getNotificationList = () => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"notifications\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .limit(30)\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoId: doc.data().todoId,\r\n          assignedByName: doc.data().assignedByName,\r\n          notificationType: doc.data().notificationType,\r\n          assignedById: doc.data().assignedById,\r\n          teamName: doc.data().teamName,\r\n          date: doc.data().notiDate,\r\n          endDate: doc.data().endDate,\r\n          todo: doc.data().todo,\r\n          completedByName: doc.data().completedByName,\r\n          completedById: doc.data().completedById,\r\n          memberJoinName: doc.data().memberJoinName,\r\n          memberJoinId: doc.data().memberJoinId,\r\n          read: doc.data().read,\r\n        }));\r\n        const read = list.filter((l) => l.read === true);\r\n        setReadList(read);\r\n        setNotiList(list);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNotificationList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      getNotificationList();\r\n    }, 60000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const handlePushTeamName = (teamName, id) => {\r\n    history.push(`/home/${teamName}`);\r\n    setTabValue(1);\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"notifications\")\r\n      .doc(id)\r\n      .set(\r\n        {\r\n          read: true,\r\n        },\r\n        { merge: true }\r\n      );\r\n    toggleDrawer(anchor, false);\r\n  };\r\n\r\n  const handleMemberOpen = (MemberId, id) => {\r\n    setCurrMemberId(MemberId);\r\n    setOpenMemberModal(true);\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"notifications\")\r\n      .doc(id)\r\n      .set(\r\n        {\r\n          read: true,\r\n        },\r\n        { merge: true }\r\n      );\r\n    toggleDrawer(anchor, false);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      // onClick={toggleDrawer(anchor, false)}\r\n      // onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List className=\"notificationListContainer\">\r\n        {!isSmall && (\r\n          <p\r\n            style={{\r\n              padding: \" 0 1rem\",\r\n              fontSize: \"X-small\",\r\n              color: \"rgb(1, 63, 42)\",\r\n            }}\r\n          >\r\n            {\"Swipe to close\"}\r\n          </p>\r\n        )}\r\n        {notiList.length === 0 && (\r\n          <div\r\n            style={{\r\n              height: \"70vh\",\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              color: \"rgb(1, 63, 42)\",\r\n            }}\r\n          >\r\n            <p>No Notifications</p>\r\n          </div>\r\n        )}\r\n        {notiList?.map((noti) => (\r\n          <>\r\n            {noti.notificationType === \"taskAssigned\" && (\r\n              <div\r\n                key={noti.id}\r\n                className=\"notiContainer\"\r\n                onClick={() => handlePushTeamName(noti.teamName, noti.id)}\r\n              >\r\n                <div className=\"notiHead\">\r\n                  <p className={noti.read ? \"notiRead\" : \"notiBadge\"}>\r\n                    Task assigned\r\n                  </p>\r\n                  <p className=\"notiDate\">\r\n                    {noti.date?.substring(8, 10)}\r\n                    {\"/\"}\r\n                    {noti.date?.substring(5, 7)}\r\n                    {\"/\"}\r\n                    {noti.date?.substring(0, 4)}\r\n                  </p>\r\n                </div>\r\n                <p className=\"task\">{noti.todo}</p>\r\n                <div className=\"footerNoti\">\r\n                  <div className=\"footerName\">\r\n                    <p>By: {noti.assignedByName}</p>\r\n                    <p>{noti.teamName}</p>\r\n                  </div>\r\n                  <div className=\"endDateBox\">\r\n                    <p className=\"taskBadge\">End time</p>\r\n                    <p className=\"endDate\">\r\n                      {noti.endDate?.substring(8, 10)}\r\n                      {\"/\"}\r\n                      {noti.endDate?.substring(5, 7)}\r\n                      {\"/\"}\r\n                      {noti.endDate?.substring(0, 4)}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {noti.notificationType === \"taskCompleted\" && (\r\n              <div\r\n                key={noti.id}\r\n                className=\"notiContainer\"\r\n                onClick={() => handlePushTeamName(noti.teamName, noti.id)}\r\n              >\r\n                <div className=\"notiHead\">\r\n                  <p className={noti.read ? \"notiRead\" : \"notiBadgeCompleted\"}>\r\n                    Task completed\r\n                  </p>\r\n                  <p className=\"notiDate\">\r\n                    {noti.date?.substring(8, 10)}\r\n                    {\"/\"}\r\n                    {noti.date?.substring(5, 7)}\r\n                    {\"/\"}\r\n                    {noti.date?.substring(0, 4)}\r\n                  </p>\r\n                </div>\r\n                <p className=\"task\">{noti.todo}</p>\r\n                <div className=\"footerNoti\">\r\n                  <div className=\"footerName\">\r\n                    <p>By: {noti.completedByName}</p>\r\n                    <p>{noti.teamName}</p>\r\n                  </div>\r\n                  <div className=\"endDateBox\">\r\n                    <Button\r\n                      className=\"feedBackBtn\"\r\n                      onClick={() => {\r\n                        setCurrCompletedById(noti.completedById);\r\n                        setCurrCompletedByName(noti.completedByName);\r\n                        setCurrTodo(noti.todo);\r\n                        setCurrTeam(noti.teamName);\r\n                        setOpenFeedback(true);\r\n                      }}\r\n                    >\r\n                      Give feedback\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {noti.notificationType === \"teamJoin\" && (\r\n              <div\r\n                key={noti.id}\r\n                className=\"notiContainer\"\r\n                onClick={() => handleMemberOpen(noti.memberJoinId, noti.id)}\r\n              >\r\n                <div className=\"notiHead\">\r\n                  <p className={noti.read ? \"notiRead\" : \"notiBadgeJoin\"}>\r\n                    Team join\r\n                  </p>\r\n                  <p className=\"notiDate\">\r\n                    {noti.date?.substring(8, 10)}\r\n                    {\"/\"}\r\n                    {noti.date?.substring(5, 7)}\r\n                    {\"/\"}\r\n                    {noti.date?.substring(0, 4)}\r\n                  </p>\r\n                </div>\r\n                <p className=\"task\">\r\n                  {noti.memberJoinName} has joined your team.\r\n                </p>\r\n                <div className=\"footerNoti\">\r\n                  <div className=\"footerName\">\r\n                    <p>{noti.teamName}</p>\r\n                  </div>\r\n                  <div className=\"endDateBox\"></div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        ))}\r\n      </List>\r\n      {openFeedback && (\r\n        <FeedbackModal\r\n          open={openFeedback}\r\n          handleClose={() => setOpenFeedback(false)}\r\n          feedbackToName={currCompletedByName}\r\n          feedbackToId={currCompletedById}\r\n          task={currTodo}\r\n          teamName={currTeam}\r\n        />\r\n      )}\r\n      {openMemberModal && (\r\n        <MemberProfile\r\n          open={openMemberModal}\r\n          handleClose={() => setOpenMemberModal(false)}\r\n          id={currMemberId}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n  const anchor = \"right\";\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment key={anchor}>\r\n        {notiList.length - readList.length >= 0 && (\r\n          <IconButton\r\n            style={{ height: \"2rem\", width: \"2rem\" }}\r\n            onClick={toggleDrawer(anchor, true)}\r\n            className=\"notificationIconBtn\"\r\n          >\r\n            <Badge badgeContent={notiList.length - readList.length} showZero>\r\n              <NotificationsIcon className=\"notificationBell\" />\r\n            </Badge>\r\n          </IconButton>\r\n        )}\r\n\r\n        <SwipeableDrawer\r\n          anchor={anchor}\r\n          open={state[anchor]}\r\n          onClose={toggleDrawer(anchor, false)}\r\n          onOpen={toggleDrawer(anchor, true)}\r\n          classes={{ paperAnchorRight: classes.drawerBackground }}\r\n        >\r\n          {list(anchor)}\r\n        </SwipeableDrawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\TimelineEdit.js",["196","197","198","199","200"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\board\\Timeline.js",["201","202","203"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Delete.js",["204","205","206","207","208","209","210","211"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\index.js",[],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\home\\Home.js",["212","213","214"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\profile\\Endo.js",["215","216"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\Chat.js",["217","218","219","220","221","222"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\imagesModal\\DownloadImageModal.js",["223","224","225","226"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Fade } from \"@material-ui/core\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport { db, storage } from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Fade direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DownloadImageModal({\r\n  open,\r\n  handleClose,\r\n  link,\r\n  senderId,\r\n  imageId,\r\n  urlTeamName,\r\n  id,\r\n  imageList,\r\n  handleCloseImageModal,\r\n  setImageList,\r\n  todoText,\r\n  userName,\r\n  profileImage,\r\n  setTabValue,\r\n}) {\r\n  const { currentUser } = useAuth();\r\n  const [sure, setSure] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [imageChatText, setImageChatText] = useState(\"\");\r\n\r\n  const handleDeleteImage = async () => {\r\n    var desertRef = storage.refFromURL(link);\r\n    desertRef\r\n      .delete()\r\n      .then(function () {\r\n        console.log(\"File deleted successfully\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n    db.collection(\"teams\")\r\n      .doc(urlTeamName)\r\n      .collection(\"teamTodos\")\r\n      .doc(id)\r\n      .collection(\"teamTodoImages\")\r\n      .doc(imageId)\r\n      .delete();\r\n\r\n    let _list = [...imageList];\r\n    setImageList(_list.filter((img) => imageId !== img.id));\r\n    if (imageList.length === 1) {\r\n      handleCloseImageModal();\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const sentToDiscussion = () => {\r\n    if (imageChatText !== \"\") {\r\n      db.collection(\"teams\").doc(urlTeamName).collection(\"discussion\").add({\r\n        discussionText: imageChatText,\r\n        teamTodoText: todoText,\r\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        senderId: currentUser.uid,\r\n        senderProfileImage: profileImage,\r\n        senderName: userName,\r\n        discussionTime: new Date().toISOString(),\r\n        help: true,\r\n        teamTodoImage: link,\r\n      });\r\n      setTabValue(2);\r\n      handleClose();\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogContent>\r\n          {currentUser.uid === senderId && !sure && (\r\n            <Button\r\n              endIcon={\r\n                <DeleteIcon\r\n                  style={{ color: \"#fff\", transform: \"scale(0.7)\" }}\r\n                />\r\n              }\r\n              className=\"uploadView\"\r\n              style={{\r\n                overflow: \"hidden\",\r\n                fontSize: \"0.7rem\",\r\n                height: \"1.5rem\",\r\n                color: \"#fff\",\r\n                backgroundColor: \"#019966\",\r\n                marginTop: \"1rem\",\r\n                marginRight: \"1rem\",\r\n              }}\r\n              onClick={() => setSure(true)}\r\n            >\r\n              Delete Image\r\n            </Button>\r\n          )}\r\n\r\n          {sure && (\r\n            <Button\r\n              className=\"uploadView\"\r\n              style={{\r\n                overflow: \"hidden\",\r\n                fontSize: \"0.7rem\",\r\n                height: \"1.5rem\",\r\n                color: \"#fff\",\r\n                backgroundColor: \"#019966\",\r\n                marginTop: \"1rem\",\r\n              }}\r\n              onClick={() => setSure(false)}\r\n            >\r\n              back\r\n            </Button>\r\n          )}\r\n          {sure && (\r\n            <Button\r\n              className=\"uploadView\"\r\n              style={{\r\n                overflow: \"hidden\",\r\n                fontSize: \"0.7rem\",\r\n                height: \"1.5rem\",\r\n                color: \"#fff\",\r\n                backgroundColor: \"#019966\",\r\n                marginTop: \"1rem\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n              onClick={handleDeleteImage}\r\n            >\r\n              sure ?\r\n            </Button>\r\n          )}\r\n\r\n          {!sure && (\r\n            <a href={link} target=\"_blank\" style={{ textDecoration: \"none\" }}>\r\n              <Button\r\n                endIcon={\r\n                  <OpenInNewIcon\r\n                    style={{ color: \"#fff\", transform: \"scale(0.7)\" }}\r\n                  />\r\n                }\r\n                className=\"uploadView\"\r\n                style={{\r\n                  overflow: \"hidden\",\r\n                  fontSize: \"0.7rem\",\r\n                  height: \"1.5rem\",\r\n                  color: \"#fff\",\r\n                  backgroundColor: \"#019966\",\r\n                  marginTop: \"1rem\",\r\n                }}\r\n              >\r\n                Open in new tab\r\n              </Button>\r\n            </a>\r\n          )}\r\n        </DialogContent>\r\n        <DialogContent style={{ color: \"#019966\" }}>\r\n          Ask in chat\r\n          {error && (\r\n            <p style={{ color: \"rgba(185, 5, 5, 0.7)\", fontSize: \"10px\" }}>\r\n              *Please add some description or title\r\n            </p>\r\n          )}\r\n          <textarea\r\n            defaultValue={imageChatText}\r\n            className=\"helperTextBox\"\r\n            placeholder=\"Add some description...\"\r\n            onChange={(e) => {\r\n              setError(false);\r\n              setImageChatText(e.target.value);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogContent style={{ display: \"flex\" }}>\r\n          <div style={{ flex: 1 }}></div>\r\n          <Button\r\n            className=\"uploadView\"\r\n            style={{\r\n              overflow: \"hidden\",\r\n              fontSize: \"0.7rem\",\r\n              height: \"1.5rem\",\r\n              color: \"#fff\",\r\n              backgroundColor: \"#019966\",\r\n              marginRight: \"0.5rem\",\r\n            }}\r\n            onClick={handleClose}\r\n          >\r\n            close\r\n          </Button>\r\n          <Button\r\n            className=\"uploadView\"\r\n            style={{\r\n              overflow: \"hidden\",\r\n              fontSize: \"0.7rem\",\r\n              height: \"1.5rem\",\r\n              color: \"#fff\",\r\n              backgroundColor: \"#019966\",\r\n              marginRight: \"0.5rem\",\r\n            }}\r\n            onClick={sentToDiscussion}\r\n          >\r\n            Ask\r\n          </Button>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\slogger\\Slogger.js",["227","228","229","230","231","232","233","234","235","236","237","238"],"C:\\Users\\tushar.deepak\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js",["239","240","241"],{"ruleId":"242","severity":1,"message":"243","line":10,"column":8,"nodeType":"244","messageId":"245","endLine":10,"endColumn":19},{"ruleId":"242","severity":1,"message":"246","line":17,"column":8,"nodeType":"244","messageId":"245","endLine":17,"endColumn":16},{"ruleId":"242","severity":1,"message":"247","line":35,"column":9,"nodeType":"244","messageId":"245","endLine":35,"endColumn":16},{"ruleId":"248","severity":1,"message":"249","line":122,"column":6,"nodeType":"250","endLine":122,"endColumn":8,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":128,"column":11,"nodeType":"254","endLine":128,"endColumn":62},{"ruleId":"255","severity":1,"message":"256","line":194,"column":21,"nodeType":"257","endLine":194,"endColumn":44},{"ruleId":"255","severity":1,"message":"256","line":288,"column":21,"nodeType":"257","endLine":288,"endColumn":44},{"ruleId":"255","severity":1,"message":"256","line":318,"column":21,"nodeType":"257","endLine":318,"endColumn":44},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"242","severity":1,"message":"262","line":1,"column":27,"nodeType":"244","messageId":"245","endLine":1,"endColumn":36},{"ruleId":"242","severity":1,"message":"263","line":17,"column":3,"nodeType":"244","messageId":"245","endLine":17,"endColumn":17},{"ruleId":"242","severity":1,"message":"264","line":65,"column":10,"nodeType":"244","messageId":"245","endLine":65,"endColumn":15},{"ruleId":"242","severity":1,"message":"265","line":67,"column":10,"nodeType":"244","messageId":"245","endLine":67,"endColumn":18},{"ruleId":"242","severity":1,"message":"266","line":67,"column":20,"nodeType":"244","messageId":"245","endLine":67,"endColumn":31},{"ruleId":"242","severity":1,"message":"267","line":120,"column":9,"nodeType":"244","messageId":"245","endLine":120,"endColumn":22},{"ruleId":"248","severity":1,"message":"268","line":174,"column":6,"nodeType":"250","endLine":174,"endColumn":8,"suggestions":"269"},{"ruleId":"258","replacedBy":"270"},{"ruleId":"260","replacedBy":"271"},{"ruleId":"242","severity":1,"message":"246","line":11,"column":8,"nodeType":"244","messageId":"245","endLine":11,"endColumn":16},{"ruleId":"242","severity":1,"message":"272","line":12,"column":10,"nodeType":"244","messageId":"245","endLine":12,"endColumn":20},{"ruleId":"242","severity":1,"message":"273","line":25,"column":10,"nodeType":"244","messageId":"245","endLine":25,"endColumn":15},{"ruleId":"274","severity":1,"message":"275","line":55,"column":9,"nodeType":"276","messageId":"277","endLine":57,"endColumn":10,"fix":"278"},{"ruleId":"248","severity":1,"message":"279","line":199,"column":6,"nodeType":"250","endLine":199,"endColumn":23,"suggestions":"280"},{"ruleId":"242","severity":1,"message":"281","line":14,"column":8,"nodeType":"244","messageId":"245","endLine":14,"endColumn":15},{"ruleId":"242","severity":1,"message":"282","line":33,"column":10,"nodeType":"244","messageId":"245","endLine":33,"endColumn":31},{"ruleId":"248","severity":1,"message":"283","line":52,"column":6,"nodeType":"250","endLine":52,"endColumn":8,"suggestions":"284"},{"ruleId":"252","severity":1,"message":"253","line":167,"column":17,"nodeType":"254","endLine":175,"endColumn":19},{"ruleId":"242","severity":1,"message":"285","line":49,"column":10,"nodeType":"244","messageId":"245","endLine":49,"endColumn":21},{"ruleId":"242","severity":1,"message":"286","line":51,"column":10,"nodeType":"244","messageId":"245","endLine":51,"endColumn":22},{"ruleId":"242","severity":1,"message":"287","line":63,"column":10,"nodeType":"244","messageId":"245","endLine":63,"endColumn":15},{"ruleId":"242","severity":1,"message":"288","line":63,"column":17,"nodeType":"244","messageId":"245","endLine":63,"endColumn":25},{"ruleId":"242","severity":1,"message":"289","line":64,"column":10,"nodeType":"244","messageId":"245","endLine":64,"endColumn":25},{"ruleId":"242","severity":1,"message":"290","line":65,"column":10,"nodeType":"244","messageId":"245","endLine":65,"endColumn":14},{"ruleId":"242","severity":1,"message":"291","line":65,"column":16,"nodeType":"244","messageId":"245","endLine":65,"endColumn":32},{"ruleId":"242","severity":1,"message":"267","line":68,"column":9,"nodeType":"244","messageId":"245","endLine":68,"endColumn":22},{"ruleId":"242","severity":1,"message":"292","line":152,"column":13,"nodeType":"244","messageId":"245","endLine":152,"endColumn":23},{"ruleId":"242","severity":1,"message":"293","line":177,"column":9,"nodeType":"244","messageId":"245","endLine":177,"endColumn":22},{"ruleId":"248","severity":1,"message":"294","line":224,"column":6,"nodeType":"250","endLine":224,"endColumn":8,"suggestions":"295"},{"ruleId":"248","severity":1,"message":"294","line":241,"column":6,"nodeType":"250","endLine":241,"endColumn":8,"suggestions":"296"},{"ruleId":"242","severity":1,"message":"262","line":1,"column":27,"nodeType":"244","messageId":"245","endLine":1,"endColumn":36},{"ruleId":"242","severity":1,"message":"297","line":15,"column":10,"nodeType":"244","messageId":"245","endLine":15,"endColumn":23},{"ruleId":"242","severity":1,"message":"267","line":79,"column":9,"nodeType":"244","messageId":"245","endLine":79,"endColumn":22},{"ruleId":"248","severity":1,"message":"268","line":166,"column":6,"nodeType":"250","endLine":166,"endColumn":19,"suggestions":"298"},{"ruleId":"242","severity":1,"message":"299","line":6,"column":14,"nodeType":"244","messageId":"245","endLine":6,"endColumn":21},{"ruleId":"242","severity":1,"message":"263","line":13,"column":3,"nodeType":"244","messageId":"245","endLine":13,"endColumn":17},{"ruleId":"242","severity":1,"message":"273","line":22,"column":8,"nodeType":"244","messageId":"245","endLine":22,"endColumn":13},{"ruleId":"242","severity":1,"message":"300","line":64,"column":10,"nodeType":"244","messageId":"245","endLine":64,"endColumn":19},{"ruleId":"242","severity":1,"message":"264","line":149,"column":10,"nodeType":"244","messageId":"245","endLine":149,"endColumn":15},{"ruleId":"242","severity":1,"message":"301","line":160,"column":10,"nodeType":"244","messageId":"245","endLine":160,"endColumn":15},{"ruleId":"242","severity":1,"message":"302","line":160,"column":17,"nodeType":"244","messageId":"245","endLine":160,"endColumn":25},{"ruleId":"248","severity":1,"message":"268","line":318,"column":6,"nodeType":"250","endLine":318,"endColumn":19,"suggestions":"303"},{"ruleId":"304","severity":1,"message":"305","line":328,"column":34,"nodeType":"306","messageId":"307","endLine":328,"endColumn":36},{"ruleId":"248","severity":1,"message":"268","line":338,"column":6,"nodeType":"250","endLine":338,"endColumn":19,"suggestions":"308"},{"ruleId":"304","severity":1,"message":"305","line":350,"column":28,"nodeType":"306","messageId":"307","endLine":350,"endColumn":30},{"ruleId":"248","severity":1,"message":"309","line":359,"column":6,"nodeType":"250","endLine":359,"endColumn":8,"suggestions":"310"},{"ruleId":"248","severity":1,"message":"279","line":371,"column":6,"nodeType":"250","endLine":371,"endColumn":23,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":506,"column":19,"nodeType":"257","endLine":506,"endColumn":34},{"ruleId":"312","severity":1,"message":"313","line":584,"column":23,"nodeType":"257","endLine":584,"endColumn":38},{"ruleId":"252","severity":1,"message":"253","line":745,"column":17,"nodeType":"254","endLine":748,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":776,"column":19,"nodeType":"254","endLine":783,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":824,"column":19,"nodeType":"254","endLine":831,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":865,"column":19,"nodeType":"254","endLine":872,"endColumn":21},{"ruleId":"304","severity":1,"message":"314","line":910,"column":34,"nodeType":"306","messageId":"315","endLine":910,"endColumn":36},{"ruleId":"304","severity":1,"message":"314","line":930,"column":34,"nodeType":"306","messageId":"315","endLine":930,"endColumn":36},{"ruleId":"242","severity":1,"message":"316","line":4,"column":17,"nodeType":"244","messageId":"245","endLine":4,"endColumn":23},{"ruleId":"242","severity":1,"message":"300","line":41,"column":10,"nodeType":"244","messageId":"245","endLine":41,"endColumn":19},{"ruleId":"242","severity":1,"message":"317","line":88,"column":7,"nodeType":"244","messageId":"245","endLine":88,"endColumn":27},{"ruleId":"248","severity":1,"message":"268","line":159,"column":6,"nodeType":"250","endLine":159,"endColumn":19,"suggestions":"318"},{"ruleId":"304","severity":1,"message":"305","line":190,"column":34,"nodeType":"306","messageId":"307","endLine":190,"endColumn":36},{"ruleId":"248","severity":1,"message":"319","line":210,"column":6,"nodeType":"250","endLine":210,"endColumn":19,"suggestions":"320"},{"ruleId":"252","severity":1,"message":"253","line":265,"column":15,"nodeType":"254","endLine":268,"endColumn":17},{"ruleId":"242","severity":1,"message":"321","line":569,"column":7,"nodeType":"244","messageId":"245","endLine":569,"endColumn":17},{"ruleId":"242","severity":1,"message":"322","line":576,"column":7,"nodeType":"244","messageId":"245","endLine":576,"endColumn":16},{"ruleId":"274","severity":1,"message":"275","line":48,"column":9,"nodeType":"276","messageId":"277","endLine":50,"endColumn":10,"fix":"323"},{"ruleId":"324","severity":1,"message":"325","line":103,"column":48,"nodeType":"326","messageId":"327","endLine":103,"endColumn":49},{"ruleId":"248","severity":1,"message":"328","line":150,"column":6,"nodeType":"250","endLine":150,"endColumn":12,"suggestions":"329"},{"ruleId":"248","severity":1,"message":"294","line":108,"column":6,"nodeType":"250","endLine":108,"endColumn":19,"suggestions":"330"},{"ruleId":"252","severity":1,"message":"253","line":125,"column":7,"nodeType":"254","endLine":125,"endColumn":75},{"ruleId":"242","severity":1,"message":"331","line":14,"column":3,"nodeType":"244","messageId":"245","endLine":14,"endColumn":13},{"ruleId":"242","severity":1,"message":"264","line":133,"column":10,"nodeType":"244","messageId":"245","endLine":133,"endColumn":15},{"ruleId":"248","severity":1,"message":"268","line":285,"column":6,"nodeType":"250","endLine":285,"endColumn":8,"suggestions":"332"},{"ruleId":"248","severity":1,"message":"333","line":301,"column":6,"nodeType":"250","endLine":301,"endColumn":23,"suggestions":"334"},{"ruleId":"242","severity":1,"message":"335","line":303,"column":9,"nodeType":"244","messageId":"245","endLine":303,"endColumn":22},{"ruleId":"304","severity":1,"message":"314","line":611,"column":30,"nodeType":"306","messageId":"315","endLine":611,"endColumn":32},{"ruleId":"304","severity":1,"message":"314","line":634,"column":30,"nodeType":"306","messageId":"315","endLine":634,"endColumn":32},{"ruleId":"252","severity":1,"message":"253","line":673,"column":15,"nodeType":"254","endLine":673,"endColumn":55},{"ruleId":"304","severity":1,"message":"314","line":702,"column":29,"nodeType":"306","messageId":"315","endLine":702,"endColumn":31},{"ruleId":"304","severity":1,"message":"314","line":707,"column":28,"nodeType":"306","messageId":"315","endLine":707,"endColumn":30},{"ruleId":"304","severity":1,"message":"314","line":729,"column":28,"nodeType":"306","messageId":"315","endLine":729,"endColumn":30},{"ruleId":"304","severity":1,"message":"314","line":773,"column":29,"nodeType":"306","messageId":"315","endLine":773,"endColumn":31},{"ruleId":"304","severity":1,"message":"314","line":778,"column":28,"nodeType":"306","messageId":"315","endLine":778,"endColumn":30},{"ruleId":"304","severity":1,"message":"314","line":800,"column":28,"nodeType":"306","messageId":"315","endLine":800,"endColumn":30},{"ruleId":"242","severity":1,"message":"336","line":10,"column":8,"nodeType":"244","messageId":"245","endLine":10,"endColumn":17},{"ruleId":"242","severity":1,"message":"337","line":13,"column":8,"nodeType":"244","messageId":"245","endLine":13,"endColumn":14},{"ruleId":"248","severity":1,"message":"338","line":100,"column":6,"nodeType":"250","endLine":100,"endColumn":8,"suggestions":"339"},{"ruleId":"248","severity":1,"message":"338","line":107,"column":6,"nodeType":"250","endLine":107,"endColumn":8,"suggestions":"340"},{"ruleId":"242","severity":1,"message":"262","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"246","line":11,"column":8,"nodeType":"244","messageId":"245","endLine":11,"endColumn":16},{"ruleId":"274","severity":1,"message":"275","line":51,"column":9,"nodeType":"276","messageId":"277","endLine":53,"endColumn":10,"fix":"341"},{"ruleId":"242","severity":1,"message":"342","line":85,"column":11,"nodeType":"244","messageId":"245","endLine":85,"endColumn":22},{"ruleId":"324","severity":1,"message":"325","line":119,"column":50,"nodeType":"326","messageId":"327","endLine":119,"endColumn":51},{"ruleId":"274","severity":1,"message":"275","line":49,"column":9,"nodeType":"276","messageId":"277","endLine":51,"endColumn":10,"fix":"343"},{"ruleId":"324","severity":1,"message":"325","line":106,"column":48,"nodeType":"326","messageId":"327","endLine":106,"endColumn":49},{"ruleId":"248","severity":1,"message":"328","line":145,"column":6,"nodeType":"250","endLine":145,"endColumn":12,"suggestions":"344"},{"ruleId":"242","severity":1,"message":"345","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"246","line":11,"column":8,"nodeType":"244","messageId":"245","endLine":11,"endColumn":16},{"ruleId":"304","severity":1,"message":"305","line":53,"column":34,"nodeType":"306","messageId":"307","endLine":53,"endColumn":36},{"ruleId":"248","severity":1,"message":"346","line":66,"column":6,"nodeType":"250","endLine":66,"endColumn":8,"suggestions":"347"},{"ruleId":"242","severity":1,"message":"348","line":143,"column":10,"nodeType":"244","messageId":"245","endLine":143,"endColumn":28},{"ruleId":"242","severity":1,"message":"349","line":167,"column":9,"nodeType":"244","messageId":"245","endLine":167,"endColumn":23},{"ruleId":"304","severity":1,"message":"350","line":173,"column":20,"nodeType":"306","messageId":"307","endLine":173,"endColumn":22},{"ruleId":"255","severity":1,"message":"256","line":280,"column":11,"nodeType":"257","endLine":282,"endColumn":12},{"ruleId":"304","severity":1,"message":"305","line":129,"column":28,"nodeType":"306","messageId":"307","endLine":129,"endColumn":30},{"ruleId":"248","severity":1,"message":"268","line":151,"column":6,"nodeType":"250","endLine":151,"endColumn":8,"suggestions":"351"},{"ruleId":"242","severity":1,"message":"352","line":152,"column":7,"nodeType":"244","messageId":"245","endLine":152,"endColumn":8},{"ruleId":"248","severity":1,"message":"283","line":28,"column":6,"nodeType":"250","endLine":28,"endColumn":8,"suggestions":"353"},{"ruleId":"252","severity":1,"message":"253","line":51,"column":11,"nodeType":"254","endLine":51,"endColumn":76},{"ruleId":"354","severity":1,"message":"355","line":37,"column":7,"nodeType":"244","messageId":"356","endLine":37,"endColumn":11},{"ruleId":"248","severity":1,"message":"357","line":66,"column":6,"nodeType":"250","endLine":66,"endColumn":8,"suggestions":"358"},{"ruleId":"312","severity":1,"message":"313","line":185,"column":17,"nodeType":"257","endLine":185,"endColumn":32},{"ruleId":"252","severity":1,"message":"253","line":188,"column":17,"nodeType":"254","endLine":199,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":209,"column":13,"nodeType":"254","endLine":217,"endColumn":15},{"ruleId":"242","severity":1,"message":"359","line":274,"column":7,"nodeType":"244","messageId":"245","endLine":274,"endColumn":18},{"ruleId":"242","severity":1,"message":"360","line":4,"column":8,"nodeType":"244","messageId":"245","endLine":4,"endColumn":21},{"ruleId":"242","severity":1,"message":"361","line":6,"column":8,"nodeType":"244","messageId":"245","endLine":6,"endColumn":25},{"ruleId":"242","severity":1,"message":"362","line":7,"column":8,"nodeType":"244","messageId":"245","endLine":7,"endColumn":19},{"ruleId":"312","severity":1,"message":"313","line":156,"column":28,"nodeType":"257","endLine":156,"endColumn":43},{"ruleId":"248","severity":1,"message":"249","line":37,"column":6,"nodeType":"250","endLine":37,"endColumn":8,"suggestions":"363"},{"ruleId":"252","severity":1,"message":"253","line":52,"column":9,"nodeType":"254","endLine":52,"endColumn":57},{"ruleId":"364","severity":1,"message":"365","line":184,"column":17,"nodeType":"366","messageId":"367","endLine":184,"endColumn":27},{"ruleId":"312","severity":1,"message":"313","line":217,"column":19,"nodeType":"257","endLine":217,"endColumn":34},{"ruleId":"252","severity":1,"message":"253","line":225,"column":15,"nodeType":"254","endLine":225,"endColumn":63},{"ruleId":"252","severity":1,"message":"253","line":247,"column":9,"nodeType":"254","endLine":247,"endColumn":60},{"ruleId":"252","severity":1,"message":"253","line":251,"column":22,"nodeType":"254","endLine":251,"endColumn":69},{"ruleId":"252","severity":1,"message":"253","line":263,"column":25,"nodeType":"254","endLine":263,"endColumn":72},{"ruleId":"252","severity":1,"message":"253","line":277,"column":9,"nodeType":"254","endLine":277,"endColumn":58},{"ruleId":"252","severity":1,"message":"253","line":281,"column":22,"nodeType":"254","endLine":281,"endColumn":68},{"ruleId":"252","severity":1,"message":"253","line":297,"column":25,"nodeType":"254","endLine":297,"endColumn":71},{"ruleId":"252","severity":1,"message":"253","line":310,"column":9,"nodeType":"254","endLine":310,"endColumn":52},{"ruleId":"248","severity":1,"message":"368","line":41,"column":6,"nodeType":"250","endLine":41,"endColumn":18,"suggestions":"369"},{"ruleId":"304","severity":1,"message":"314","line":44,"column":39,"nodeType":"306","messageId":"315","endLine":44,"endColumn":41},{"ruleId":"248","severity":1,"message":"268","line":67,"column":6,"nodeType":"250","endLine":67,"endColumn":8,"suggestions":"370"},"no-unused-vars","'signUpImage' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'isSmall' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'currentUser' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["371"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["372"],"no-negated-in-lhs",["373"],"'useEffect' is defined but never used.","'DateTimePicker' is defined but never used.","'error' is assigned a value but never used.","'todoList' is assigned a value but never used.","'setTodoList' is assigned a value but never used.","'handleSignOut' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["374"],["372"],["373"],"'useHistory' is defined but never used.","'green' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\":hover\"] found.","Property","unnecessarilyComputedProperty",{"range":"375","text":"376"},"React Hook React.useEffect has a missing dependency: 'selectedStartDate'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'handleEndDateChange' needs the current value of 'selectedStartDate'.",["377"],"'emailjs' is defined but never used.","'allSelectedMemberList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllMembers'. Either include it or remove the dependency array.",["378"],"'profilePath' is assigned a value but never used.","'profileError' is assigned a value but never used.","'teams' is assigned a value but never used.","'setTeams' is assigned a value but never used.","'allMemberIdList' is assigned a value but never used.","'team' is assigned a value but never used.","'handleChangeTeam' is assigned a value but never used.","'uploadTask' is assigned a value but never used.","'getAllMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["379"],["380"],"'generateMedia' is defined but never used.",["381"],"'storage' is defined but never used.","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.",["382"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["383"],"React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'setDiscussionLock'. Either include them or remove the dependency array. If 'setDiscussionLock' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["384"],["385"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useRef' is defined but never used.","'defaultMaterialTheme' is assigned a value but never used.",["386"],"React Hook React.useEffect has a missing dependency: 'deleteTeam'. Either include it or remove the dependency array.",["387"],"'ChatScreen' is assigned a value but never used.","'ChatInput' is assigned a value but never used.",{"range":"388","text":"376"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'urlTeamName'. Either include it or remove the dependency array.",["389"],["390"],"'withStyles' is defined but never used.",["391"],"React Hook useEffect has a missing dependency: 'selectedStartDate'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'handleEndDateChange' needs the current value of 'selectedStartDate'.",["392"],"'emptyFunction' is assigned a value but never used.","'ClearIcon' is defined but never used.","'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'getNotificationList'. Either include it or remove the dependency array.",["393"],["394"],{"range":"395","text":"376"},"'currentUser' is assigned a value but never used.",{"range":"396","text":"376"},["397"],"'useState' is defined but never used.","React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'teamName'. Either include them or remove the dependency array.",["398"],"'databaseSideDelete' is assigned a value but never used.","'databaseDelete' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.",["399"],"'c' is assigned a value but never used.",["400"],"no-redeclare","'date' is already defined.","redeclared","React Hook React.useEffect has a missing dependency: 'checkImage'. Either include it or remove the dependency array.",["401"],"'TodoActions' is assigned a value but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.",["402"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","React Hook useEffect has missing dependencies: 'array' and 'colors'. Either include them or remove the dependency array.",["403"],["404"],{"desc":"405","fix":"406"},"no-global-assign","no-unsafe-negation",{"desc":"407","fix":"408"},[1612,1622],"\":hover\"",{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"407","fix":"413"},{"desc":"407","fix":"414"},{"desc":"415","fix":"416"},{"desc":"415","fix":"417"},{"desc":"415","fix":"418"},{"desc":"419","fix":"420"},{"desc":"409","fix":"421"},{"desc":"415","fix":"422"},{"desc":"423","fix":"424"},[1449,1459],{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"407","fix":"429"},{"desc":"409","fix":"430"},{"desc":"431","fix":"432"},{"desc":"431","fix":"433"},[1472,1482],[1318,1328],{"desc":"425","fix":"434"},{"desc":"435","fix":"436"},{"desc":"407","fix":"437"},{"desc":"411","fix":"438"},{"desc":"439","fix":"440"},{"desc":"405","fix":"441"},{"desc":"442","fix":"443"},{"desc":"407","fix":"444"},"Update the dependencies array to be: [currentUser, history]",{"range":"445","text":"446"},"Update the dependencies array to be: [currentUser.uid]",{"range":"447","text":"448"},"Update the dependencies array to be: [selectedEndDate, selectedStartDate]",{"range":"449","text":"450"},"Update the dependencies array to be: [getAllMembers]",{"range":"451","text":"452"},{"range":"453","text":"448"},{"range":"454","text":"448"},"Update the dependencies array to be: [UrlTeamName, currentUser.uid]",{"range":"455","text":"456"},{"range":"457","text":"456"},{"range":"458","text":"456"},"Update the dependencies array to be: [currentUser.uid, setDiscussionLock]",{"range":"459","text":"460"},{"range":"461","text":"450"},{"range":"462","text":"456"},"Update the dependencies array to be: [UrlTeamName, deleteTeam]",{"range":"463","text":"464"},"Update the dependencies array to be: [sort, urlTeamName]",{"range":"465","text":"466"},"Update the dependencies array to be: [currentUser.uid, urlTeamName]",{"range":"467","text":"468"},{"range":"469","text":"448"},{"range":"470","text":"450"},"Update the dependencies array to be: [getNotificationList]",{"range":"471","text":"472"},{"range":"473","text":"472"},{"range":"474","text":"466"},"Update the dependencies array to be: [currentUser.uid, teamName]",{"range":"475","text":"476"},{"range":"477","text":"448"},{"range":"478","text":"452"},"Update the dependencies array to be: [checkImage]",{"range":"479","text":"480"},{"range":"481","text":"446"},"Update the dependencies array to be: [array, colors, todoLength]",{"range":"482","text":"483"},{"range":"484","text":"448"},[4004,4006],"[currentUser, history]",[5060,5062],"[currentUser.uid]",[5383,5400],"[selectedEndDate, selectedStartDate]",[1782,1784],"[getAllMembers]",[7590,7592],[8118,8120],[5353,5366],"[UrlTeamName, currentUser.uid]",[9581,9594],[10174,10187],[10720,10722],"[currentUser.uid, setDiscussionLock]",[11054,11071],[4476,4489],[6027,6040],"[UrlTeamName, deleteTeam]",[4350,4356],"[sort, urlTeamName]",[2705,2718],"[currentUser.uid, urlTeamName]",[7868,7870],[8301,8318],[3336,3338],"[getNotificationList]",[3495,3497],[4166,4172],[1953,1955],"[currentUser.uid, teamName]",[3907,3909],[945,947],[1594,1596],"[checkImage]",[1694,1696],[1109,1121],"[array, colors, todoLength]",[1762,1764]]