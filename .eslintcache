[{"C:\\Users\\KIIT\\Desktop\\slogger\\src\\PrivateRoute.js":"1","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Dialog.js":"2","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js":"3","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodoCard.js":"4","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamCard.js":"5","C:\\Users\\KIIT\\Desktop\\slogger\\src\\index.js":"6","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\home\\Home.js":"7","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js":"8","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Delete.js":"9","C:\\Users\\KIIT\\Desktop\\slogger\\src\\firebase.js":"10","C:\\Users\\KIIT\\Desktop\\slogger\\src\\App.js":"11","C:\\Users\\KIIT\\Desktop\\slogger\\src\\context\\AuthContext.js":"12","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\auth\\SignUp.js":"13","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\navBar\\NavBar.js":"14","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\SlogPage.js":"15","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TodoCard.js":"16","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\slogger\\Slogger.js":"17","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js":"18","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\CustomTooltip.js":"19","C:\\Users\\KIIT\\Desktop\\slogger\\src\\reportWebVitals.js":"20"},{"size":499,"mtime":1611550987584,"results":"21","hashOfConfig":"22"},{"size":5254,"mtime":1610883615144,"results":"23","hashOfConfig":"22"},{"size":16715,"mtime":1611518561354,"results":"24","hashOfConfig":"22"},{"size":11314,"mtime":1610879017506,"results":"25","hashOfConfig":"22"},{"size":2663,"mtime":1610088017228,"results":"26","hashOfConfig":"22"},{"size":500,"mtime":1606917030598,"results":"27","hashOfConfig":"22"},{"size":6279,"mtime":1611518115013,"results":"28","hashOfConfig":"22"},{"size":13987,"mtime":1611518419280,"results":"29","hashOfConfig":"22"},{"size":8352,"mtime":1610883567073,"results":"30","hashOfConfig":"22"},{"size":498,"mtime":1610092641587,"results":"31","hashOfConfig":"22"},{"size":847,"mtime":1611551094253,"results":"32","hashOfConfig":"22"},{"size":1128,"mtime":1609346965442,"results":"33","hashOfConfig":"22"},{"size":16524,"mtime":1611550506644,"results":"34","hashOfConfig":"22"},{"size":6112,"mtime":1611550982527,"results":"35","hashOfConfig":"22"},{"size":13096,"mtime":1611518725660,"results":"36","hashOfConfig":"22"},{"size":4442,"mtime":1610083472152,"results":"37","hashOfConfig":"22"},{"size":6526,"mtime":1611657509636,"results":"38","hashOfConfig":"22"},{"size":3320,"mtime":1609741541354,"results":"39","hashOfConfig":"22"},{"size":414,"mtime":1611550365151,"results":"40","hashOfConfig":"22"},{"size":362,"mtime":1606917030598,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1etrus8",{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\KIIT\\Desktop\\slogger\\src\\PrivateRoute.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Dialog.js",["90","91","92","93","94","95"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodo.js",["96","97","98","99","100","101","102","103"],"import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { db } from \"../../firebase\";\r\nimport AddingTeamModal from \"./Dialog\";\r\nimport TeamCard from \"./TeamCard\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport AlarmIcon from \"@material-ui/icons/AddAlarm\";\r\nimport {\r\n  DateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n  DatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport firebase from \"firebase\";\r\nimport TeamTodoCard from \"./TeamTodoCard\";\r\nimport noTeamTodoImage from \"../../assets/images/noTeamTodo.svg\";\r\nimport noTodoJoinTeam from \"../../assets/images/noTodoJoinTeam.svg\";\r\nimport deletedTeam from \"../../assets/images/deletedTeam.svg\";\r\n\r\nconst defaultMaterialTheme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    width: \"100%\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nfunction TeamTodo({ UrlTeamName }) {\r\n  const [openMaker, setOpenMaker] = useState(false);\r\n  const [make, setMake] = useState(false);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const [inputTodo, setInputTodo] = useState(\"\");\r\n  const [thisIsAdmin, setThisIsAdmin] = useState(false);\r\n  const [deleteTeam, setDeleteTeam] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [teams, setTeams] = useState([]);\r\n  const [joinedTeams, setJoinedTeams] = useState([]);\r\n  const [teamsTodoList, setTeamsTodoList] = useState([]);\r\n  const { currentUser } = useAuth();\r\n\r\n  const handleInputChange = (value) => {\r\n    setInputTodo(value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleClickMakeTeam = () => {\r\n    setMake(true);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleClickJoinTeam = () => {\r\n    setMake(false);\r\n    setOpenMaker(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenMaker(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (inputTodo !== \"\") {\r\n      db.collection(\"teams\").doc(UrlTeamName).collection(\"teamTodos\").add({\r\n        todoText: inputTodo,\r\n        todoTime: selectedDate.toISOString(),\r\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        admin: currentUser.uid,\r\n        checked: false,\r\n        assignedTo: \"\",\r\n        todoImage: \"\",\r\n      });\r\n      setInputTodo(\"\");\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmitEnter = async (event) => {\r\n    if (\r\n      (inputTodo !== \"\" && event.code === \"Enter\") ||\r\n      event.code === \"NumpadEnter\"\r\n    ) {\r\n      db.collection(\"teams\").doc(UrlTeamName).collection(\"teamTodos\").add({\r\n        todoText: inputTodo,\r\n        todoTime: selectedDate.toISOString(),\r\n        timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        admin: currentUser.uid,\r\n        checked: false,\r\n        assignedTo: \"\",\r\n        todoImage: \"\",\r\n      });\r\n      setInputTodo(\"\");\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"teams\")\r\n      .doc(UrlTeamName)\r\n      .collection(\"teamTodos\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const list = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          admin: doc.data().admin,\r\n          todoText: doc.data().todoText,\r\n          todoTime: doc.data().todoTime,\r\n          checked: doc.data().checked,\r\n          assignedTo: doc.data().assignedTo,\r\n          todoImage: doc.data().todoImage,\r\n        }));\r\n        setTeamsTodoList(list);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"userTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _teams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n          admin: doc.data().admin,\r\n        }));\r\n        console.log(_teams);\r\n        setTeams(_teams);\r\n      });\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .orderBy(\"timeStamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const _joinedTeams = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          teamName: doc.data().teamName,\r\n        }));\r\n        console.log(_joinedTeams);\r\n        setJoinedTeams(_joinedTeams);\r\n      });\r\n  }, [UrlTeamName]);\r\n\r\n  React.useEffect(() => {\r\n    setThisIsAdmin(false);\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const tempTeamList = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        admin: doc.data().admin,\r\n        teamDeleted: doc.data().teamDeleted,\r\n      }));\r\n      tempTeamList.filter((team) => {\r\n        if (team.id === UrlTeamName) {\r\n          setDeleteTeam(team.teamDeleted);\r\n          if (team.admin === currentUser.uid) {\r\n            setThisIsAdmin(true);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }, [UrlTeamName]);\r\n  return (\r\n    <div>\r\n      <TeamTodoContainer>\r\n        <TeamTodoLeftContainer>\r\n          <TeamTodoLeftLeftBox>\r\n            <Button className=\"addButton\" onClick={() => handleClickMakeTeam()}>\r\n              Make a team\r\n            </Button>\r\n            <h3 style={{ overflow: \"hidden\" }}>My Teams</h3>\r\n            <MyTeamContainer>\r\n              {teams.map((team) => (\r\n                <TeamCard\r\n                  id={team.id}\r\n                  teamName={team.teamName}\r\n                  UrlTeamName={UrlTeamName}\r\n                ></TeamCard>\r\n              ))}\r\n            </MyTeamContainer>\r\n          </TeamTodoLeftLeftBox>\r\n          <TeamTodoLeftRightBox>\r\n            <Button className=\"addButton\" onClick={() => handleClickJoinTeam()}>\r\n              Join a team\r\n            </Button>\r\n            <h3 style={{ overflow: \"hidden\" }}>Joined Teams</h3>\r\n            <MyTeamContainer>\r\n              {joinedTeams.map((team) => (\r\n                <TeamCard\r\n                  id={team.id}\r\n                  teamName={team.teamName}\r\n                  UrlTeamName={UrlTeamName}\r\n                ></TeamCard>\r\n              ))}\r\n            </MyTeamContainer>\r\n          </TeamTodoLeftRightBox>\r\n        </TeamTodoLeftContainer>\r\n        <TeamTodoRightContainer>\r\n          {thisIsAdmin ? (\r\n            <TodoRightUpBox>\r\n              <div className=\"inputField\">\r\n                <CreateIcon className=\"todoIcon\" />\r\n                <input\r\n                  value={inputTodo}\r\n                  className=\"todoInput\"\r\n                  type=\"text\"\r\n                  placeholder=\"Write here...\"\r\n                  onChange={(e) => handleInputChange(e.target.value)}\r\n                  onKeyDown={(e) => handleSubmitEnter(e)}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  paddingLeft: \"0 0rem\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                  <CustomTooltip title=\"Enter date\" placement=\"top\" arrow>\r\n                    <div className=\"dateBox\">\r\n                      <ThemeProvider theme={defaultMaterialTheme}>\r\n                        <DatePicker\r\n                          variant=\"inline\"\r\n                          value={selectedDate}\r\n                          onChange={handleDateChange}\r\n                          style={{\r\n                            width: \"100%\",\r\n                            textAlign: \"center\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          InputProps={{\r\n                            endAdornment: <AlarmIcon className=\"AlarmIcon\" />,\r\n                            disableUnderline: true,\r\n                          }}\r\n                        />\r\n                      </ThemeProvider>\r\n                    </div>\r\n                  </CustomTooltip>\r\n                </MuiPickersUtilsProvider>\r\n\r\n                <Button\r\n                  disabled={loader}\r\n                  endIcon={<AddIcon />}\r\n                  className={loader ? \"AddButtonDisabled\" : \"AddButton\"}\r\n                  onClick={() => handleSubmit()}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </div>\r\n            </TodoRightUpBox>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                color: \"rgb(5, 185, 125)\",\r\n                padding: \"1.4rem 0rem\",\r\n                borderBottom: \"2px solid rgba(0, 141, 94, 0.295)\",\r\n              }}\r\n            >\r\n              <h1>SLOGGER</h1>\r\n            </div>\r\n          )}\r\n          {teamsTodoList.length === 0 ? (\r\n            thisIsAdmin ? (\r\n              <div\r\n                style={{\r\n                  height: \"80%\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  objectFit: \"contain\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={noTeamTodoImage}\r\n                  style={{ height: \"15rem\", width: \"15rem\" }}\r\n                />\r\n                <h3 style={{ color: \"rgba(0, 141, 94, 0.695)\" }}>\r\n                  NO WORK TO DO\r\n                </h3>{\" \"}\r\n                <h4 style={{ color: \"rgba(0, 141, 94, 0.695)\" }}>ADD SOME</h4>{\" \"}\r\n                <br />\r\n                <h6\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  Need Help?\r\n                </h6>{\" \"}\r\n              </div>\r\n            ) : deleteTeam ? (\r\n              <div\r\n                style={{\r\n                  height: \"80%\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  objectFit: \"contain\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={deletedTeam}\r\n                  style={{ height: \"15rem\", width: \"15rem\" }}\r\n                />\r\n                <h4 style={{ color: \"rgba(0, 141, 94, 0.695)\" }}>\r\n                  THIS TEAM WAS DELETED BY THE ADMIN\r\n                </h4>{\" \"}\r\n                <br />\r\n                <h6\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  Need Help?\r\n                </h6>{\" \"}\r\n              </div>\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  height: \"80%\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  objectFit: \"contain\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={noTodoJoinTeam}\r\n                  style={{ height: \"15rem\", width: \"15rem\" }}\r\n                />\r\n                <h4 style={{ color: \"rgba(0, 141, 94, 0.695)\" }}>\r\n                  NO WORK TO DO, WE WILL UPDATE IF THERE WILL BE ANY\r\n                </h4>{\" \"}\r\n                <h5 style={{ color: \"rgba(0, 141, 94, 0.695)\" }}>\r\n                  TILL THEN SIT BACK AND RELAX\r\n                </h5>{\" \"}\r\n                <br />\r\n                <h6\r\n                  style={{\r\n                    color: \"rgba(0, 141, 94, 0.695)\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  Need Help?\r\n                </h6>{\" \"}\r\n              </div>\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {teamsTodoList.map((todo) => (\r\n            <TeamTodoCard\r\n              id={todo.id}\r\n              text={todo.todoText}\r\n              date={todo.todoTime}\r\n              checked={todo.checked}\r\n              admin={todo.admin}\r\n              urlTeamName={UrlTeamName}\r\n              assigned={todo.assignedTo}\r\n              todoImage={todo.todoImage}\r\n            />\r\n          ))}\r\n        </TeamTodoRightContainer>\r\n      </TeamTodoContainer>\r\n      {openMaker && (\r\n        <AddingTeamModal\r\n          open={openMaker}\r\n          handleClose={handleClose}\r\n          make={make}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamTodo;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"740px\",\r\n});\r\n\r\nconst TeamTodoContainer = styled.div`\r\n  width: 98.5%;\r\n  height: 87%;\r\n  position: absolute;\r\n  display: flex;\r\n`;\r\n\r\nconst TeamTodoLeftContainer = styled.div`\r\n  flex: 0.5;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst TeamTodoLeftLeftBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-right: 2px solid rgba(0, 141, 94, 0.295);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n  }\r\n`;\r\nconst MyTeamContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: scroll !important;\r\n`;\r\n\r\nconst TeamTodoLeftRightBox = styled.div`\r\n  flex: 0.5;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5rem;\r\n\r\n  .addButton {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.5rem;\r\n  }\r\n  h3 {\r\n    color: rgb(5, 185, 125);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    margin: 0.3rem 0;\r\n  }\r\n`;\r\nconst TeamTodoRightContainer = styled.div`\r\n  flex: 0.5;\r\n  overflow-y: scroll;\r\n  padding: 0 1rem;\r\n`;\r\n\r\nconst TodoRightUpBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 2px solid rgba(0, 141, 94, 0.295);\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n\r\n    border:none;\r\n  `}\r\n\r\n  .inputField {\r\n    width: 100%;\r\n    height: 1.7rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 5px;\r\n    border: none;\r\n    padding: 0.2rem 0;\r\n    margin: 0.5rem 0;\r\n    margin-bottom: 0.2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n         margin:0;\r\n         height: 3rem;\r\n    `};\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 0.7rem;\r\n    flex: 0.95;\r\n    padding-left: 0rem;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size:0.5rem;\r\n    `};\r\n  }\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 0.7rem;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size:0.5rem;\r\n    `};\r\n  }\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.2rem;\r\n    flex: 0.05;\r\n    padding-right: 0.3rem;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n  .AlarmIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.2rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    margin-top:-10px;\r\n    `};\r\n  }\r\n  .dateBox {\r\n    width: 88%;\r\n    height: 1.5rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 0.4rem;\r\n    margin: 0.2rem 0;\r\n    margin-right: 0.2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n    padding: 0.1rem 0.5rem;\r\n         margin:0.1rem 0;\r\n    `};\r\n  }\r\n  .AddButton {\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.2rem 0;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n     margin: 0rem;\r\n    `};\r\n  }\r\n\r\n  .AddButton:hover {\r\n    background-color: rgb(5, 185, 125);\r\n  }\r\n  .AddButtonDisabled {\r\n    opacity: 0.7;\r\n    width: 95.5%;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    background-color: rgb(5, 185, 125);\r\n    margin: 0.2rem;\r\n  }\r\n`;\r\n",["104","105"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamTodoCard.js",["106","107","108"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { db, storage } from \"../../firebase\";\r\nimport moment from \"moment\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nfunction TeamTodoCard({\r\n  id,\r\n  text,\r\n  date,\r\n  checked,\r\n  admin,\r\n  urlTeamName,\r\n  assigned,\r\n  todoImage,\r\n}) {\r\n  const { currentUser } = useAuth();\r\n  const [localCheck, setLocalCheck] = useState(checked);\r\n  const [assignedTo, setAssignedTo] = useState();\r\n\r\n  React.useEffect(() => {\r\n    if (assigned === \"\") {\r\n      setAssignedTo(\"\");\r\n    } else {\r\n      setAssignedTo(assigned);\r\n    }\r\n  }, [assigned]);\r\n\r\n  const handleInputChange = (value) => {\r\n    setAssignedTo(value);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (todoImage !== \"\") {\r\n      // Create a reference to the file to delete\r\n      var desertRef = storage.refFromURL(todoImage);\r\n\r\n      // Delete the file\r\n      desertRef\r\n        .delete()\r\n        .then(function () {\r\n          console.log(\"File deleted successfully\");\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    db.collection(\"teams\")\r\n      .doc(urlTeamName)\r\n      .collection(\"teamTodos\")\r\n      .doc(id)\r\n      .delete();\r\n  };\r\n\r\n  const handleChecked = () => {\r\n    setLocalCheck(!localCheck);\r\n    db.collection(\"teams\").doc(urlTeamName).collection(\"teamTodos\").doc(id).set(\r\n      {\r\n        checked: localCheck,\r\n      },\r\n      { merge: true }\r\n    );\r\n  };\r\n\r\n  const handleAssignedSubmit = () => {\r\n    db.collection(\"teams\").doc(urlTeamName).collection(\"teamTodos\").doc(id).set(\r\n      {\r\n        assignedTo: assignedTo,\r\n      },\r\n      { merge: true }\r\n    );\r\n    setAssignedTo(\"\");\r\n  };\r\n\r\n  const emptyFunction = () => {};\r\n\r\n  const onSelectFile = async (event) => {\r\n    try {\r\n      const image = event.target.files[0];\r\n      const uploadTask = await storage\r\n        .ref(`todoImages/${image.name}`)\r\n        .put(image);\r\n      storage\r\n        .ref(\"todoImages\")\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          console.log(url);\r\n          db.collection(\"teams\")\r\n            .doc(urlTeamName)\r\n            .collection(\"teamTodos\")\r\n            .doc(id)\r\n            .set(\r\n              {\r\n                todoImage: url,\r\n              },\r\n              { merge: true }\r\n            );\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TodoMainCard>\r\n      <TodoStartIcon>\r\n        <CustomTooltip title=\"Double tap\" arrow placement=\"left\">\r\n          {checked ? (\r\n            <CheckBoxIcon\r\n              className=\"todoStartIcon\"\r\n              onClick={() => handleChecked()}\r\n            />\r\n          ) : (\r\n            <CheckBoxOutlineBlankIcon\r\n              className=\"todoStartIcon\"\r\n              onClick={() => handleChecked()}\r\n            />\r\n          )}\r\n        </CustomTooltip>\r\n      </TodoStartIcon>\r\n\r\n      <TodoTextBox>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div style={{ width: \"100%\", flex: \"0.85\" }}>\r\n            <div className=\"inputField\">\r\n              <p className=\"assignedTo\">Assigned to :</p>\r\n              <input\r\n                value={assignedTo}\r\n                className=\"todoInput\"\r\n                type=\"text\"\r\n                onChange={\r\n                  admin === currentUser.uid\r\n                    ? (e) => handleInputChange(e.target.value)\r\n                    : () => emptyFunction()\r\n                }\r\n                // onKeyDown={(e) => handleSubmitEnter(e)}\r\n              />\r\n              {admin === currentUser.uid ? (\r\n                <GroupAddIcon\r\n                  className=\"todoIcon\"\r\n                  onClick={() => handleAssignedSubmit()}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n              {admin === currentUser.uid ? (\r\n                <div style={{ flex: \"0.5\" }}>\r\n                  {\" \"}\r\n                  <input\r\n                    hidden\r\n                    id=\"profile-image-file\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onSelectFile}\r\n                  />\r\n                  <Button\r\n                    style={{\r\n                      width: \"98%\",\r\n                      fontSize: \"0.7rem\",\r\n                      height: \"1.5rem\",\r\n                      color: \"#fff\",\r\n                      fontWeight: 600,\r\n                      backgroundColor: \"rgb(5, 185, 125)\",\r\n                      marginBottom: \"0.5rem\",\r\n                    }}\r\n                    onClick={() => {\r\n                      document.getElementById(\"profile-image-file\").click();\r\n                    }}\r\n                  >\r\n                    Upload Image\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n                // <div style={{ flex: \"0.5\" }}>\r\n                //   {todoImage !== \"\" ? (\r\n                //     <a\r\n                //       href={todoImage}\r\n                //       download\r\n                //       target=\"_blank\"\r\n                //       style={{ textDecoration: \"none\" }}\r\n                //     >\r\n                //       <Button\r\n                //         style={{\r\n                //           width: \"95%\",\r\n                //           fontSize: \"0.7rem\",\r\n                //           height: \"1.5rem\",\r\n                //           color: \"#fff\",\r\n                //           fontWeight: 600,\r\n                //           backgroundColor: \"rgb(5, 185, 125)\",\r\n\r\n                //           marginBottom: \"0.5rem\",\r\n                //         }}\r\n                //       >\r\n                //         Download Image\r\n                //       </Button>\r\n                //     </a>\r\n                //   ) : (\r\n                //     \"\"\r\n                //   )}\r\n                // </div>\r\n              )}\r\n\r\n              <div style={{ flex: \"0.5\" }}>\r\n                {todoImage !== \"\" ? (\r\n                  <a\r\n                    href={todoImage}\r\n                    target=\"_blank\"\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        width: \"95%\",\r\n                        fontSize: \"0.7rem\",\r\n                        height: \"1.5rem\",\r\n                        color: \"#fff\",\r\n                        fontWeight: 600,\r\n                        backgroundColor: \"rgb(5, 185, 125)\",\r\n\r\n                        marginBottom: \"0.5rem\",\r\n                      }}\r\n                    >\r\n                      View Image\r\n                    </Button>\r\n                  </a>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <p\r\n            className=\"todoDate\"\r\n            style={{\r\n              color: \"rgba(0, 99, 66, 0.668)\",\r\n              paddingBottom: \"0.3rem\",\r\n              flex: \"0.15\",\r\n            }}\r\n          >\r\n            {date.substring(8, 10)}\r\n            {\"/\"}\r\n            {date.substring(5, 7)}\r\n            {\"/\"}\r\n            {date.substring(0, 4)}\r\n          </p>\r\n        </div>\r\n        <p\r\n          style={{\r\n            color: \"rgba(0, 99, 66, 0.868)\",\r\n            fontWeight: 400,\r\n            width: \"100%\",\r\n            wordBreak: \"break-all\",\r\n            verticalAlign: \"center\",\r\n            height: \"auto\",\r\n            // lineHeight: \"30px\",\r\n            marginTop: \"-5px\",\r\n          }}\r\n        >\r\n          {text}\r\n        </p>\r\n      </TodoTextBox>\r\n      {admin === currentUser.uid ? (\r\n        <TodoActions>\r\n          <DeleteIcon className=\"delete\" onClick={() => handleDelete(id)} />\r\n        </TodoActions>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </TodoMainCard>\r\n  );\r\n}\r\n\r\nexport default TeamTodoCard;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"740px\",\r\n});\r\n\r\nconst TodoMainCard = styled.div`\r\n  margin: 1rem 0rem;\r\n  box-shadow: 0px 1px 5px rgb(0, 129, 86);\r\n  background-color: rgb(231, 250, 243);\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 3rem;\r\n  min-height: 3rem;\r\n  display: flex;\r\n  word-break: \"break-all\";\r\n  min-height: 4.5rem !important;\r\n  height: auto;\r\n`;\r\nconst TodoStartIcon = styled.div`\r\n  transform: scale(0.8);\r\n  flex: 0.07;\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-right: 2px solid rgba(0, 99, 66, 0.368);\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex: 0.09;\r\n    `};\r\n\r\n  .todoStartIcon {\r\n    color: rgba(0, 99, 66, 0.568);\r\n    font-size: 1.7rem;\r\n    object-fit: contain;\r\n    cursor: pointer;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      transform:scale(0.8);\r\n      padding:0 0.3rem;\r\n    `};\r\n  }\r\n`;\r\nconst TodoTextBox = styled.div`\r\n  flex: 0.88;\r\n  width: 100%;\r\n  padding: 0.2rem 0.5rem;\r\n  word-break: \"break-all\";\r\n  height: auto;\r\n\r\n  .assignedTo {\r\n    color: rgb(0, 90, 60);\r\n    font-size: 0.7rem;\r\n  }\r\n\r\n  .todoIcon {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.2rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n    cursor: pointer;\r\n    transform: rotateY(180deg) !important;\r\n  }\r\n\r\n  .inputField {\r\n    width: 95%;\r\n    height: 1.4rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 5px;\r\n    border: none;\r\n    padding: 0.05rem 0.2rem;\r\n    padding-left: 0.5rem;\r\n    margin: 0.2rem;\r\n    margin-bottom: 0.2rem;\r\n    margin-left: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    flex: 0.9;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n         margin:0;\r\n         height: 3rem;\r\n    `};\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(0, 90, 60);\r\n    font-size: 0.7rem;\r\n    flex: 0.95;\r\n    padding-left: 0.5rem;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size:0.5rem;\r\n    `};\r\n  }\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 0.7rem;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      font-size:0.5rem;\r\n    `};\r\n  }\r\n\r\n  .todoDate {\r\n    flex: 0.2;\r\n    font-size: 10px;\r\n    text-align: center;\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n       font-size:9px;\r\n    `};\r\n  }\r\n`;\r\nconst TodoActions = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: #fff;\r\n  flex: 0.05;\r\n  width: 100%;\r\n  height: auto;\r\n  padding: 0.2rem 0.5rem;\r\n  background-color: rgba(0, 99, 66, 0.868);\r\n  border-radius: 30px 0px 0px 30px;\r\n  border-left: 2px solid rgba(0, 99, 66, 0.768);\r\n\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      flex: 0.09;\r\n    `};\r\n\r\n  .delete {\r\n    cursor: pointer;\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      transform:scale(0.8);\r\n    `};\r\n  }\r\n`;\r\n",["109","110"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TeamCard.js",["111"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\index.js",[],["112","113"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\home\\Home.js",["114","115","116","117","118"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\PersonalTodo.js",["119","120","121","122","123","124","125","126","127","128","129"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\Delete.js",["130","131","132","133","134","135","136","137"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./style.css\";\r\nimport { db, storage } from \"../../firebase\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Delete({ open, handleClose, teamName, id }) {\r\n  const [cannotDelete, setCannotDelete] = React.useState(false);\r\n  const [ModalOpen, setModalOpen] = React.useState(false);\r\n\r\n  const handleCloseDeleteListModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const { currentUser } = useAuth();\r\n  const handleJoinDelete = () => {\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"joinTeams\")\r\n      .doc(id)\r\n      .delete();\r\n    handleClose();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"teams\").onSnapshot((snapshot) => {\r\n      const tempTeamList = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        admin: doc.data().admin,\r\n      }));\r\n      var count = 0;\r\n      tempTeamList.filter((team) => {\r\n        if (team.id === teamName) {\r\n          if (team.admin === currentUser.uid) {\r\n            count = count + 1;\r\n          }\r\n        }\r\n      });\r\n      if (count !== 0) {\r\n        // callDelete();\r\n      } else {\r\n        setCannotDelete(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      onClose={handleClose}\r\n      keepMounted\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        className=\"title\"\r\n      ></DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          {cannotDelete ? (\r\n            <p>\r\n              Team will be deleted on your side only,\r\n              <br /> Are you sure?{\" \"}\r\n            </p>\r\n          ) : (\r\n            <p>Are you sure?</p>\r\n          )}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button className=\"addButton\" onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"addButton\"\r\n          onClick={\r\n            cannotDelete ? () => handleJoinDelete() : () => setModalOpen(true)\r\n          }\r\n          color=\"primary\"\r\n        >\r\n          Delete\r\n        </Button>\r\n      </DialogActions>\r\n      {ModalOpen && (\r\n        <DeleteUserTeamModal\r\n          open={ModalOpen}\r\n          handleThisClose={handleCloseDeleteListModal}\r\n          teamName={teamName}\r\n          id={id}\r\n          closeBackModal={handleClose}\r\n          currentUser={currentUser.uid}\r\n        />\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction DeleteUserTeamModal({\r\n  open,\r\n  handleThisClose,\r\n  teamName,\r\n  id,\r\n  closeBackModal,\r\n  currentUser,\r\n}) {\r\n  const [todoSideDelete, setTodoSideDelete] = React.useState(false);\r\n  const [userSideDelete, setUserSideDelete] = React.useState(false);\r\n  const [databaseSideDelete, setDatabaseSideDelete] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const userTeamDelete = () => {\r\n    db.collection(\"teams\").doc(teamName).set(\r\n      {\r\n        teamDeleted: true,\r\n      },\r\n      { merge: true }\r\n    );\r\n\r\n    db.collection(\"users\")\r\n      .doc(currentUser)\r\n      .collection(\"userTeams\")\r\n      .doc(id)\r\n      .delete();\r\n    history.push(\"/\");\r\n    setUserSideDelete(true);\r\n  };\r\n\r\n  const databaseDelete = () => {\r\n    db.collection(\"teams\").doc(teamName).delete();\r\n    setDatabaseSideDelete(true);\r\n  };\r\n\r\n  const deleteAllTodo = (todo) => {\r\n    todo.map((doc) => {\r\n      if (doc.todoImage !== \"\") {\r\n        var desertRef = storage.refFromURL(doc.todoImage);\r\n        desertRef\r\n          .delete()\r\n          .then(function () {\r\n            console.log(\"File deleted successfully\");\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      }\r\n\r\n      db.collection(\"teams\")\r\n        .doc(teamName)\r\n        .collection(\"teamTodos\")\r\n        .doc(doc.id)\r\n        .delete();\r\n    });\r\n  };\r\n\r\n  const todoDelete = () => {\r\n    db.collection(\"teams\")\r\n      .doc(teamName)\r\n      .collection(\"teamTodos\")\r\n      .onSnapshot((snapshot) => {\r\n        const todoDeleteList = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          todoImage: doc.data().todoImage,\r\n        }));\r\n\r\n        console.log(todoDeleteList);\r\n        deleteAllTodo(todoDeleteList);\r\n      });\r\n\r\n    setTodoSideDelete(true);\r\n  };\r\n\r\n  const handleCompleteClose = () => {\r\n    handleThisClose();\r\n    closeBackModal();\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      keepMounted\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        className=\"title\"\r\n      ></DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <h3 style={{ paddingBottom: \"1rem\" }}>\r\n              Help us to delete it from both place\r\n            </h3>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <p style={{ flex: 0.7 }}>Delete all todos: </p>\r\n              <Button\r\n                disabled={todoSideDelete ? true : false}\r\n                // className=\"addButton\"\r\n                className={todoSideDelete ? \"addButtonDisabled\" : \"addButton\"}\r\n                style={{ flex: 0.3 }}\r\n                onClick={() => todoDelete()}\r\n              >\r\n                {todoSideDelete ? \"deleted\" : \"delete\"}\r\n              </Button>\r\n            </div>\r\n            {/* <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <p style={{ flex: 0.7 }}>Delete from database: </p>\r\n              <Button\r\n                disabled={\r\n                  todoSideDelete ? (databaseSideDelete ? true : false) : true\r\n                }\r\n                // className=\"addButton\"\r\n                className={\r\n                  todoSideDelete\r\n                    ? databaseSideDelete\r\n                      ? \"addButtonDisabled\"\r\n                      : \"addButton\"\r\n                    : \"addButtonDisabled\"\r\n                }\r\n                style={{ flex: 0.3 }}\r\n                onClick={() => databaseDelete()}\r\n              >\r\n                {databaseSideDelete ? \"deleted\" : \"delete\"}\r\n              </Button>\r\n            </div> */}\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <p style={{ flex: 0.7 }}>Delete from your side: </p>\r\n              <Button\r\n                disabled={\r\n                  todoSideDelete ? (userSideDelete ? true : false) : true\r\n                }\r\n                // className=\"addButton\"\r\n\r\n                className={\r\n                  todoSideDelete\r\n                    ? userSideDelete\r\n                      ? \"addButtonDisabled\"\r\n                      : \"addButton\"\r\n                    : \"addButtonDisabled\"\r\n                }\r\n                style={{ flex: 0.3 }}\r\n                onClick={() => userTeamDelete()}\r\n              >\r\n                {userSideDelete ? \"deleted\" : \"delete\"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button\r\n          className=\"addButton\"\r\n          onClick={handleCompleteClose}\r\n          color=\"primary\"\r\n          disabled={userSideDelete && todoSideDelete ? false : true}\r\n          className={\r\n            todoSideDelete && userSideDelete ? \"addButton\" : \"addButtonDisabled\"\r\n          }\r\n        >\r\n          Done\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\firebase.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\App.js",["138"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\context\\AuthContext.js",[],["139","140"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\auth\\SignUp.js",["141","142","143","144"],"import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./style.css\";\r\nimport { generateMedia } from \"styled-media-query\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { db } from \"../../firebase\";\r\nimport signUpVideo from \"../../assets/videos/Gaulois.mp4\";\r\nimport signUpImage from \"../../assets/images/signUpSlogger.png\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CustomTooltip from \"../CustomTooltip\";\r\nimport signUpLoader from \"../../assets/images/signUpLoader.gif\";\r\n\r\nfunction SignUp() {\r\n  const [authToggle, setAuthToggle] = useState(false);\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [passwordVisibility, setPasswordVisibility] = useState(\"password\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const { signUp, signIn, currentUser } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const handleChange = (set, value) => {\r\n    set(value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleSignUp = async () => {\r\n    if (\r\n      email === \"\" ||\r\n      password === \"\" ||\r\n      firstName === \"\" ||\r\n      confirmPassword === \"\" ||\r\n      password !== confirmPassword\r\n    ) {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        const USER = await signUp(email, password);\r\n        db.collection(\"users\").doc(USER?.uid).collection(\"profile\").add({\r\n          email: email,\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n        });\r\n        setLoader(false);\r\n        history.push(\"/home\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    if (email === \"\" || password === \"\") {\r\n      setError(true);\r\n    } else {\r\n      try {\r\n        setLoader(true);\r\n        await signIn(email, password);\r\n        history.push(\"/home\");\r\n        setLoader(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoader(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    const _visibility = !visibility;\r\n    setVisibility(_visibility);\r\n    setPasswordVisibility(_visibility ? \"text\" : \"password\");\r\n  };\r\n\r\n  const handleAuthToggle = () => {\r\n    setAuthToggle(!authToggle);\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setConfirmPassword(\"\");\r\n    setError(false);\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      {loader ? (\r\n        <div className=\"loaderContainer\">\r\n          <img className=\"signUpLoader\" src={signUpLoader} />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <video autoPlay loop muted className=\"signUpVideo\">\r\n        <source src={signUpVideo} type=\"video/mp4\"></source>\r\n      </video>\r\n      <Alaric>\r\n        <h1>\r\n          HELLO, <br />I AM <span className=\"highlight\">ALARIC </span>\r\n          <br />\r\n          WELCOME TO <span className=\"highlight\">SLOGGER </span>\r\n        </h1>\r\n      </Alaric>\r\n      {authToggle ? (\r\n        <SignUpBox>\r\n          <SignUpForm>\r\n            <img src={signUpImage} />\r\n            <div className=\"signUpFormBottom\">\r\n              <CustomTooltip\r\n                title=\"Alaric : Enter your email.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputField\">\r\n                  <AccountBoxIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric : Password please, Hope you remember.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputField\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    autocomplete=\"new-password\"\r\n                    onChange={(e) => handleChange(setPassword, e.target.value)}\r\n                  ></input>\r\n                  {visibility ? (\r\n                    <VisibilityIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOffIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CustomTooltip>\r\n\r\n              <Button\r\n                style={{\r\n                  width: \"60%\",\r\n                  marginTop: \"1rem\",\r\n                  color: \"#fff\",\r\n                  background: \"rgb(5, 185, 125)\",\r\n                }}\r\n                onClick={() => handleSignIn()}\r\n              >\r\n                Let's Slog\r\n              </Button>\r\n\r\n              {error ? (\r\n                <p\r\n                  style={{\r\n                    color: \"red\",\r\n                    padding: \"0.5rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Alaric: Please fill form correctly.\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </SignUpForm>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"2rem\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n            className=\"footer\"\r\n          >\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Not a Slogger?{\" \"}\r\n              <span\r\n                style={{ color: \"rgb(0, 128, 85)\", cursor: \"pointer\" }}\r\n                onClick={() => handleAuthToggle()}\r\n              >\r\n                Register\r\n              </span>\r\n            </p>\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Need Help?\r\n            </p>\r\n          </div>\r\n        </SignUpBox>\r\n      ) : (\r\n        <SignUpBox>\r\n          <SignUpForm>\r\n            <img src={signUpImage} />\r\n            <div className=\"signUpFormBottom\">\r\n              <div className=\"inputField\">\r\n                <CustomTooltip\r\n                  title=\"Alaric: What's your first name?\"\r\n                  arrow\r\n                  placement=\"top\"\r\n                >\r\n                  <div className=\"inputField\" style={{ background: \"none\" }}>\r\n                    <ArrowForwardIosIcon className=\"EmailAccount shortScreen\" />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={firstName}\r\n                      placeholder=\"First Name\"\r\n                      autocomplete=\"new-password\"\r\n                      className=\"firstName\"\r\n                      onChange={(e) =>\r\n                        handleChange(setFirstName, e.target.value)\r\n                      }\r\n                    ></input>\r\n                  </div>\r\n                </CustomTooltip>\r\n                <CustomTooltip title=\"Alaric: Last name?\" arrow placement=\"top\">\r\n                  <div className=\"inputField\" style={{ background: \"none\" }}>\r\n                    <ArrowForwardIosIcon className=\"EmailAccount shortScreen\" />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={lastName}\r\n                      placeholder=\"Last Name\"\r\n                      autocomplete=\"new-password\"\r\n                      className=\"firstName\"\r\n                      onChange={(e) =>\r\n                        handleChange(setLastName, e.target.value)\r\n                      }\r\n                    ></input>\r\n                  </div>\r\n                </CustomTooltip>\r\n              </div>\r\n              <CustomTooltip\r\n                title=\"Alaric: Enter a valid email, It's good for future.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputField\">\r\n                  <AccountBoxIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => handleChange(setEmail, e.target.value)}\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric: Make sure your password is at least 6 letters.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputField\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    autocomplete=\"new-password\"\r\n                    onChange={(e) => handleChange(setPassword, e.target.value)}\r\n                  ></input>\r\n                  {visibility ? (\r\n                    <VisibilityIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  ) : (\r\n                    <VisibilityOffIcon\r\n                      className=\"EmailAccount\"\r\n                      onClick={() => toggleVisibility()}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </CustomTooltip>\r\n              <CustomTooltip\r\n                title=\"Alaric: Make sure to write same password.\"\r\n                arrow\r\n                placement=\"top\"\r\n              >\r\n                <div className=\"inputField\">\r\n                  <LockIcon className=\"EmailAccount\" />\r\n                  <input\r\n                    className=\"password\"\r\n                    type={passwordVisibility}\r\n                    placeholder=\"Confirm Password\"\r\n                    value={confirmPassword}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) =>\r\n                      handleChange(setConfirmPassword, e.target.value)\r\n                    }\r\n                  ></input>\r\n                </div>\r\n              </CustomTooltip>\r\n\r\n              <Button\r\n                style={{\r\n                  width: \"60%\",\r\n                  marginTop: \"1rem\",\r\n                  color: \"#fff\",\r\n                  background: \"rgb(5, 185, 125)\",\r\n                }}\r\n                onClick={() => handleSignUp()}\r\n              >\r\n                Register\r\n              </Button>\r\n\r\n              {error ? (\r\n                <p\r\n                  style={{\r\n                    color: \"red\",\r\n                    padding: \"0.5rem\",\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Alaric: Please fill form correctly.\r\n                </p>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </SignUpForm>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"2rem\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n            className=\"footer\"\r\n          >\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Already a Slogger?{\" \"}\r\n              <span\r\n                style={{ color: \"rgb(0, 128, 85)\", cursor: \"pointer\" }}\r\n                onClick={() => handleAuthToggle()}\r\n              >\r\n                Sign In\r\n              </span>\r\n            </p>\r\n            <p style={{ color: \"rgba(3, 185, 124, 0.608)\", padding: \"0 3rem\" }}>\r\n              Need Help?\r\n            </p>\r\n          </div>\r\n        </SignUpBox>\r\n      )}\r\n    </SignUpContainer>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n\r\nconst customMedia = generateMedia({\r\n  lgDesktop: \"1350px\",\r\n  mdDesktop: \"1150px\",\r\n  tablet: \"960px\",\r\n  smTablet: \"740px\",\r\n});\r\n\r\nconst SignUpContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  .loaderContainer {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: #fff;\r\n    z-index: 1000;\r\n    opacity: 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .signUpLoader {\r\n    object-fit: contain;\r\n    transform: scale(0.6);\r\n  }\r\n`;\r\n\r\nconst Alaric = styled.div`\r\n  position: absolute;\r\n  left: 1rem;\r\n  top: 20%;\r\n  background: none;\r\n  height: 28rem;\r\n  width: 35vw;\r\n  min-width: 10rem;\r\n  padding-left: 2rem;\r\n  align-items: center;\r\n  font-size: 3vw;\r\n  color: rgba(0, 128, 85, 0.568);\r\n  font-family: \"Bebas Neue\", cursive;\r\n  letter-spacing: 0.2rem;\r\n\r\n  ${customMedia.lessThan(\"mdDesktop\")`\r\n      display:none;\r\n    `};\r\n\r\n  .highlight {\r\n    color: rgb(0, 128, 85) !important;\r\n  }\r\n`;\r\n\r\nconst SignUpBox = styled.div`\r\n  height: 100vh;\r\n  width: 43vw;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  right: 0;\r\n  top: 0;\r\n  ${customMedia.lessThan(\"lgDesktop\")`\r\n     width: 33rem;\r\n    `};\r\n  ${customMedia.lessThan(\"tablet\")`\r\n      width: 28rem;\r\n      \r\n    `};\r\n  ${customMedia.lessThan(\"smTablet\")`\r\n      width: 16rem;\r\n      \r\n    `};\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .footer {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n   font-size:10px;\r\n   bottom:8rem !important;\r\n   width:100%;\r\n   flex-direction:column;\r\n   line-height:2rem;\r\n    `};\r\n\r\n    ${customMedia.lessThan(\"smTablet\")`\r\n      bottom:2rem !important;\r\n      line-height:1rem;\r\n    `};\r\n  }\r\n`;\r\n\r\nconst SignUpForm = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 35vw;\r\n  /* box-shadow: 13px 13px 20px rgba(0, 128, 85, 0.164),\r\n    inset -3px -3px 10px rgba(0, 128, 85, 0.459); */\r\n\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  ${customMedia.lessThan(\"tablet\")`\r\n  margin: 40px auto;\r\n   width:  calc(40vw + 70px);\r\n   height: 90vh;\r\n    `};\r\n\r\n  img {\r\n    position: absolute;\r\n    height: 6rem;\r\n    width: 60%;\r\n    margin: 1rem 2rem;\r\n    margin-top: 2rem;\r\n    object-fit: contain;\r\n  }\r\n\r\n  .signUpFormBottom {\r\n    position: absolute;\r\n    margin-top: 7rem;\r\n    width: 100%;\r\n    height: 75vh;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .inputField {\r\n    width: 90%;\r\n    height: 2rem;\r\n    background-color: rgba(3, 185, 124, 0.308);\r\n    border-radius: 1rem;\r\n    border: none;\r\n    padding: 1rem;\r\n    margin: 0.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    overflow: hidden;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    border: none;\r\n    background: transparent;\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n    flex: 0.9;\r\n  }\r\n  input::placeholder {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1rem;\r\n  }\r\n  .EmailAccount {\r\n    color: rgb(3, 185, 124);\r\n    font-size: 1.5rem;\r\n    flex: 0.1;\r\n    padding-right: 0.3rem;\r\n  }\r\n  .firstName {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:8px;\r\n    `};\r\n  }\r\n  .firstName::placeholder {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n      font-size:8px;\r\n    `};\r\n  }\r\n  .shortScreen {\r\n    ${customMedia.lessThan(\"tablet\")`\r\n     transform:scale(1.5);\r\n    `};\r\n  }\r\n  .password {\r\n    flex: 0.8;\r\n  }\r\n`;\r\n","C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\navBar\\NavBar.js",["145","146","147"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\SlogPage.js",["148","149","150","151","152","153","154","155"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\TodoCard.js",["156"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\slogger\\Slogger.js",["157","158","159","160"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\todo\\DonutChart.js",["161","162","163"],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\components\\CustomTooltip.js",[],"C:\\Users\\KIIT\\Desktop\\slogger\\src\\reportWebVitals.js",[],{"ruleId":"164","severity":1,"message":"165","line":21,"column":10,"nodeType":"166","messageId":"167","endLine":21,"endColumn":18},{"ruleId":"164","severity":1,"message":"168","line":21,"column":20,"nodeType":"166","messageId":"167","endLine":21,"endColumn":31},{"ruleId":"164","severity":1,"message":"169","line":24,"column":10,"nodeType":"166","messageId":"167","endLine":24,"endColumn":17},{"ruleId":"164","severity":1,"message":"170","line":24,"column":19,"nodeType":"166","messageId":"167","endLine":24,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":41,"column":28,"nodeType":"173","messageId":"174","endLine":41,"endColumn":30},{"ruleId":"171","severity":1,"message":"172","line":61,"column":28,"nodeType":"173","messageId":"174","endLine":61,"endColumn":30},{"ruleId":"164","severity":1,"message":"175","line":11,"column":3,"nodeType":"166","messageId":"167","endLine":11,"endColumn":17},{"ruleId":"164","severity":1,"message":"176","line":43,"column":10,"nodeType":"166","messageId":"167","endLine":43,"endColumn":15},{"ruleId":"177","severity":1,"message":"178","line":149,"column":6,"nodeType":"179","endLine":149,"endColumn":19,"suggestions":"180"},{"ruleId":"171","severity":1,"message":"172","line":159,"column":34,"nodeType":"173","messageId":"174","endLine":159,"endColumn":36},{"ruleId":"177","severity":1,"message":"178","line":168,"column":6,"nodeType":"179","endLine":168,"endColumn":19,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":284,"column":17,"nodeType":"184","endLine":287,"endColumn":19},{"ruleId":"182","severity":1,"message":"183","line":313,"column":17,"nodeType":"184","endLine":316,"endColumn":19},{"ruleId":"182","severity":1,"message":"183","line":341,"column":17,"nodeType":"184","endLine":344,"endColumn":19},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"164","severity":1,"message":"189","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":14},{"ruleId":"164","severity":1,"message":"190","line":88,"column":13,"nodeType":"166","messageId":"167","endLine":88,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":219,"column":21,"nodeType":"193","endLine":219,"endColumn":36},{"ruleId":"185","replacedBy":"194"},{"ruleId":"187","replacedBy":"195"},{"ruleId":"164","severity":1,"message":"196","line":103,"column":7,"nodeType":"166","messageId":"167","endLine":103,"endColumn":20},{"ruleId":"185","replacedBy":"197"},{"ruleId":"187","replacedBy":"198"},{"ruleId":"164","severity":1,"message":"199","line":3,"column":3,"nodeType":"166","messageId":"167","endLine":3,"endColumn":9},{"ruleId":"164","severity":1,"message":"200","line":86,"column":11,"nodeType":"166","messageId":"167","endLine":86,"endColumn":22},{"ruleId":"164","severity":1,"message":"201","line":86,"column":24,"nodeType":"166","messageId":"167","endLine":86,"endColumn":30},{"ruleId":"164","severity":1,"message":"202","line":87,"column":9,"nodeType":"166","messageId":"167","endLine":87,"endColumn":16},{"ruleId":"164","severity":1,"message":"203","line":162,"column":7,"nodeType":"166","messageId":"167","endLine":162,"endColumn":18},{"ruleId":"164","severity":1,"message":"204","line":7,"column":3,"nodeType":"166","messageId":"167","endLine":7,"endColumn":7},{"ruleId":"164","severity":1,"message":"205","line":8,"column":3,"nodeType":"166","messageId":"167","endLine":8,"endColumn":13},{"ruleId":"164","severity":1,"message":"206","line":9,"column":3,"nodeType":"166","messageId":"167","endLine":9,"endColumn":17},{"ruleId":"164","severity":1,"message":"207","line":25,"column":8,"nodeType":"166","messageId":"167","endLine":25,"endColumn":16},{"ruleId":"164","severity":1,"message":"208","line":26,"column":8,"nodeType":"166","messageId":"167","endLine":26,"endColumn":12},{"ruleId":"164","severity":1,"message":"209","line":29,"column":8,"nodeType":"166","messageId":"167","endLine":29,"endColumn":18},{"ruleId":"164","severity":1,"message":"176","line":111,"column":10,"nodeType":"166","messageId":"167","endLine":111,"endColumn":15},{"ruleId":"177","severity":1,"message":"178","line":186,"column":6,"nodeType":"179","endLine":186,"endColumn":8,"suggestions":"210"},{"ruleId":"182","severity":1,"message":"183","line":296,"column":15,"nodeType":"184","endLine":296,"endColumn":55},{"ruleId":"171","severity":1,"message":"211","line":324,"column":29,"nodeType":"173","messageId":"212","endLine":324,"endColumn":31},{"ruleId":"171","severity":1,"message":"211","line":344,"column":29,"nodeType":"173","messageId":"212","endLine":344,"endColumn":31},{"ruleId":"164","severity":1,"message":"213","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"214","line":12,"column":8,"nodeType":"166","messageId":"167","endLine":12,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":44,"column":34,"nodeType":"173","messageId":"174","endLine":44,"endColumn":36},{"ruleId":"177","severity":1,"message":"215","line":57,"column":6,"nodeType":"179","endLine":57,"endColumn":8,"suggestions":"216"},{"ruleId":"164","severity":1,"message":"217","line":123,"column":10,"nodeType":"166","messageId":"167","endLine":123,"endColumn":28},{"ruleId":"164","severity":1,"message":"218","line":144,"column":9,"nodeType":"166","messageId":"167","endLine":144,"endColumn":23},{"ruleId":"171","severity":1,"message":"219","line":150,"column":20,"nodeType":"173","messageId":"174","endLine":150,"endColumn":22},{"ruleId":"220","severity":1,"message":"221","line":272,"column":11,"nodeType":"193","endLine":274,"endColumn":12},{"ruleId":"164","severity":1,"message":"207","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":16},{"ruleId":"185","replacedBy":"222"},{"ruleId":"187","replacedBy":"223"},{"ruleId":"164","severity":1,"message":"200","line":30,"column":27,"nodeType":"166","messageId":"167","endLine":30,"endColumn":38},{"ruleId":"182","severity":1,"message":"183","line":98,"column":11,"nodeType":"184","endLine":98,"endColumn":62},{"ruleId":"182","severity":1,"message":"183","line":116,"column":13,"nodeType":"184","endLine":116,"endColumn":38},{"ruleId":"182","severity":1,"message":"183","line":219,"column":13,"nodeType":"184","endLine":219,"endColumn":38},{"ruleId":"164","severity":1,"message":"224","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":15},{"ruleId":"164","severity":1,"message":"200","line":11,"column":11,"nodeType":"166","messageId":"167","endLine":11,"endColumn":22},{"ruleId":"225","severity":1,"message":"226","line":51,"column":18,"nodeType":"227","messageId":"228","endLine":51,"endColumn":20},{"ruleId":"164","severity":1,"message":"229","line":14,"column":7,"nodeType":"166","messageId":"167","endLine":14,"endColumn":17},{"ruleId":"164","severity":1,"message":"230","line":36,"column":7,"nodeType":"166","messageId":"167","endLine":36,"endColumn":21},{"ruleId":"164","severity":1,"message":"231","line":50,"column":10,"nodeType":"166","messageId":"167","endLine":50,"endColumn":18},{"ruleId":"164","severity":1,"message":"232","line":58,"column":9,"nodeType":"166","messageId":"167","endLine":58,"endColumn":21},{"ruleId":"164","severity":1,"message":"233","line":63,"column":9,"nodeType":"166","messageId":"167","endLine":63,"endColumn":20},{"ruleId":"177","severity":1,"message":"234","line":157,"column":6,"nodeType":"179","endLine":157,"endColumn":8,"suggestions":"235"},{"ruleId":"182","severity":1,"message":"183","line":212,"column":15,"nodeType":"184","endLine":212,"endColumn":74},{"ruleId":"191","severity":1,"message":"192","line":216,"column":17,"nodeType":"193","endLine":216,"endColumn":32},{"ruleId":"236","severity":1,"message":"237","line":17,"column":7,"nodeType":"166","messageId":"238","endLine":17,"endColumn":11},{"ruleId":"182","severity":1,"message":"183","line":24,"column":9,"nodeType":"184","endLine":24,"endColumn":35},{"ruleId":"182","severity":1,"message":"183","line":61,"column":9,"nodeType":"184","endLine":61,"endColumn":66},{"ruleId":"182","severity":1,"message":"183","line":76,"column":11,"nodeType":"184","endLine":76,"endColumn":60},{"ruleId":"182","severity":1,"message":"183","line":92,"column":9,"nodeType":"184","endLine":92,"endColumn":54},{"ruleId":"177","severity":1,"message":"239","line":41,"column":6,"nodeType":"179","endLine":41,"endColumn":18,"suggestions":"240"},{"ruleId":"171","severity":1,"message":"211","line":44,"column":39,"nodeType":"173","messageId":"212","endLine":44,"endColumn":41},{"ruleId":"177","severity":1,"message":"178","line":67,"column":6,"nodeType":"179","endLine":67,"endColumn":8,"suggestions":"241"},"no-unused-vars","'teamList' is assigned a value but never used.","Identifier","unusedVar","'setTeamList' is assigned a value but never used.","'already' is assigned a value but never used.","'setAlready' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'DateTimePicker' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.","ArrayExpression",["242"],["243"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["244"],"no-negated-in-lhs",["245"],"'moment' is defined but never used.","'uploadTask' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["244"],["245"],"'CardContainer' is assigned a value but never used.",["244"],["245"],"'Button' is defined but never used.","'currentUser' is assigned a value but never used.","'logOut' is assigned a value but never used.","'history' is assigned a value but never used.","'customMedia' is assigned a value but never used.","'Grid' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'TeamTodo' is defined but never used.","'News' is defined but never used.","'HashLoader' is defined but never used.",["246"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useState' is defined but never used.","'firebase' is defined but never used.","React Hook React.useEffect has missing dependencies: 'currentUser.uid' and 'teamName'. Either include them or remove the dependency array.",["247"],"'databaseSideDelete' is assigned a value but never used.","'databaseDelete' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","react/jsx-no-duplicate-props","No duplicate props allowed",["244"],["245"],"'navIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'StyledMenu' is assigned a value but never used.","'StyledMenuItem' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleSource' is assigned a value but never used.","'handleClick' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.",["248"],"no-redeclare","'date' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'array' and 'colors'. Either include them or remove the dependency array.",["249"],["250"],{"desc":"251","fix":"252"},{"desc":"251","fix":"253"},"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"254","fix":"262"},"Update the dependencies array to be: [UrlTeamName, currentUser.uid]",{"range":"263","text":"264"},{"range":"265","text":"264"},"Update the dependencies array to be: [currentUser.uid]",{"range":"266","text":"267"},"Update the dependencies array to be: [currentUser.uid, teamName]",{"range":"268","text":"269"},"Update the dependencies array to be: [getWeather]",{"range":"270","text":"271"},"Update the dependencies array to be: [array, colors, todoLength]",{"range":"272","text":"273"},{"range":"274","text":"267"},[4723,4736],"[UrlTeamName, currentUser.uid]",[5279,5292],[4969,4971],"[currentUser.uid]",[1825,1827],"[currentUser.uid, teamName]",[4430,4432],"[getWeather]",[1109,1121],"[array, colors, todoLength]",[1762,1764]]